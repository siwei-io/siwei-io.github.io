<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Nebula Graph - Category - siwei.io</title>
        <link>https://siwei.io/en/categories/nebula-graph/</link>
        <description>Nebula Graph - Category - siwei.io</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>weyl.gu@gmail.com (Wey Gu)</managingEditor>
            <webMaster>weyl.gu@gmail.com (Wey Gu)</webMaster><lastBuildDate>Tue, 19 Apr 2022 17:19:11 &#43;0800</lastBuildDate><atom:link href="https://siwei.io/en/categories/nebula-graph/" rel="self" type="application/rss+xml" /><item>
    <title>Spark on Nebula Graph</title>
    <link>https://siwei.io/en/spark-on-nebula-graph/</link>
    <pubDate>Tue, 19 Apr 2022 17:19:11 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/en/spark-on-nebula-graph/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p>What could be done with Spark and PySpark on top of Nebula Graph, this post covers everything we should know.</p>
</blockquote>
<p>In this article, I am trying walk you through all three Spark projects of Nebula Graph with some runnable hands-on examples. Also, I managed to make PySpark usable with Nebula Graph Spark Connector, which will be contributed to the Docs later.</p>
<h2 id="the-three-spark-projects-for-nebula-graph" class="headerLink">
    <a href="#the-three-spark-projects-for-nebula-graph" class="header-mark"></a>1 The three Spark projects for Nebula Graph</h2><p>I used to draw a sketch around all data importing methods of Nebula Graph <a href="https://www.siwei.io/sketches/nebula-data-import-options/" target="_blank" rel="noopener noreffer">here</a>, where all three of the Spark based Nebula Graph projects were already briefly introduced. In this article, instead, a slightly deeper dive on all of them will be made based on my recent work on them.</p>
<p>TL;DR</p>
<ul>
<li>Nebula Spark Connector is a Spark Lib to enable spark application reading from and writing to Nebula Graph in form of dataframe.</li>
<li>Nebula Exchange, built on top of Nebula Spark Connector, is a Spark Lib and Application to exchange(for Open Source version, it&rsquo;s one way: write, whereas for enterprise version it&rsquo;s bidirectional) different data sources like(MySQL, Neo4j, PostgreSQL, Clickhouse, Hive etc.). Besides write directly to Nebula Graph, it could optionally generate SST files to be ingested into Nebula Graph to off load the storage computation outside of the Nebula Graph cluster.</li>
<li>Nebula Algorithm, built on top of Nebula Spark Connector and GraphX, is an Spark Lib and Application to run de facto graph algorithms(pagerank, LPA etc&hellip;) on a graph from Nebula Graph.</li>
</ul>
<p>Then let&rsquo;s have the long verson of those spark projects more on how-to perspectives.</p>
<h2 id="spark-connector" class="headerLink">
    <a href="#spark-connector" class="header-mark"></a>2 Spark-Connector</h2><ul>
<li>Codebase: <a href="https://github.com/vesoft-inc/nebula-spark-connector" target="_blank" rel="noopener noreffer">https://github.com/vesoft-inc/nebula-spark-connector</a></li>
<li>Documentation: <a href="https://docs.nebula-graph.io/3.0.2/nebula-spark-connector/" target="_blank" rel="noopener noreffer">https://docs.nebula-graph.io/3.0.2/nebula-spark-connector/</a> (it&rsquo;s versioned, as for now, I put the lastest released version 3.0.2 here)</li>
<li>Jar Package: <a href="https://repo1.maven.org/maven2/com/vesoft/nebula-spark-connector/" target="_blank" rel="noopener noreffer">https://repo1.maven.org/maven2/com/vesoft/nebula-spark-connector/</a></li>
<li>Code Examples: <a href="https://github.com/vesoft-inc/nebula-spark-connector/tree/master/example" target="_blank" rel="noopener noreffer">example</a></li>
</ul>
<h3 id="nebula-graph-spark-reader" class="headerLink">
    <a href="#nebula-graph-spark-reader" class="header-mark"></a>2.1 Nebula Graph Spark Reader</h3><p>To read data from Nebula Graph, i.e. vertex, Nebula Spark Connector will scan all storage instances who hold given label(TAG): <code>withLabel(&quot;player&quot;)</code>, and we could optionally specify the properties of the vertex: <code>withReturnCols(List(&quot;name&quot;, &quot;age&quot;))</code>.</p>
<p>With needed configuration being provided, a call of <code>spark.read.nebula.loadVerticesToDF</code> will return dataframe of the Vertex Scan call towards Nebula Graph:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-scala" data-lang="scala"><span class="line"><span class="cl">  <span class="k">def</span> <span class="n">readVertex</span><span class="o">(</span><span class="n">spark</span><span class="k">:</span> <span class="kt">SparkSession</span><span class="o">)</span><span class="k">:</span> <span class="kt">Unit</span> <span class="o">=</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="nc">LOG</span><span class="o">.</span><span class="n">info</span><span class="o">(</span><span class="s">&#34;start to read nebula vertices&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">val</span> <span class="n">config</span> <span class="k">=</span>
</span></span><span class="line"><span class="cl">      <span class="nc">NebulaConnectionConfig</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span><span class="n">builder</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span><span class="n">withMetaAddress</span><span class="o">(</span><span class="s">&#34;metad0:9559,metad1:9559,metad2:9559&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span><span class="n">withConenctionRetry</span><span class="o">(</span><span class="mi">2</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span><span class="n">build</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="k">val</span> <span class="n">nebulaReadVertexConfig</span><span class="k">:</span> <span class="kt">ReadNebulaConfig</span> <span class="o">=</span> <span class="nc">ReadNebulaConfig</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">builder</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withSpace</span><span class="o">(</span><span class="s">&#34;basketballplayer&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withLabel</span><span class="o">(</span><span class="s">&#34;player&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withNoColumn</span><span class="o">(</span><span class="kc">false</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withReturnCols</span><span class="o">(</span><span class="nc">List</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;age&#34;</span><span class="o">))</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withLimit</span><span class="o">(</span><span class="mi">10</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withPartitionNum</span><span class="o">(</span><span class="mi">10</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">build</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="k">val</span> <span class="n">vertex</span> <span class="k">=</span> <span class="n">spark</span><span class="o">.</span><span class="n">read</span><span class="o">.</span><span class="n">nebula</span><span class="o">(</span><span class="n">config</span><span class="o">,</span> <span class="n">nebulaReadVertexConfig</span><span class="o">).</span><span class="n">loadVerticesToDF</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">vertex</span><span class="o">.</span><span class="n">printSchema</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">vertex</span><span class="o">.</span><span class="n">show</span><span class="o">(</span><span class="mi">20</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">println</span><span class="o">(</span><span class="s">&#34;vertex count: &#34;</span> <span class="o">+</span> <span class="n">vertex</span><span class="o">.</span><span class="n">count</span><span class="o">())</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>It&rsquo;s similar for the writor part and one big difference here is the wrinting path is done via GraphD as underlying Spark Connector is shooting nGQL <code>INSERT</code> queries.</p>
<p>Then let&rsquo;s do a hands-on end to end practise.</p>
<h3 id="hands-on-spark-connector" class="headerLink">
    <a href="#hands-on-spark-connector" class="header-mark"></a>2.2 Hands-on Spark Connector</h3><p>Prerequisites: it&rsquo;s assumed below procedure being run on a Linux Machine with internet connection, ideally with Docker and Docker-Compose preinstalled.</p>
<h4 id="bootstrap-a-nebula-graph-cluster" class="headerLink">
    <a href="#bootstrap-a-nebula-graph-cluster" class="header-mark"></a>2.2.1 Bootstrap a Nebula Graph Cluster</h4><p>Firstly, let&rsquo;s deploy Nebula Graph Core v3.0 and Nebula Studio with <a href="https://github.com/wey-gu/nebula-up/" target="_blank" rel="noopener noreffer">Nebula-Up</a>, it will try to install Docker and Docker-Compose for us, in case it failed, please try install Docker and Docker-Compose on your own first.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">curl -fsSL nebula-up.siwei.io/install.sh <span class="p">|</span> bash -s -- v3.0
</span></span></code></pre></td></tr></table>
</div>
</div><p>After the above script being executed, let&rsquo;s connect to it with Nebula-Console, the command line client for Nebula Graph.</p>
<ul>
<li>Enter the container with console</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">~/.nebula-up/console.sh
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>Connect to the Nebula Graph</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">nebula-console -addr graphd -port <span class="m">9669</span> -user root -p nebula
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>
<p>Activate Storage Instances, and check hosts status</p>
<blockquote>
<p>ref: <a href="https://docs.nebula-graph.io/3.0.2/4.deployment-and-installation/manage-storage-host/" target="_blank" rel="noopener noreffer">https://docs.nebula-graph.io/3.0.2/4.deployment-and-installation/manage-storage-host/</a></p>
</blockquote>
</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">ADD HOSTS <span class="s2">&#34;storaged0&#34;</span>:9779,<span class="s2">&#34;storaged1&#34;</span>:9779,<span class="s2">&#34;storaged2&#34;</span>:9779<span class="p">;</span>
</span></span><span class="line"><span class="cl">SHOW HOSTS<span class="p">;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>Load the <a href="https://docs.nebula-graph.io/3.0.2/3.ngql-guide/1.nGQL-overview/1.overview/#example_data_basketballplayer" target="_blank" rel="noopener noreffer">test graph data</a>, which will take one or two minitues to finish.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">:play basketballplayer<span class="p">;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="create-a-spark-playground" class="headerLink">
    <a href="#create-a-spark-playground" class="header-mark"></a>2.2.2 Create a Spark playground</h4><p>Thanks to <a href="https://github.com/big-data-europe/docker-spark" target="_blank" rel="noopener noreffer">Big data europe</a>, it&rsquo;s quite handly to do so:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker run --name spark-master-0 --network nebula-docker-compose_nebula-net <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -h spark-master-0 -e <span class="nv">ENABLE_INIT_DAEMON</span><span class="o">=</span><span class="nb">false</span> -d <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -v <span class="si">${</span><span class="nv">PWD</span><span class="si">}</span>/:/root <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    bde2020/spark-master:2.4.5-hadoop2.7
</span></span></code></pre></td></tr></table>
</div>
</div><p>In above one line command, we created a container named <code>spark-master-0</code> with a built-in hadoop 2.7 and spark 2.4.5, connected to the Nebula Graph cluster in its docker network named <code>nebula-docker-compose_nebula-net</code>, and it mapped the current path to <code>/root</code> of the spark container.</p>
<p>Then, we could access to the spark env container with:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker <span class="nb">exec</span> -it spark-master-0 bash
</span></span></code></pre></td></tr></table>
</div>
</div><p>Optionally, we could install <code>mvn</code> inside the container:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker <span class="nb">exec</span> -it spark-master-0 bash
</span></span><span class="line"><span class="cl"><span class="c1"># in the container shell</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">MAVEN_VERSION</span><span class="o">=</span>3.5.4
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">MAVEN_HOME</span><span class="o">=</span>/usr/lib/mvn
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">PATH</span><span class="o">=</span><span class="nv">$MAVEN_HOME</span>/bin:<span class="nv">$PATH</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">wget http://archive.apache.org/dist/maven/maven-3/<span class="nv">$MAVEN_VERSION</span>/binaries/apache-maven-<span class="nv">$MAVEN_VERSION</span>-bin.tar.gz <span class="o">&amp;&amp;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  tar -zxvf apache-maven-<span class="nv">$MAVEN_VERSION</span>-bin.tar.gz <span class="o">&amp;&amp;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  rm apache-maven-<span class="nv">$MAVEN_VERSION</span>-bin.tar.gz <span class="o">&amp;&amp;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  mv apache-maven-<span class="nv">$MAVEN_VERSION</span> /usr/lib/mvn
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">which /usr/lib/mvn/bin/mvn
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="run-spark-connector-example" class="headerLink">
    <a href="#run-spark-connector-example" class="header-mark"></a>2.2.3 Run spark connector example</h4><p>Let&rsquo;s clone the connector and the example code base, and build(or place the connector Jar package) the connector:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git clone https://github.com/vesoft-inc/nebula-spark-connector.git
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">docker <span class="nb">exec</span> -it spark-master-0 bash
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> /root/nebula-spark-connector
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/usr/lib/mvn/bin/mvn install -Dgpg.skip -Dmaven.javadoc.skip<span class="o">=</span><span class="nb">true</span> -Dmaven.test.skip<span class="o">=</span><span class="nb">true</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then we replace the example code:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">vi example/src/main/scala/com/vesoft/nebula/examples/connector/NebulaSparkReaderExample.scala
</span></span></code></pre></td></tr></table>
</div>
</div><p>We put the code as the following, where two functions <code>readVertex</code> and <code>readEdges</code> was created on the <code>basketballplayer</code> graph space:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-scala" data-lang="scala"><span class="line"><span class="cl"><span class="k">package</span> <span class="nn">com.vesoft.nebula.examples.connector</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">import</span> <span class="nn">com.facebook.thrift.protocol.TCompactProtocol</span>
</span></span><span class="line"><span class="cl"><span class="k">import</span> <span class="nn">com.vesoft.nebula.connector.connector.NebulaDataFrameReader</span>
</span></span><span class="line"><span class="cl"><span class="k">import</span> <span class="nn">com.vesoft.nebula.connector.</span><span class="o">{</span><span class="nc">NebulaConnectionConfig</span><span class="o">,</span> <span class="nc">ReadNebulaConfig</span><span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="k">import</span> <span class="nn">org.apache.spark.SparkConf</span>
</span></span><span class="line"><span class="cl"><span class="k">import</span> <span class="nn">org.apache.spark.sql.SparkSession</span>
</span></span><span class="line"><span class="cl"><span class="k">import</span> <span class="nn">org.slf4j.LoggerFactory</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">object</span> <span class="nc">NebulaSparkReaderExample</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">private</span> <span class="k">val</span> <span class="nc">LOG</span> <span class="k">=</span> <span class="nc">LoggerFactory</span><span class="o">.</span><span class="n">getLogger</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="n">getClass</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">def</span> <span class="n">main</span><span class="o">(</span><span class="n">args</span><span class="k">:</span> <span class="kt">Array</span><span class="o">[</span><span class="kt">String</span><span class="o">])</span><span class="k">:</span> <span class="kt">Unit</span> <span class="o">=</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">val</span> <span class="n">sparkConf</span> <span class="k">=</span> <span class="k">new</span> <span class="nc">SparkConf</span>
</span></span><span class="line"><span class="cl">    <span class="n">sparkConf</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">set</span><span class="o">(</span><span class="s">&#34;spark.serializer&#34;</span><span class="o">,</span> <span class="s">&#34;org.apache.spark.serializer.KryoSerializer&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">registerKryoClasses</span><span class="o">(</span><span class="nc">Array</span><span class="o">[</span><span class="kt">Class</span><span class="o">[</span><span class="k">_</span><span class="o">]](</span><span class="n">classOf</span><span class="o">[</span><span class="kt">TCompactProtocol</span><span class="o">]))</span>
</span></span><span class="line"><span class="cl">    <span class="k">val</span> <span class="n">spark</span> <span class="k">=</span> <span class="nc">SparkSession</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">builder</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">master</span><span class="o">(</span><span class="s">&#34;local&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">config</span><span class="o">(</span><span class="n">sparkConf</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">getOrCreate</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">readVertex</span><span class="o">(</span><span class="n">spark</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">readEdges</span><span class="o">(</span><span class="n">spark</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">spark</span><span class="o">.</span><span class="n">close</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">def</span> <span class="n">readVertex</span><span class="o">(</span><span class="n">spark</span><span class="k">:</span> <span class="kt">SparkSession</span><span class="o">)</span><span class="k">:</span> <span class="kt">Unit</span> <span class="o">=</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="nc">LOG</span><span class="o">.</span><span class="n">info</span><span class="o">(</span><span class="s">&#34;start to read nebula vertices&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">val</span> <span class="n">config</span> <span class="k">=</span>
</span></span><span class="line"><span class="cl">      <span class="nc">NebulaConnectionConfig</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span><span class="n">builder</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span><span class="n">withMetaAddress</span><span class="o">(</span><span class="s">&#34;metad0:9559,metad1:9559,metad2:9559&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span><span class="n">withConenctionRetry</span><span class="o">(</span><span class="mi">2</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span><span class="n">build</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="k">val</span> <span class="n">nebulaReadVertexConfig</span><span class="k">:</span> <span class="kt">ReadNebulaConfig</span> <span class="o">=</span> <span class="nc">ReadNebulaConfig</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">builder</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withSpace</span><span class="o">(</span><span class="s">&#34;basketballplayer&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withLabel</span><span class="o">(</span><span class="s">&#34;player&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withNoColumn</span><span class="o">(</span><span class="kc">false</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withReturnCols</span><span class="o">(</span><span class="nc">List</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;age&#34;</span><span class="o">))</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withLimit</span><span class="o">(</span><span class="mi">10</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withPartitionNum</span><span class="o">(</span><span class="mi">10</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">build</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="k">val</span> <span class="n">vertex</span> <span class="k">=</span> <span class="n">spark</span><span class="o">.</span><span class="n">read</span><span class="o">.</span><span class="n">nebula</span><span class="o">(</span><span class="n">config</span><span class="o">,</span> <span class="n">nebulaReadVertexConfig</span><span class="o">).</span><span class="n">loadVerticesToDF</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">vertex</span><span class="o">.</span><span class="n">printSchema</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">vertex</span><span class="o">.</span><span class="n">show</span><span class="o">(</span><span class="mi">20</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">println</span><span class="o">(</span><span class="s">&#34;vertex count: &#34;</span> <span class="o">+</span> <span class="n">vertex</span><span class="o">.</span><span class="n">count</span><span class="o">())</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">def</span> <span class="n">readEdges</span><span class="o">(</span><span class="n">spark</span><span class="k">:</span> <span class="kt">SparkSession</span><span class="o">)</span><span class="k">:</span> <span class="kt">Unit</span> <span class="o">=</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="nc">LOG</span><span class="o">.</span><span class="n">info</span><span class="o">(</span><span class="s">&#34;start to read nebula edges&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">val</span> <span class="n">config</span> <span class="k">=</span>
</span></span><span class="line"><span class="cl">      <span class="nc">NebulaConnectionConfig</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span><span class="n">builder</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span><span class="n">withMetaAddress</span><span class="o">(</span><span class="s">&#34;metad0:9559,metad1:9559,metad2:9559&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span><span class="n">withTimeout</span><span class="o">(</span><span class="mi">6000</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span><span class="n">withConenctionRetry</span><span class="o">(</span><span class="mi">2</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span><span class="n">build</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="k">val</span> <span class="n">nebulaReadEdgeConfig</span><span class="k">:</span> <span class="kt">ReadNebulaConfig</span> <span class="o">=</span> <span class="nc">ReadNebulaConfig</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">builder</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withSpace</span><span class="o">(</span><span class="s">&#34;basketballplayer&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withLabel</span><span class="o">(</span><span class="s">&#34;follow&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withNoColumn</span><span class="o">(</span><span class="kc">false</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withReturnCols</span><span class="o">(</span><span class="nc">List</span><span class="o">(</span><span class="s">&#34;degree&#34;</span><span class="o">))</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withLimit</span><span class="o">(</span><span class="mi">10</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withPartitionNum</span><span class="o">(</span><span class="mi">10</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">build</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="k">val</span> <span class="n">edge</span> <span class="k">=</span> <span class="n">spark</span><span class="o">.</span><span class="n">read</span><span class="o">.</span><span class="n">nebula</span><span class="o">(</span><span class="n">config</span><span class="o">,</span> <span class="n">nebulaReadEdgeConfig</span><span class="o">).</span><span class="n">loadEdgesToDF</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">edge</span><span class="o">.</span><span class="n">printSchema</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">edge</span><span class="o">.</span><span class="n">show</span><span class="o">(</span><span class="mi">20</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">println</span><span class="o">(</span><span class="s">&#34;edge count: &#34;</span> <span class="o">+</span> <span class="n">edge</span><span class="o">.</span><span class="n">count</span><span class="o">())</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then build it:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> example
</span></span><span class="line"><span class="cl">/usr/lib/mvn/bin/mvn install -Dgpg.skip -Dmaven.javadoc.skip<span class="o">=</span><span class="nb">true</span> -Dmaven.test.skip<span class="o">=</span><span class="nb">true</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Execute it on spark:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">/spark/bin/spark-submit --master <span class="s2">&#34;local&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --class com.vesoft.nebula.examples.connector.NebulaSparkReaderExample <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --driver-memory 16g target/example-3.0-SNAPSHOT.jar
</span></span></code></pre></td></tr></table>
</div>
</div><p>And the result should include:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">22/04/19 07:29:34 INFO DAGScheduler: Job 1 finished: show at NebulaSparkReaderExample.scala:57, took 0.199310 s
</span></span><span class="line"><span class="cl">+---------+------------------+---+
</span></span><span class="line"><span class="cl">|_vertexId|              name|age|
</span></span><span class="line"><span class="cl">+---------+------------------+---+
</span></span><span class="line"><span class="cl">|player105|       Danny Green| 31|
</span></span><span class="line"><span class="cl">|player109|    Tiago Splitter| 34|
</span></span><span class="line"><span class="cl">|player111|        David West| 38|
</span></span><span class="line"><span class="cl">|player118| Russell Westbrook| 30|
</span></span><span class="line"><span class="cl">|player143|Kristaps Porzingis| 23|
</span></span><span class="line"><span class="cl">|player114|     Tracy McGrady| 39|
</span></span><span class="line"><span class="cl">|player150|       Luka Doncic| 20|
</span></span><span class="line"><span class="cl">|player103|          Rudy Gay| 32|
</span></span><span class="line"><span class="cl">|player113|   Dejounte Murray| 29|
</span></span><span class="line"><span class="cl">|player121|        Chris Paul| 33|
</span></span><span class="line"><span class="cl">|player128|   Carmelo Anthony| 34|
</span></span><span class="line"><span class="cl">|player130|       Joel Embiid| 25|
</span></span><span class="line"><span class="cl">|player136|        Steve Nash| 45|
</span></span><span class="line"><span class="cl">|player108|        Boris Diaw| 36|
</span></span><span class="line"><span class="cl">|player122|    DeAndre Jordan| 30|
</span></span><span class="line"><span class="cl">|player123|       Ricky Rubio| 28|
</span></span><span class="line"><span class="cl">|player139|        Marc Gasol| 34|
</span></span><span class="line"><span class="cl">|player142|     Klay Thompson| 29|
</span></span><span class="line"><span class="cl">|player145|      JaVale McGee| 31|
</span></span><span class="line"><span class="cl">|player102| LaMarcus Aldridge| 33|
</span></span><span class="line"><span class="cl">+---------+------------------+---+
</span></span><span class="line"><span class="cl">only showing top 20 rows
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">22/04/19 07:29:36 INFO DAGScheduler: Job 4 finished: show at NebulaSparkReaderExample.scala:82, took 0.135543 s
</span></span><span class="line"><span class="cl">+---------+---------+-----+------+
</span></span><span class="line"><span class="cl">|   _srcId|   _dstId|_rank|degree|
</span></span><span class="line"><span class="cl">+---------+---------+-----+------+
</span></span><span class="line"><span class="cl">|player105|player100|    0|    70|
</span></span><span class="line"><span class="cl">|player105|player104|    0|    83|
</span></span><span class="line"><span class="cl">|player105|player116|    0|    80|
</span></span><span class="line"><span class="cl">|player109|player100|    0|    80|
</span></span><span class="line"><span class="cl">|player109|player125|    0|    90|
</span></span><span class="line"><span class="cl">|player118|player120|    0|    90|
</span></span><span class="line"><span class="cl">|player118|player131|    0|    90|
</span></span><span class="line"><span class="cl">|player143|player150|    0|    90|
</span></span><span class="line"><span class="cl">|player114|player103|    0|    90|
</span></span><span class="line"><span class="cl">|player114|player115|    0|    90|
</span></span><span class="line"><span class="cl">|player114|player140|    0|    90|
</span></span><span class="line"><span class="cl">|player150|player120|    0|    80|
</span></span><span class="line"><span class="cl">|player150|player137|    0|    90|
</span></span><span class="line"><span class="cl">|player150|player143|    0|    90|
</span></span><span class="line"><span class="cl">|player103|player102|    0|    70|
</span></span><span class="line"><span class="cl">|player113|player100|    0|    99|
</span></span><span class="line"><span class="cl">|player113|player101|    0|    99|
</span></span><span class="line"><span class="cl">|player113|player104|    0|    99|
</span></span><span class="line"><span class="cl">|player113|player105|    0|    99|
</span></span><span class="line"><span class="cl">|player113|player106|    0|    99|
</span></span><span class="line"><span class="cl">+---------+---------+-----+------+
</span></span><span class="line"><span class="cl">only showing top 20 rows
</span></span></code></pre></td></tr></table>
</div>
</div><p>And actually there are more examples under the repo, especially one for GraphX, you could try exploring youself for that part. Please be noted in GraphX it assumed vertex ID to be in numeric type, thus for string typed vertex ID case a convertion on the fly is needed, please refer to <a href="https://github.com/vesoft-inc/nebula-algorithm/blob/a82d7092d928a2f3abc45a727c24afb888ff8e4f/example/src/main/scala/com/vesoft/nebula/algorithm/PageRankExample.scala#L31" target="_blank" rel="noopener noreffer">the example in Nebula Algorithom</a> on how to mitigate that.</p>
<h2 id="exchange" class="headerLink">
    <a href="#exchange" class="header-mark"></a>3 Exchange</h2><ul>
<li>Codebase: <a href="https://github.com/vesoft-inc/nebula-exchange/" target="_blank" rel="noopener noreffer">https://github.com/vesoft-inc/nebula-exchange/</a></li>
<li>Documentation: <a href="https://docs.nebula-graph.io/3.0.2/nebula-exchange/about-exchange/ex-ug-what-is-exchange/" target="_blank" rel="noopener noreffer">https://docs.nebula-graph.io/3.0.2/nebula-exchange/about-exchange/ex-ug-what-is-exchange/</a> (it&rsquo;s versioned, as for now, I put the lastest released version 3.0.2 here)</li>
<li>Jar Package: <a href="https://github.com/vesoft-inc/nebula-exchange/releases" target="_blank" rel="noopener noreffer">https://github.com/vesoft-inc/nebula-exchange/releases</a></li>
<li>Configuration Examples: <a href="https://github.com/vesoft-inc/nebula-exchange/blob/master/exchange-common/src/test/resources/application.conf" target="_blank" rel="noopener noreffer">exchange-common/src/test/resources/application.conf</a></li>
</ul>
<p>Nebula Exchange is a Spark Lib/App to read data from multiple sources, then, write to either Nebula Graph directly or into Nebula Graph <a href="https://docs.nebula-graph.io/3.0.2/nebula-exchange/use-exchange/ex-ug-import-from-sst/#step_5_import_the_sst_file" target="_blank" rel="noopener noreffer">SST Files</a>.</p>
<p></p>
<p>The way to leverage Nebula Exchange is only to firstly create the configuration files to let exchange know how data should be fetched and written, then call the exchange package with the conf file specified.</p>
<p>Now let&rsquo;s do a hands on test with the same envrioment created in last chapter.</p>
<h3 id="hands-on-exchange" class="headerLink">
    <a href="#hands-on-exchange" class="header-mark"></a>3.1 Hands-on Exchange</h3><p>Here, we are using Exchange to consume data source from a CSV file, where first column is Vertex ID, and second, third to be properties of &ldquo;name&rdquo; and &ldquo;age&rdquo;.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">player800,<span class="s2">&#34;Foo Bar&#34;</span>,23
</span></span><span class="line"><span class="cl">player801,<span class="s2">&#34;Another Name&#34;</span>,21
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>Let&rsquo;s get into the spark container created in last chapter, and download the Jar package of Nebula Exchange:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker <span class="nb">exec</span> -it spark-master bash
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> /root/
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">wget https://github.com/vesoft-inc/nebula-exchange/releases/download/v3.0.0/nebula-exchange_spark_2.4-3.0.0.jar
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>Create a conf file named <code>exchange.conf</code> in format <code>HOCON</code>, where:
<ul>
<li>under <code>.nebula</code>, information regarding Nebula Graph Cluster were configured</li>
<li>under <code>.tags</code>, information regarding Vertecies like how required fields are reflected to our data source(here it&rsquo;s CSV file) were configured</li>
</ul>
</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span><span class="lnt">89
</span><span class="lnt">90
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zed" data-lang="zed"><span class="line"><span class="cl"><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="err">#</span><span class="w"> </span><span class="n">Spark</span><span class="w"> </span><span class="kn">relation</span><span class="w"> </span><span class="n">config</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="n">spark</span><span class="o">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">app</span><span class="o">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">name</span><span class="o">:</span><span class="w"> </span><span class="n">Nebula</span><span class="w"> </span><span class="n">Exchange</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">master</span><span class="o">:</span><span class="n">local</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">driver</span><span class="o">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">cores</span><span class="o">:</span><span class="w"> </span><span class="err">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">maxResultSize</span><span class="o">:</span><span class="w"> </span><span class="err">1</span><span class="n">G</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">executor</span><span class="o">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">memory</span><span class="o">:</span><span class="w"> </span><span class="err">1</span><span class="n">G</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">cores</span><span class="o">:</span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">max</span><span class="o">:</span><span class="w"> </span><span class="err">16</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="err">#</span><span class="w"> </span><span class="n">Nebula</span><span class="w"> </span><span class="n">Graph</span><span class="w"> </span><span class="kn">relation</span><span class="w"> </span><span class="n">config</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="n">nebula</span><span class="o">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">address</span><span class="o">:</span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">graph</span><span class="o">:</span><span class="p">[</span><span class="err">&#34;</span><span class="n">graphd</span><span class="o">:</span><span class="err">9669&#34;</span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">meta</span><span class="o">:</span><span class="p">[</span><span class="err">&#34;</span><span class="n">metad0</span><span class="o">:</span><span class="err">9559&#34;</span><span class="p">,</span><span class="w"> </span><span class="err">&#34;</span><span class="n">metad1</span><span class="o">:</span><span class="err">9559&#34;</span><span class="p">,</span><span class="w"> </span><span class="err">&#34;</span><span class="n">metad2</span><span class="o">:</span><span class="err">9559&#34;</span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">user</span><span class="o">:</span><span class="w"> </span><span class="n">root</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">pswd</span><span class="o">:</span><span class="w"> </span><span class="n">nebula</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">space</span><span class="o">:</span><span class="w"> </span><span class="n">basketballplayer</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="err">#</span><span class="w"> </span><span class="n">parameters</span><span class="w"> </span><span class="n">for</span><span class="w"> </span><span class="n">SST</span><span class="w"> </span><span class="n">import</span><span class="p">,</span><span class="w"> </span><span class="n">not</span><span class="w"> </span><span class="n">required</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">path</span><span class="o">:</span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">local</span><span class="o">:</span><span class="err">&#34;</span><span class="o">/</span><span class="n">tmp</span><span class="err">&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">remote</span><span class="o">:</span><span class="err">&#34;</span><span class="o">/</span><span class="n">sst</span><span class="err">&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">hdfs</span><span class="p">.</span><span class="n">namenode</span><span class="o">:</span><span class="w"> </span><span class="err">&#34;</span><span class="n">hdfs</span><span class="o">:</span><span class="c1">//localhost:9000&#34;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="err">#</span><span class="w"> </span><span class="n">nebula</span><span class="w"> </span><span class="n">client</span><span class="w"> </span><span class="n">connection</span><span class="w"> </span><span class="n">parameters</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">connection</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">#</span><span class="w"> </span><span class="n">socket</span><span class="w"> </span><span class="n">connect</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="n">execute</span><span class="w"> </span><span class="n">timeout</span><span class="p">,</span><span class="w"> </span><span class="n">unit</span><span class="o">:</span><span class="w"> </span><span class="n">millisecond</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">timeout</span><span class="o">:</span><span class="w"> </span><span class="err">30000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">error</span><span class="o">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">#</span><span class="w"> </span><span class="n">max</span><span class="w"> </span><span class="n">number</span><span class="w"> </span><span class="n">of</span><span class="w"> </span><span class="n">failures</span><span class="p">,</span><span class="w"> </span><span class="n">if</span><span class="w"> </span><span class="n">the</span><span class="w"> </span><span class="n">number</span><span class="w"> </span><span class="n">of</span><span class="w"> </span><span class="n">failures</span><span class="w"> </span><span class="n">is</span><span class="w"> </span><span class="n">bigger</span><span class="w"> </span><span class="n">than</span><span class="w"> </span><span class="n">max</span><span class="p">,</span><span class="w"> </span><span class="n">then</span><span class="w"> </span><span class="n">exit</span><span class="w"> </span><span class="n">the</span><span class="w"> </span><span class="n">application</span><span class="p">.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">max</span><span class="o">:</span><span class="w"> </span><span class="err">32</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">#</span><span class="w"> </span><span class="n">failed</span><span class="w"> </span><span class="n">import</span><span class="w"> </span><span class="n">job</span><span class="w"> </span><span class="n">will</span><span class="w"> </span><span class="n">be</span><span class="w"> </span><span class="n">recorded</span><span class="w"> </span><span class="n">in</span><span class="w"> </span><span class="n">output</span><span class="w"> </span><span class="n">path</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">output</span><span class="o">:</span><span class="w"> </span><span class="o">/</span><span class="nn">tmp/</span><span class="n">errors</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="err">#</span><span class="w"> </span><span class="n">use</span><span class="w"> </span><span class="n">google</span><span class="err">&#39;</span><span class="n">s</span><span class="w"> </span><span class="n">RateLimiter</span><span class="w"> </span><span class="n">to</span><span class="w"> </span><span class="n">limit</span><span class="w"> </span><span class="n">the</span><span class="w"> </span><span class="n">requests</span><span class="w"> </span><span class="n">send</span><span class="w"> </span><span class="n">to</span><span class="w"> </span><span class="n">NebulaGraph</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">rate</span><span class="o">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">#</span><span class="w"> </span><span class="n">the</span><span class="w"> </span><span class="n">stable</span><span class="w"> </span><span class="n">throughput</span><span class="w"> </span><span class="n">of</span><span class="w"> </span><span class="n">RateLimiter</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">limit</span><span class="o">:</span><span class="w"> </span><span class="err">1024</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">#</span><span class="w"> </span><span class="n">Acquires</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="n">permit</span><span class="w"> </span><span class="n">from</span><span class="w"> </span><span class="n">RateLimiter</span><span class="p">,</span><span class="w"> </span><span class="n">unit</span><span class="o">:</span><span class="w"> </span><span class="n">MILLISECONDS</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">#</span><span class="w"> </span><span class="n">if</span><span class="w"> </span><span class="n">it</span><span class="w"> </span><span class="n">can</span><span class="err">&#39;</span><span class="n">t</span><span class="w"> </span><span class="n">be</span><span class="w"> </span><span class="n">obtained</span><span class="w"> </span><span class="n">within</span><span class="w"> </span><span class="n">the</span><span class="w"> </span><span class="n">specified</span><span class="w"> </span><span class="n">timeout</span><span class="p">,</span><span class="w"> </span><span class="n">then</span><span class="w"> </span><span class="n">give</span><span class="w"> </span><span class="n">up</span><span class="w"> </span><span class="n">the</span><span class="w"> </span><span class="n">request</span><span class="p">.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">timeout</span><span class="o">:</span><span class="w"> </span><span class="err">1000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="err">#</span><span class="w"> </span><span class="n">Processing</span><span class="w"> </span><span class="n">tags</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="err">#</span><span class="w"> </span><span class="n">There</span><span class="w"> </span><span class="n">are</span><span class="w"> </span><span class="n">tag</span><span class="w"> </span><span class="n">config</span><span class="w"> </span><span class="n">examples</span><span class="w"> </span><span class="n">for</span><span class="w"> </span><span class="n">different</span><span class="w"> </span><span class="n">dataSources</span><span class="p">.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="n">tags</span><span class="o">:</span><span class="w"> </span><span class="p">[</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="err">#</span><span class="w"> </span><span class="n">HDFS</span><span class="w"> </span><span class="n">csv</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="err">#</span><span class="w"> </span><span class="n">Import</span><span class="w"> </span><span class="n">mode</span><span class="w"> </span><span class="n">is</span><span class="w"> </span><span class="n">client</span><span class="p">,</span><span class="w"> </span><span class="n">just</span><span class="w"> </span><span class="n">change</span><span class="w"> </span><span class="n">type</span><span class="p">.</span><span class="n">sink</span><span class="w"> </span><span class="n">to</span><span class="w"> </span><span class="n">sst</span><span class="w"> </span><span class="n">if</span><span class="w"> </span><span class="n">you</span><span class="w"> </span><span class="n">want</span><span class="w"> </span><span class="n">to</span><span class="w"> </span><span class="n">use</span><span class="w"> </span><span class="n">client</span><span class="w"> </span><span class="n">import</span><span class="w"> </span><span class="n">mode</span><span class="p">.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">name</span><span class="o">:</span><span class="w"> </span><span class="n">player</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">type</span><span class="o">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">source</span><span class="o">:</span><span class="w"> </span><span class="n">csv</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">sink</span><span class="o">:</span><span class="w"> </span><span class="n">client</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">path</span><span class="o">:</span><span class="w"> </span><span class="err">&#34;</span><span class="n">file</span><span class="o">:</span><span class="c1">///root/player.csv&#34;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="w">      </span><span class="err">#</span><span class="w"> </span><span class="n">if</span><span class="w"> </span><span class="n">your</span><span class="w"> </span><span class="n">csv</span><span class="w"> </span><span class="n">file</span><span class="w"> </span><span class="n">has</span><span class="w"> </span><span class="n">no</span><span class="w"> </span><span class="n">header</span><span class="p">,</span><span class="w"> </span><span class="n">then</span><span class="w"> </span><span class="n">use</span><span class="w"> </span><span class="n">_c0</span><span class="p">,</span><span class="n">_c1</span><span class="p">,</span><span class="n">_c2</span><span class="p">,..</span><span class="w"> </span><span class="n">to</span><span class="w"> </span><span class="n">indicate</span><span class="w"> </span><span class="n">fields</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">fields</span><span class="o">:</span><span class="w"> </span><span class="p">[</span><span class="n">_c1</span><span class="p">,</span><span class="w"> </span><span class="n">_c2</span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">nebula</span><span class="p">.</span><span class="n">fields</span><span class="o">:</span><span class="w"> </span><span class="p">[</span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="n">age</span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">vertex</span><span class="o">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">field</span><span class="o">:</span><span class="n">_c0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">separator</span><span class="o">:</span><span class="w"> </span><span class="err">&#34;</span><span class="p">,</span><span class="err">&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">header</span><span class="o">:</span><span class="w"> </span><span class="n">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">batch</span><span class="o">:</span><span class="w"> </span><span class="err">256</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">partition</span><span class="o">:</span><span class="w"> </span><span class="err">32</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>Finally, let&rsquo;s create <code>player.csv</code> and <code>exchange.conf</code>, it should be listed as the following:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># ls -l</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-rw-r--r--    <span class="m">1</span> root     root          <span class="m">1912</span> Apr <span class="m">19</span> 08:21 exchange.conf
</span></span><span class="line"><span class="cl">-rw-r--r--    <span class="m">1</span> root     root     <span class="m">157814140</span> Apr <span class="m">19</span> 08:17 nebula-exchange_spark_2.4-3.0.0.jar
</span></span><span class="line"><span class="cl">-rw-r--r--    <span class="m">1</span> root     root            <span class="m">52</span> Apr <span class="m">19</span> 08:06 player.csv
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>And we could call the exchange as:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">/spark/bin/spark-submit --master <span class="nb">local</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --class com.vesoft.nebula.exchange.Exchange nebula-exchange_spark_2.4-3.0.0.jar <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -c exchange.conf
</span></span></code></pre></td></tr></table>
</div>
</div><p>And the result should be like</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">...
</span></span><span class="line"><span class="cl">22/04/19 08:22:08 INFO Exchange$: import for tag player cost time: 1.32 s
</span></span><span class="line"><span class="cl">22/04/19 08:22:08 INFO Exchange$: Client-Import: batchSuccess.player: 2
</span></span><span class="line"><span class="cl">22/04/19 08:22:08 INFO Exchange$: Client-Import: batchFailure.player: 0
</span></span><span class="line"><span class="cl">...
</span></span></code></pre></td></tr></table>
</div>
</div><p>Please refer to documentation and conf examples for more datasources. For hands on Exchange writing to SST Files, you could refer to both Documentation and <a href="https://www.siwei.io/nebula-exchange-sst-2.x/" target="_blank" rel="noopener noreffer">Nebula Exchange SST 2.x Hands-on Guide</a>.</p>
<h2 id="algorithm" class="headerLink">
    <a href="#algorithm" class="header-mark"></a>4 Algorithm</h2><ul>
<li>Codebase: <a href="https://github.com/vesoft-inc/nebula-algorithm" target="_blank" rel="noopener noreffer">https://github.com/vesoft-inc/nebula-algorithm</a></li>
<li>Documentation: <a href="https://docs.nebula-graph.io/3.0.2/nebula-algorithm/" target="_blank" rel="noopener noreffer">https://docs.nebula-graph.io/3.0.2/nebula-algorithm/</a> (it&rsquo;s versioned, as for now, I put the lastest released version 3.0.2 here)</li>
<li>Jar Package: <a href="https://repo1.maven.org/maven2/com/vesoft/nebula-algorithm/" target="_blank" rel="noopener noreffer">https://repo1.maven.org/maven2/com/vesoft/nebula-algorithm/</a></li>
<li>Code Examples: <a href="example/src/main/scala/com/vesoft/nebula/algorithm" rel="">example/src/main/scala/com/vesoft/nebula/algorithm</a></li>
</ul>
<h3 id="calling-with-spark-submit" class="headerLink">
    <a href="#calling-with-spark-submit" class="header-mark"></a>4.1 Calling with spark submit</h3><p>When we call Nebula Algorithm with spark submit, on how to use perspective, it is quite similar to Exchange. <a href="https://www.siwei.io/en/nebula-livejournal/" target="_blank" rel="noopener noreffer">This post</a> already showed us how to do that in actions.</p>
<h3 id="calling-as-a-lib-in-code" class="headerLink">
    <a href="#calling-as-a-lib-in-code" class="header-mark"></a>4.2 Calling as a lib in code</h3><p>On the other hands, we could call Nebula Algorithm in spark as a Spark Lib, the gain will be:</p>
<ol>
<li>More control/customization on the output format of the algorithm</li>
<li>Possbile to perform algorithm for non-numerical vertex ID cases, see <a href="https://github.com/vesoft-inc/nebula-algorithm/blob/a82d7092d928a2f3abc45a727c24afb888ff8e4f/example/src/main/scala/com/vesoft/nebula/algorithm/PageRankExample.scala#L48" target="_blank" rel="noopener noreffer">here</a></li>
</ol>
<h2 id="pyspark-for-nebula-graph" class="headerLink">
    <a href="#pyspark-for-nebula-graph" class="header-mark"></a>5 PySpark for Nebula Graph</h2><p>PySpark comes with capability to call java/scala packages inside python, thus it&rsquo;s also quite easy to use Spark Connector with Python.</p>
<p>Here I am doing this from the pyspark entrypoint in <code>/spark/bin/pyspark</code>, with connector&rsquo;s Jar package specified with <code>--driver-class-path</code> and <code>--jars</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">docker</span> <span class="n">exec</span> <span class="o">-</span><span class="n">it</span> <span class="n">spark</span><span class="o">-</span><span class="n">master</span><span class="o">-</span><span class="mi">0</span> <span class="n">bash</span>
</span></span><span class="line"><span class="cl"><span class="n">cd</span> <span class="n">root</span>
</span></span><span class="line"><span class="cl"><span class="n">wget</span> <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">repo1</span><span class="o">.</span><span class="n">maven</span><span class="o">.</span><span class="n">org</span><span class="o">/</span><span class="n">maven2</span><span class="o">/</span><span class="n">com</span><span class="o">/</span><span class="n">vesoft</span><span class="o">/</span><span class="n">nebula</span><span class="o">-</span><span class="n">spark</span><span class="o">-</span><span class="n">connector</span><span class="o">/</span><span class="mf">3.0.0</span><span class="o">/</span><span class="n">nebula</span><span class="o">-</span><span class="n">spark</span><span class="o">-</span><span class="n">connector</span><span class="o">-</span><span class="mf">3.0.0</span><span class="o">.</span><span class="n">jar</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">/</span><span class="n">spark</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">pyspark</span> <span class="o">--</span><span class="n">driver</span><span class="o">-</span><span class="n">class</span><span class="o">-</span><span class="n">path</span> <span class="n">nebula</span><span class="o">-</span><span class="n">spark</span><span class="o">-</span><span class="n">connector</span><span class="o">-</span><span class="mf">3.0.0</span><span class="o">.</span><span class="n">jar</span> <span class="o">--</span><span class="n">jars</span> <span class="n">nebula</span><span class="o">-</span><span class="n">spark</span><span class="o">-</span><span class="n">connector</span><span class="o">-</span><span class="mf">3.0.0</span><span class="o">.</span><span class="n">jar</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then, rather than pass <code>NebulaConnectionConfig</code> and <code>ReadNebulaConfig</code> to <code>spark.read.nebula</code>, we should instead call <code>spark.read.format(&quot;com.vesoft.nebula.connector.NebulaDataSource&quot;)</code>.</p>
<p>Voilà!</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">df</span> <span class="o">=</span> <span class="n">spark</span><span class="o">.</span><span class="n">read</span><span class="o">.</span><span class="n">format</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;com.vesoft.nebula.connector.NebulaDataSource&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">option</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;type&#34;</span><span class="p">,</span> <span class="s2">&#34;vertex&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">option</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;spaceName&#34;</span><span class="p">,</span> <span class="s2">&#34;basketballplayer&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">option</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;label&#34;</span><span class="p">,</span> <span class="s2">&#34;player&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">option</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;returnCols&#34;</span><span class="p">,</span> <span class="s2">&#34;name,age&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">option</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;metaAddress&#34;</span><span class="p">,</span> <span class="s2">&#34;metad0:9559&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">option</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;partitionNumber&#34;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">load</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="o">.</span><span class="n">show</span><span class="p">(</span><span class="n">n</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="o">+---------+--------------+---+</span>
</span></span><span class="line"><span class="cl"><span class="o">|</span><span class="n">_vertexId</span><span class="o">|</span>          <span class="n">name</span><span class="o">|</span><span class="n">age</span><span class="o">|</span>
</span></span><span class="line"><span class="cl"><span class="o">+---------+--------------+---+</span>
</span></span><span class="line"><span class="cl"><span class="o">|</span><span class="n">player105</span><span class="o">|</span>   <span class="n">Danny</span> <span class="n">Green</span><span class="o">|</span> <span class="mi">31</span><span class="o">|</span>
</span></span><span class="line"><span class="cl"><span class="o">|</span><span class="n">player109</span><span class="o">|</span><span class="n">Tiago</span> <span class="n">Splitter</span><span class="o">|</span> <span class="mi">34</span><span class="o">|</span>
</span></span><span class="line"><span class="cl"><span class="o">+---------+--------------+---+</span>
</span></span><span class="line"><span class="cl"><span class="n">only</span> <span class="n">showing</span> <span class="n">top</span> <span class="mi">2</span> <span class="n">rows</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Below are how I figured out how to make this work with almost zero scala knowledge :-P.</p>
<ul>
<li><a href="https://github.com/vesoft-inc/nebula-spark-connector/blob/master/nebula-spark-connector/src/main/scala/com/vesoft/nebula/connector/package.scala" target="_blank" rel="noopener noreffer">How reader should be called</a></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-scala" data-lang="scala"><span class="line"><span class="cl">      <span class="k">def</span> <span class="n">loadVerticesToDF</span><span class="o">()</span><span class="k">:</span> <span class="kt">DataFrame</span> <span class="o">=</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">assert</span><span class="o">(</span><span class="n">connectionConfig</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="n">readConfig</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">,</span>
</span></span><span class="line"><span class="cl">               <span class="s">&#34;nebula config is not set, please call nebula() before loadVerticesToDF&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">val</span> <span class="n">dfReader</span> <span class="k">=</span> <span class="n">reader</span>
</span></span><span class="line"><span class="cl">          <span class="o">.</span><span class="n">format</span><span class="o">(</span><span class="n">classOf</span><span class="o">[</span><span class="kt">NebulaDataSource</span><span class="o">].</span><span class="n">getName</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">          <span class="o">.</span><span class="n">option</span><span class="o">(</span><span class="nc">NebulaOptions</span><span class="o">.</span><span class="nc">TYPE</span><span class="o">,</span> <span class="nc">DataTypeEnum</span><span class="o">.</span><span class="nc">VERTEX</span><span class="o">.</span><span class="n">toString</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">          <span class="o">.</span><span class="n">option</span><span class="o">(</span><span class="nc">NebulaOptions</span><span class="o">.</span><span class="nc">SPACE_NAME</span><span class="o">,</span> <span class="n">readConfig</span><span class="o">.</span><span class="n">getSpace</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">          <span class="o">.</span><span class="n">option</span><span class="o">(</span><span class="nc">NebulaOptions</span><span class="o">.</span><span class="nc">LABEL</span><span class="o">,</span> <span class="n">readConfig</span><span class="o">.</span><span class="n">getLabel</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">          <span class="o">.</span><span class="n">option</span><span class="o">(</span><span class="nc">NebulaOptions</span><span class="o">.</span><span class="nc">PARTITION_NUMBER</span><span class="o">,</span> <span class="n">readConfig</span><span class="o">.</span><span class="n">getPartitionNum</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">          <span class="o">.</span><span class="n">option</span><span class="o">(</span><span class="nc">NebulaOptions</span><span class="o">.</span><span class="nc">RETURN_COLS</span><span class="o">,</span> <span class="n">readConfig</span><span class="o">.</span><span class="n">getReturnCols</span><span class="o">.</span><span class="n">mkString</span><span class="o">(</span><span class="s">&#34;,&#34;</span><span class="o">))</span>
</span></span><span class="line"><span class="cl">          <span class="o">.</span><span class="n">option</span><span class="o">(</span><span class="nc">NebulaOptions</span><span class="o">.</span><span class="nc">NO_COLUMN</span><span class="o">,</span> <span class="n">readConfig</span><span class="o">.</span><span class="n">getNoColumn</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">          <span class="o">.</span><span class="n">option</span><span class="o">(</span><span class="nc">NebulaOptions</span><span class="o">.</span><span class="nc">LIMIT</span><span class="o">,</span> <span class="n">readConfig</span><span class="o">.</span><span class="n">getLimit</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">          <span class="o">.</span><span class="n">option</span><span class="o">(</span><span class="nc">NebulaOptions</span><span class="o">.</span><span class="nc">META_ADDRESS</span><span class="o">,</span> <span class="n">connectionConfig</span><span class="o">.</span><span class="n">getMetaAddress</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">          <span class="o">.</span><span class="n">option</span><span class="o">(</span><span class="nc">NebulaOptions</span><span class="o">.</span><span class="nc">TIMEOUT</span><span class="o">,</span> <span class="n">connectionConfig</span><span class="o">.</span><span class="n">getTimeout</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">          <span class="o">.</span><span class="n">option</span><span class="o">(</span><span class="nc">NebulaOptions</span><span class="o">.</span><span class="nc">CONNECTION_RETRY</span><span class="o">,</span> <span class="n">connectionConfig</span><span class="o">.</span><span class="n">getConnectionRetry</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">          <span class="o">.</span><span class="n">option</span><span class="o">(</span><span class="nc">NebulaOptions</span><span class="o">.</span><span class="nc">EXECUTION_RETRY</span><span class="o">,</span> <span class="n">connectionConfig</span><span class="o">.</span><span class="n">getExecRetry</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">          <span class="o">.</span><span class="n">option</span><span class="o">(</span><span class="nc">NebulaOptions</span><span class="o">.</span><span class="nc">ENABLE_META_SSL</span><span class="o">,</span> <span class="n">connectionConfig</span><span class="o">.</span><span class="n">getEnableMetaSSL</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">          <span class="o">.</span><span class="n">option</span><span class="o">(</span><span class="nc">NebulaOptions</span><span class="o">.</span><span class="nc">ENABLE_STORAGE_SSL</span><span class="o">,</span> <span class="n">connectionConfig</span><span class="o">.</span><span class="n">getEnableStorageSSL</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="o">(</span><span class="n">connectionConfig</span><span class="o">.</span><span class="n">getEnableStorageSSL</span> <span class="o">||</span> <span class="n">connectionConfig</span><span class="o">.</span><span class="n">getEnableMetaSSL</span><span class="o">)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">          <span class="n">dfReader</span><span class="o">.</span><span class="n">option</span><span class="o">(</span><span class="nc">NebulaOptions</span><span class="o">.</span><span class="nc">SSL_SIGN_TYPE</span><span class="o">,</span> <span class="n">connectionConfig</span><span class="o">.</span><span class="n">getSignType</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">          <span class="nc">SSLSignType</span><span class="o">.</span><span class="n">withName</span><span class="o">(</span><span class="n">connectionConfig</span><span class="o">.</span><span class="n">getSignType</span><span class="o">)</span> <span class="k">match</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">case</span> <span class="nc">SSLSignType</span><span class="o">.</span><span class="nc">CA</span> <span class="k">=&gt;</span>
</span></span><span class="line"><span class="cl">              <span class="n">dfReader</span><span class="o">.</span><span class="n">option</span><span class="o">(</span><span class="nc">NebulaOptions</span><span class="o">.</span><span class="nc">CA_SIGN_PARAM</span><span class="o">,</span> <span class="n">connectionConfig</span><span class="o">.</span><span class="n">getCaSignParam</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">            <span class="k">case</span> <span class="nc">SSLSignType</span><span class="o">.</span><span class="nc">SELF</span> <span class="k">=&gt;</span>
</span></span><span class="line"><span class="cl">              <span class="n">dfReader</span><span class="o">.</span><span class="n">option</span><span class="o">(</span><span class="nc">NebulaOptions</span><span class="o">.</span><span class="nc">SELF_SIGN_PARAM</span><span class="o">,</span> <span class="n">connectionConfig</span><span class="o">.</span><span class="n">getSelfSignParam</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">          <span class="o">}</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">        <span class="n">dfReader</span><span class="o">.</span><span class="n">load</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">      <span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li><a href="https://github.com/vesoft-inc/nebula-spark-connector/blob/master/nebula-spark-connector/src/main/scala/com/vesoft/nebula/connector/NebulaOptions.scala" target="_blank" rel="noopener noreffer">How Option String should be like</a></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-scala" data-lang="scala"><span class="line"><span class="cl"><span class="k">#</span> 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">object</span> <span class="nc">NebulaOptions</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="cm">/** nebula common config */</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">SPACE_NAME</span><span class="k">:</span> <span class="kt">String</span>    <span class="o">=</span> <span class="s">&#34;spaceName&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">META_ADDRESS</span><span class="k">:</span> <span class="kt">String</span>  <span class="o">=</span> <span class="s">&#34;metaAddress&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">GRAPH_ADDRESS</span><span class="k">:</span> <span class="kt">String</span> <span class="o">=</span> <span class="s">&#34;graphAddress&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">TYPE</span><span class="k">:</span> <span class="kt">String</span>          <span class="o">=</span> <span class="s">&#34;type&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">LABEL</span><span class="k">:</span> <span class="kt">String</span>         <span class="o">=</span> <span class="s">&#34;label&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="cm">/** connection config */</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">TIMEOUT</span><span class="k">:</span> <span class="kt">String</span>            <span class="o">=</span> <span class="s">&#34;timeout&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">CONNECTION_RETRY</span><span class="k">:</span> <span class="kt">String</span>   <span class="o">=</span> <span class="s">&#34;connectionRetry&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">EXECUTION_RETRY</span><span class="k">:</span> <span class="kt">String</span>    <span class="o">=</span> <span class="s">&#34;executionRetry&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">RATE_TIME_OUT</span><span class="k">:</span> <span class="kt">String</span>      <span class="o">=</span> <span class="s">&#34;reteTimeOut&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">USER_NAME</span><span class="k">:</span> <span class="kt">String</span>          <span class="o">=</span> <span class="s">&#34;user&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">PASSWD</span><span class="k">:</span> <span class="kt">String</span>             <span class="o">=</span> <span class="s">&#34;passwd&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">ENABLE_GRAPH_SSL</span><span class="k">:</span> <span class="kt">String</span>   <span class="o">=</span> <span class="s">&#34;enableGraphSSL&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">ENABLE_META_SSL</span><span class="k">:</span> <span class="kt">String</span>    <span class="o">=</span> <span class="s">&#34;enableMetaSSL&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">ENABLE_STORAGE_SSL</span><span class="k">:</span> <span class="kt">String</span> <span class="o">=</span> <span class="s">&#34;enableStorageSSL&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">SSL_SIGN_TYPE</span><span class="k">:</span> <span class="kt">String</span>      <span class="o">=</span> <span class="s">&#34;sslSignType&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">CA_SIGN_PARAM</span><span class="k">:</span> <span class="kt">String</span>      <span class="o">=</span> <span class="s">&#34;caSignParam&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">SELF_SIGN_PARAM</span><span class="k">:</span> <span class="kt">String</span>    <span class="o">=</span> <span class="s">&#34;selfSignParam&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="cm">/** read config */</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">RETURN_COLS</span><span class="k">:</span> <span class="kt">String</span>      <span class="o">=</span> <span class="s">&#34;returnCols&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">NO_COLUMN</span><span class="k">:</span> <span class="kt">String</span>        <span class="o">=</span> <span class="s">&#34;noColumn&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">PARTITION_NUMBER</span><span class="k">:</span> <span class="kt">String</span> <span class="o">=</span> <span class="s">&#34;partitionNumber&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">LIMIT</span><span class="k">:</span> <span class="kt">String</span>            <span class="o">=</span> <span class="s">&#34;limit&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="cm">/** write config */</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">RATE_LIMIT</span><span class="k">:</span> <span class="kt">String</span>   <span class="o">=</span> <span class="s">&#34;rateLimit&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">VID_POLICY</span><span class="k">:</span> <span class="kt">String</span>   <span class="o">=</span> <span class="s">&#34;vidPolicy&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">SRC_POLICY</span><span class="k">:</span> <span class="kt">String</span>   <span class="o">=</span> <span class="s">&#34;srcPolicy&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">DST_POLICY</span><span class="k">:</span> <span class="kt">String</span>   <span class="o">=</span> <span class="s">&#34;dstPolicy&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">VERTEX_FIELD</span>         <span class="k">=</span> <span class="s">&#34;vertexField&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">SRC_VERTEX_FIELD</span>     <span class="k">=</span> <span class="s">&#34;srcVertexField&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">DST_VERTEX_FIELD</span>     <span class="k">=</span> <span class="s">&#34;dstVertexField&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">RANK_FIELD</span>           <span class="k">=</span> <span class="s">&#34;rankFiled&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">BATCH</span><span class="k">:</span> <span class="kt">String</span>        <span class="o">=</span> <span class="s">&#34;batch&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">VID_AS_PROP</span><span class="k">:</span> <span class="kt">String</span>  <span class="o">=</span> <span class="s">&#34;vidAsProp&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">SRC_AS_PROP</span><span class="k">:</span> <span class="kt">String</span>  <span class="o">=</span> <span class="s">&#34;srcAsProp&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">DST_AS_PROP</span><span class="k">:</span> <span class="kt">String</span>  <span class="o">=</span> <span class="s">&#34;dstAsProp&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">RANK_AS_PROP</span><span class="k">:</span> <span class="kt">String</span> <span class="o">=</span> <span class="s">&#34;rankAsProp&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">WRITE_MODE</span><span class="k">:</span> <span class="kt">String</span>   <span class="o">=</span> <span class="s">&#34;writeMode&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">DEFAULT_TIMEOUT</span><span class="k">:</span> <span class="kt">Int</span>            <span class="o">=</span> <span class="mi">3000</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">DEFAULT_CONNECTION_TIMEOUT</span><span class="k">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">3000</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">DEFAULT_CONNECTION_RETRY</span><span class="k">:</span> <span class="kt">Int</span>   <span class="o">=</span> <span class="mi">3</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">DEFAULT_EXECUTION_RETRY</span><span class="k">:</span> <span class="kt">Int</span>    <span class="o">=</span> <span class="mi">3</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">DEFAULT_USER_NAME</span><span class="k">:</span> <span class="kt">String</span>       <span class="o">=</span> <span class="s">&#34;root&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">DEFAULT_PASSWD</span><span class="k">:</span> <span class="kt">String</span>          <span class="o">=</span> <span class="s">&#34;nebula&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">DEFAULT_ENABLE_GRAPH_SSL</span><span class="k">:</span> <span class="kt">Boolean</span>   <span class="o">=</span> <span class="kc">false</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">DEFAULT_ENABLE_META_SSL</span><span class="k">:</span> <span class="kt">Boolean</span>    <span class="o">=</span> <span class="kc">false</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">DEFAULT_ENABLE_STORAGE_SSL</span><span class="k">:</span> <span class="kt">Boolean</span> <span class="o">=</span> <span class="kc">false</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">DEFAULT_LIMIT</span><span class="k">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">1000</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">DEFAULT_RATE_LIMIT</span><span class="k">:</span> <span class="kt">Long</span>    <span class="o">=</span> <span class="mi">1024L</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">DEFAULT_RATE_TIME_OUT</span><span class="k">:</span> <span class="kt">Long</span> <span class="o">=</span> <span class="mi">100</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">DEFAULT_POLICY</span><span class="k">:</span> <span class="kt">String</span>      <span class="o">=</span> <span class="kc">null</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">DEFAULT_BATCH</span><span class="k">:</span> <span class="kt">Int</span>          <span class="o">=</span> <span class="mi">1000</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">DEFAULT_WRITE_MODE</span> <span class="k">=</span> <span class="nc">WriteMode</span><span class="o">.</span><span class="nc">INSERT</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="nc">EMPTY_STRING</span><span class="k">:</span> <span class="kt">String</span> <span class="o">=</span> <span class="s">&#34;&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li><a href="https://databricks.com/session/how-to-connect-spark-to-your-own-datasource" target="_blank" rel="noopener noreffer">https://databricks.com/session/how-to-connect-spark-to-your-own-datasource</a></li>
</ul>
<blockquote>
<p>feature image credit: <a href="https://unsplash.com/photos/KABfjuSOx74" target="_blank" rel="noopener noreffer">Sander</a></p>
</blockquote>]]></description>
</item><item>
    <title>Nebula Graph on Pi</title>
    <link>https://siwei.io/en/nebula-graph-on-pi/</link>
    <pubDate>Wed, 23 Mar 2022 22:11:03 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/en/nebula-graph-on-pi/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p>With the ARM64 Docker Image of Nebula Graph, it&rsquo;s actually quite easy to run it on SBC/Respberry Pi!</p>
</blockquote>
<h2 id="background" class="headerLink">
    <a href="#background" class="header-mark"></a>1 Background</h2><p>Recently, after Yee from Nebula Graph Community fixed ARM build on <a href="https://github.com/vesoft-inc/nebula-third-party/pull/37" target="_blank" rel="noopener noreffer">nebula-third-party#37</a>, we could play with Nebula Graph on M1 Chip Macbook. While, I didn&rsquo;t get the chance to run it on a SBC/Pi.</p>
<p>A couple of weeks before, in a twitter thread with <a href="https://twitter.com/laixintao" target="_blank" rel="noopener noreffer">@laixintao</a> and <a href="https://twitter.com/andelf/status/1504295476958404608" target="_blank" rel="noopener noreffer">@andelf</a> I decided to purchase a <a href="https://wiki.radxa.com/Rock3/" target="_blank" rel="noopener noreffer">Rock Pi 3A</a>:</p>
<p></p>
<p>And it looks nice!(Even come with a NPU inside)</p>
<p></p>
<h2 id="the-guide-of-running-nebula-graph-on-a-pi-sbc" class="headerLink">
    <a href="#the-guide-of-running-nebula-graph-on-a-pi-sbc" class="header-mark"></a>2 The Guide of running Nebula Graph on a Pi SBC</h2><blockquote>
<p>Actually, since v3.0.0, Nebula comes with a <a href="https://docs.nebula-graph.io/3.0.1/4.deployment-and-installation/standalone-deployment/" target="_blank" rel="noopener noreffer">standalone version</a>, which suits the deep edge deployment more, but today, I will only setup the cluster version as the Docker Image is out of box to be used. I will share more on standalone version in upcoming weeks.</p>
</blockquote>
<p>I put the Ubuntu Server installation steps in the appendix, and now I assumed we already have an ARM64 Linux up and running on a Pi SBC.</p>
<h3 id="step-0-install-docker-compose-on-pi" class="headerLink">
    <a href="#step-0-install-docker-compose-on-pi" class="header-mark"></a>2.1 Step 0, Install Docker-Compose on Pi</h3><p>I am using debian/ubuntu here, while it should be the same for other distros, referring to <a href="https://docs.docker.com/engine/install/" target="_blank" rel="noopener noreffer">https://docs.docker.com/engine/install/</a>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo apt-get update
</span></span><span class="line"><span class="cl">sudo apt-get install <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    ca-certificates <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    curl <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    gnupg <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    lsb-release
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  <span class="s2">&#34;deb [arch=</span><span class="k">$(</span>dpkg --print-architecture<span class="k">)</span><span class="s2"> signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
</span></span></span><span class="line"><span class="cl"><span class="s2">  </span><span class="k">$(</span>lsb_release -cs<span class="k">)</span><span class="s2"> stable&#34;</span> <span class="p">|</span> sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">sudo apt-get update
</span></span><span class="line"><span class="cl">sudo apt-get install docker-ce docker-ce-cli containerd.io
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># follow https://docs.docker.com/engine/install/linux-postinstall/</span>
</span></span><span class="line"><span class="cl">sudo groupadd docker
</span></span><span class="line"><span class="cl">sudo usermod -aG docker <span class="nv">$USER</span>
</span></span><span class="line"><span class="cl"><span class="nb">exit</span>
</span></span><span class="line"><span class="cl"><span class="c1"># login again</span>
</span></span><span class="line"><span class="cl">newgrp docker
</span></span></code></pre></td></tr></table>
</div>
</div><p>After Docker being installed, we install compose here, there could be issues encounterred from the Docker website on Compose installation. While, due to compose is just a python package, let&rsquo;s do it via python3-pip install:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo apt-get install -y python3 python3-pip
</span></span><span class="line"><span class="cl">sudo pip3 install docker-compose
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="step-1-bootstrap-nebula-graph-cluster-on-pi" class="headerLink">
    <a href="#step-1-bootstrap-nebula-graph-cluster-on-pi" class="header-mark"></a>2.2 Step 1, bootstrap Nebula Graph Cluster on Pi</h3><p>We clone the compose file for nebula cluster first:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git clone https://github.com/vesoft-inc/nebula-docker-compose.git <span class="o">&amp;&amp;</span> <span class="nb">cd</span> nebula-docker-compose
</span></span><span class="line"><span class="cl">docker-compose up -d
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then, let&rsquo;s download the client: nebula-console, and connect to the GraphD service:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">wget https://github.com/vesoft-inc/nebula-console/releases/download/v3.0.0/nebula-console-linux-arm64-v3.0.0
</span></span><span class="line"><span class="cl">chmod +x nebula-console-linux-arm64-v3.0.0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">./nebula-console-linux-arm64-v3.0.0 -addr localhost -port <span class="m">9669</span> -u root -p nebula
</span></span></code></pre></td></tr></table>
</div>
</div><p>Activate the storageD services:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">ADD HOSTS <span class="s2">&#34;storaged0&#34;</span>:9779,<span class="s2">&#34;storaged1&#34;</span>:9779,<span class="s2">&#34;storaged2&#34;</span>:9779<span class="p">;</span>
</span></span><span class="line"><span class="cl">SHOW HOSTS<span class="p">;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="step-2-play-nebula-graph-on-pi" class="headerLink">
    <a href="#step-2-play-nebula-graph-on-pi" class="header-mark"></a>2.3 Step 2, Play Nebula Graph on Pi</h3><p>WIth the <code>SHOW HOSTS</code> we should see StorageD services are all ONLINE, then we could run this from the console session to load the test dataset.</p>
<blockquote>
<p>Referennce: <a href="https://docs.nebula-graph.io/3.0.1/nebula-console/#import_a_testing_dataset" target="_blank" rel="noopener noreffer">https://docs.nebula-graph.io/3.0.1/nebula-console/#import_a_testing_dataset</a></p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$:play basketballplayer<span class="p">;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>The test data will be loaded in around 1 minute. Then, we could query something like:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">USE basketballplayer<span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">GO FROM <span class="s2">&#34;player100&#34;</span> OVER follow YIELD dst<span class="o">(</span>edge<span class="o">)</span><span class="p">;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Check this out and&hellip;</p>
<p>Happy Graphing!</p>
<p></p>
<h2 id="appendix-installing-ubuntu-server-on-rock-pi-3a-sbc" class="headerLink">
    <a href="#appendix-installing-ubuntu-server-on-rock-pi-3a-sbc" class="header-mark"></a>3 Appendix: Installing Ubuntu Server on Rock Pi 3A SBC</h2><ul>
<li>
<p>Get the image from <a href="https://wiki.radxa.com/Rock3/downloads" target="_blank" rel="noopener noreffer">https://wiki.radxa.com/Rock3/downloads</a> decompressing the file into <code>.img</code></p>
</li>
<li>
<p>Write the image to a micro SD card with <a href="https://www.balena.io/etcher/" target="_blank" rel="noopener noreffer">etcher</a></p>
</li>
<li>
<p>Boot it!</p>
</li>
</ul>
<blockquote>
<p>feature image credit: <a href="https://unsplash.com/@_louisreed" target="_blank" rel="noopener noreffer">@_louisreed</a></p>
</blockquote>]]></description>
</item><item>
    <title>What happens to Wordle and Chinese idiom Knowledge Graph?</title>
    <link>https://siwei.io/en/resolve-wordle/</link>
    <pubDate>Mon, 28 Feb 2022 19:18:59 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/en/resolve-wordle/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p>Could I create something between the human brain and the game-cheater/ruiner to make it more of fun? With Knowledge Graph?</p>
</blockquote>
<h2 id="background" class="headerLink">
    <a href="#background" class="header-mark"></a>1 Background</h2><p>You may have seen tweets like this in past months, where the color dots in emoji was shared in SNS randomly.</p>
<blockquote>
<p>Feel free to <a href="https://www.google.com/search?q=wordle" target="_blank" rel="noopener noreffer">Google Wordle</a> first if you don&rsquo;t know its meaning yet.</p>
</blockquote>
<p></p>
<h3 id="wordle-solver" class="headerLink">
    <a href="#wordle-solver" class="header-mark"></a>1.1 Wordle Solver</h3><p>For all magics being used to solve wordle, I am impressed by <a href="https://www.3blue1brown.com/about" target="_blank" rel="noopener noreffer">Grant Sanderson</a>, who explained us the information theory when solving wordle, <a href="https://www.3blue1brown.com/lessons/wordle" target="_blank" rel="noopener noreffer">in an elegent and delightful way</a>.</p>
<h3 id="chinese-wordle-handle" class="headerLink">
    <a href="#chinese-wordle-handle" class="header-mark"></a>1.2 Chinese wordle: &amp;ldquo;handle&amp;rdquo;</h3><p>I am not going create yet another wordle-solver today, instead, it&rsquo;s more about an intresting variant of wordle.</p>
<p>To truly enjoy the fun of wordle, mostly we should be a native speaker, and it is not surprising that there is a <a href="https://twitter.com/search?q=wordle%20es" target="_blank" rel="noopener noreffer">Spanish wordle</a> out there, and still tweets on wordle(es) are being shared literially every second now.</p>
<p>While for non alphabetic languages like Chineses, do we have the luck to have fun with wordling? The answer is yes, while it&rsquo;s a bit different.</p>
<p>For the reason <a href="https://en.wikipedia.org/wiki/Chinese_characters" target="_blank" rel="noopener noreffer">Chinese charactors</a>, also called Hanzi or Han chactors are in from of <a href="https://en.wikipedia.org/wiki/Logogram" target="_blank" rel="noopener noreffer">Logogram</a>, each charactor in Chinese is made up of radicals in quite different forms, each Chinese word can be 2/3/4 charactors. Most of the crossword games in Chinese are idiom, proverb or ancient poetry based: the slot to be filled are one Chinese.</p>
<p></p>
<p>ref: <a href="https://chinese.stackexchange.com/questions/42416/chinese-idiom-puzzle-14-%E4%B8%AD%E6%96%87%E5%A1%AB%E5%AD%97%E9%81%8A%E6%88%B2" target="_blank" rel="noopener noreffer">Chinese idiom puzzle</a></p>
<p>Thus, a wordle but in Chinese idiom will be quite strange, or even hilarious as <a href="https://cheeaun.com/blog/2022/02/chengyu-wordle-is-not-a-love-story/" target="_blank" rel="noopener noreffer">Chee</a> and JinGen discussed in this <a href="https://twitter.com/jg_lim/status/1484506430711697412" target="_blank" rel="noopener noreffer">tweet thread</a>, where you could see the candidate characters are counted in thousands: there is no chance to guess the idiom in 10 attempts!</p>
<p></p>
<p>As one of the fun on playing wordle could be the feedback loop of <code>guess --&gt; result</code> in limited attempts, while the scale of Chinese Charactor had pushed the Chinese wordle variant creators leveraging other aspects of the charactor: pronunciation.</p>
<p>Each charactor in Chinease is monosyllabic without exceptions, and when it comes to its pronunciation, they are all made up from two parts(initial and final, and they could be <a href="https://en.wikipedia.org/wiki/Pinyin" target="_blank" rel="noopener noreffer">written in roman letters</a>), which comes in tens level of possbilities.</p>
<p>There are bounch of Chinese wordle varients asking player to guess idiom leveraging pinyin:</p>
<ul>
<li><a href="https://pinyincaichengyu.com/" target="_blank" rel="noopener noreffer">https://pinyincaichengyu.com/</a></li>
<li><a href="https://cheeaun.github.io/chengyu-wordle/" target="_blank" rel="noopener noreffer">https://cheeaun.github.io/chengyu-wordle/</a></li>
<li><a href="https://apps.apple.com/cn/app/id1606194420" target="_blank" rel="noopener noreffer">https://apps.apple.com/cn/app/id1606194420</a></li>
</ul>
<p>While, to me, a native Chinese speaker, it&rsquo;s either too hard to play with condtions of pronunciation parts(pinyin) or too easy to guess on given around 20 Chinese charactors. Then, the varient stands out here is the &ldquo;<a href="handle/%e6%b1%89%e5%85%9c" rel="">handle/汉兜</a>&quot;(Hanzi-Wordle) created by <a href="https://antfu.me/" target="_blank" rel="noopener noreffer">Antfu</a>.</p>
<p>&ldquo;Handle&rdquo; introduced the tones with genius to add an extra dimension of all charactors per each guess attempt, which helped player to have more information on filtering the knowledge in the brain.</p>
<blockquote>
<p>Note, for each Chinese charactor, there will be a tone in 1 of <a href="https://en.wikipedia.org/wiki/Four_tones_%28Middle_Chinese%29" target="_blank" rel="noopener noreffer">4 tones</a> in its pronunciation.</p>
</blockquote>
<p>Let&rsquo;s see what it&rsquo;s like to play the &ldquo;Handle&rdquo;:</p>
<ul>
<li>There will be 4 Chinese Charactors to be filled in 10 times of guess</li>
<li>Not only the charactor self will be colored in result:
<ul>
<li>For example in first line, the green &ldquo;门&rdquo; in position 2 is correct whereas in second line, the orange &ldquo;仓&rdquo; is corret while the possition should be all but not the first slot.</li>
</ul>
</li>
<li>There will be extra hints on:
<ul>
<li>Pinyin parts for both part1(initial) and part2(final)
<ul>
<li>In third line of the boxes, the green &ldquo;qiao&rdquo; refers to the first charactor is ponouced in &ldquo;qiao&rdquo; with initial:&ldquo;q&rdquo; and final:&ldquo;iao&rdquo;, although we filled the wrong charactor in the writing dimension.</li>
<li>In third line, the orange &ldquo;uo&rdquo; refers to there is one chacarctor in other poisition with the final part of the pinyin as &ldquo;uo&rdquo;.</li>
</ul>
</li>
<li>Tones of the charactor:
<ul>
<li>In third line, the green &ldquo;-&rdquo; stands for the third charactor is in tone-1.</li>
</ul>
</li>
</ul>
</li>
</ul>
<p></p>
<h3 id="the-chinese-wordle-helper" class="headerLink">
    <a href="#the-chinese-wordle-helper" class="header-mark"></a>1.3 The Chinese Wordle Helper</h3><p>As a non-native English speaker, the way I was playing wordle is to <del>cheating</del> relying on helpers:</p>
<p>After knowing on the third letter to be &ldquo;O&rdquo;, I googled and got this: <a href="https://uppolice.org/5-letter-words-with-o-in-the-middle/" target="_blank" rel="noopener noreffer">5-letter-words-with-o-in-the-middle</a> and do the searching 😁.</p>
<p></p>
<p>The way to play with helpers works for me to have fun yet not ruin it by an automated cheat resolver(it&rsquo;s only simulating my brain as a native-speaker!), so that I could somehow experience the same as Millions of people out there without cheating.</p>
<p>While for Chinese &ldquo;Handle&rdquo; players, from my perspective, it&rsquo;s still a bit harder(to find answers in 10 guesses), and the way my wife and I were playing &ldquo;Handle&rdquo; when lining up at the restaurant door ended up googling: idiom list with word &lsquo;foo&rsquo;, yet still having a lot of fun.</p>
<h2 id="chinese-idiom-knowledge-graph" class="headerLink">
    <a href="#chinese-idiom-knowledge-graph" class="header-mark"></a>2 Chinese idiom Knowledge Graph</h2><p>Could I create something between the human brain and the game-cheater/ruiner to make it more of fun?</p>
<p>The answer is yes: a game extension as a secondary brain. For this helper/secondary brain, the solution for &ldquo;handle&rdquo; differenciates from the English wordle, unlike the auto-solver, similar algorithms could help on both cases:</p>
<ul>
<li>
<p>In wordle(English), player searches in their brain or from a helper like the web page: <a href="https://uppolice.org/5-letter-words-with-o-in-the-middle/" target="_blank" rel="noopener noreffer">5-letter-words-with-o-in-the-middle</a>.</p>
</li>
<li>
<p>In handle(Chinese), it&rsquo;s harder to be searching based on hints like tones/initial parts of pinyin in fulltext webpage searching anymore, the reason hehind is that the multidimensional filter condtions are not indexed by normal webpages. As I mentioned, the key of the helper to be leveraged to (not ruining the game) is to be the extension of the brain, then the question is: how does our brain work on handling the knowledge of &ldquo;handle&rdquo;(yes, I was preparing for this pun for so long!)?</p>
</li>
</ul>
<p>Thus, why not do it in a graph/neural network way? And here we go, let&rsquo;s create a knowledge graph of Chinese idiom and see how it goes with the &ldquo;handle&rdquo; game.</p>
<h3 id="tldr" class="headerLink">
    <a href="#tldr" class="header-mark"></a>2.1 TL;DR</h3><p>It&rsquo;s indeed entertaining to me, and I could write Graph Queries[*] by hand or via Visualization tools[**] to help explore things in this graph, because <del>I can</del> we&rsquo;re doing the &ldquo;thinking&rdquo; process the similar way in our own brain, but not so well-informed.</p>
<ul>
<li>
<ul>
<li></li>
</ul>
</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># There is one Character not in 1st position, with tone-4, final part as &#34;ai&#34;, but is not &#34;爱&#34;
</span></span><span class="line"><span class="cl">MATCH (char0:character)&lt;-[with_char_0:with_character]-(x:idiom)-[with_pinyin_0:with_pinyin]-&gt;(pinyin_0:character_pinyin)-[:with_pinyin_part]-&gt;(final_part_0:pinyin_part{part_type: &#34;final&#34;})
</span></span><span class="line"><span class="cl">WHERE id(final_part_0) == &#34;ai&#34; AND pinyin_0.character_pinyin.tone == 4 AND with_pinyin_0.position != 0 AND with_char_0.position != 0 AND id(char0) != &#34;爱&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># There is one Character in tone-1 not in 2nd position
</span></span><span class="line"><span class="cl">MATCH (x:idiom) -[with_pinyin_1:with_pinyin]-&gt;(pinyin_1:character_pinyin)
</span></span><span class="line"><span class="cl">WHERE pinyin_1.character_pinyin.tone == 1 AND with_pinyin_1.position != 1
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># There is one Character with final part as &#34;ing&#34;, not in 4th position
</span></span><span class="line"><span class="cl">MATCH (x:idiom) -[with_pinyin_2:with_pinyin]-&gt;(:character_pinyin)-[:with_pinyin_part]-&gt;(final_part_2:pinyin_part{part_type: &#34;final&#34;})
</span></span><span class="line"><span class="cl">WHERE id(final_part_2) == &#34;ing&#34; AND with_pinyin_2.position != 3
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># The 4th Character is tone-2
</span></span><span class="line"><span class="cl">MATCH (x:idiom) -[with_pinyin_3:with_pinyin]-&gt;(pinyin_3:character_pinyin)
</span></span><span class="line"><span class="cl">WHERE pinyin_3.character_pinyin.tone == 2 AND with_pinyin_3.position == 3
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">RETURN x, count(x) as c ORDER BY c DESC
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>**</li>
</ul>
<p></p>
<h3 id="the-long-version-of-playing-with-knowledge-graph" class="headerLink">
    <a href="#the-long-version-of-playing-with-knowledge-graph" class="header-mark"></a>2.2 The long version of playing with Knowledge Graph</h3><p>If you are intrested in how you could do it from your side, here are some details. Before getting started, if you would like to hands-on do it, please refer to appendix chapter on getting your own Nebula Graph Database cluster ready, which are a couple of lines commands to be run.</p>
<h4 id="play-handle-with-knowledge-graph" class="headerLink">
    <a href="#play-handle-with-knowledge-graph" class="header-mark"></a>2.2.1 Play Handle with Knowledge Graph</h4><p>So, if we visit the &ldquo;handle&rdquo; game 👉🏻 <a href="https://handle.antfu.me/" target="_blank" rel="noopener noreffer">https://handle.antfu.me/</a>. We could start with one guess i.e. &ldquo;爱憎分明&rdquo;.</p>
<p>We will get hint of the first guess as:</p>
<p></p>
<p>Not bad, we have three of the charactor with informative hints!</p>
<ul>
<li>There is one Character not in 1st position, with tone-4, final part as &ldquo;ai&rdquo;, but is not &ldquo;爱&rdquo;</li>
<li>There is one Character in tone-1 not in 2nd position</li>
<li>There is one Character with final part as &ldquo;ing&rdquo;, not in 4th position</li>
<li>The 4th Character is tone-2</li>
</ul>
<p>Then we just query it from Nebula Graph:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># There is one Character not in 1st position, with tone-4, final part as &#34;ai&#34;, but is not &#34;爱&#34;
</span></span><span class="line"><span class="cl">MATCH (char0:character)&lt;-[with_char_0:with_character]-(x:idiom)-[with_pinyin_0:with_pinyin]-&gt;(pinyin_0:character_pinyin)-[:with_pinyin_part]-&gt;(final_part_0:pinyin_part{part_type: &#34;final&#34;})
</span></span><span class="line"><span class="cl">WHERE id(final_part_0) == &#34;ai&#34; AND pinyin_0.character_pinyin.tone == 4 AND with_pinyin_0.position != 0 AND with_char_0.position != 0 AND id(char0) != &#34;爱&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># There is one Character in tone-1 not in 2nd position
</span></span><span class="line"><span class="cl">MATCH (x:idiom) -[with_pinyin_1:with_pinyin]-&gt;(pinyin_1:character_pinyin)
</span></span><span class="line"><span class="cl">WHERE pinyin_1.character_pinyin.tone == 1 AND with_pinyin_1.position != 1
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># There is one Character with final part as &#34;ing&#34;, not in 4th position
</span></span><span class="line"><span class="cl">MATCH (x:idiom) -[with_pinyin_2:with_pinyin]-&gt;(:character_pinyin)-[:with_pinyin_part]-&gt;(final_part_2:pinyin_part{part_type: &#34;final&#34;})
</span></span><span class="line"><span class="cl">WHERE id(final_part_2) == &#34;ing&#34; AND with_pinyin_2.position != 3
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># The 4th Character is tone-2
</span></span><span class="line"><span class="cl">MATCH (x:idiom) -[with_pinyin_3:with_pinyin]-&gt;(pinyin_3:character_pinyin)
</span></span><span class="line"><span class="cl">WHERE pinyin_3.character_pinyin.tone == 2 AND with_pinyin_3.position == 3
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">RETURN x, count(x) as c ORDER BY c DESC
</span></span></code></pre></td></tr></table>
</div>
</div><p>And there are 7 results left in this single guess for us!</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="err">(</span><span class="s2">&#34;惊愚骇俗&#34;</span> <span class="err">:idiom</span><span class="p">{</span><span class="err">pinyin:</span> <span class="nt">&#34;[&#39;jing1&#39;, &#39;yu2&#39;, &#39;hai4&#39;, &#39;su2&#39;]&#34;</span><span class="p">}</span><span class="err">)</span>
</span></span><span class="line"><span class="cl"><span class="err">(</span><span class="s2">&#34;惊世骇俗&#34;</span> <span class="err">:idiom</span><span class="p">{</span><span class="err">pinyin:</span> <span class="nt">&#34;[&#39;jing1&#39;, &#39;shi4&#39;, &#39;hai4&#39;, &#39;su2&#39;]&#34;</span><span class="p">}</span><span class="err">)</span>
</span></span><span class="line"><span class="cl"><span class="err">(</span><span class="s2">&#34;惊见骇闻&#34;</span> <span class="err">:idiom</span><span class="p">{</span><span class="err">pinyin:</span> <span class="nt">&#34;[&#39;jing1&#39;, &#39;jian4&#39;, &#39;hai4&#39;, &#39;wen2&#39;]&#34;</span><span class="p">}</span><span class="err">)</span>
</span></span><span class="line"><span class="cl"><span class="err">(</span><span class="s2">&#34;沽名卖直&#34;</span> <span class="err">:idiom</span><span class="p">{</span><span class="err">pinyin:</span> <span class="nt">&#34;[&#39;gu1&#39;, &#39;ming2&#39;, &#39;mai4&#39;, &#39;zhi2&#39;]&#34;</span><span class="p">}</span><span class="err">)</span>
</span></span><span class="line"><span class="cl"><span class="err">(</span><span class="s2">&#34;惊心骇神&#34;</span> <span class="err">:idiom</span><span class="p">{</span><span class="err">pinyin:</span> <span class="nt">&#34;[&#39;jing1&#39;, &#39;xin1&#39;, &#39;hai4&#39;, &#39;shen2&#39;]&#34;</span><span class="p">}</span><span class="err">)</span>
</span></span><span class="line"><span class="cl"><span class="err">(</span><span class="s2">&#34;荆棘载途&#34;</span> <span class="err">:idiom</span><span class="p">{</span><span class="err">pinyin:</span> <span class="nt">&#34;[&#39;jing1&#39;, &#39;ji2&#39;, &#39;zai4&#39;, &#39;tu2&#39;]&#34;</span><span class="p">}</span><span class="err">)</span>
</span></span><span class="line"><span class="cl"><span class="err">(</span><span class="s2">&#34;出卖灵魂&#34;</span> <span class="err">:idiom</span><span class="p">{</span><span class="err">pinyin:</span> <span class="nt">&#34;[&#39;chu1&#39;, &#39;mai4&#39;, &#39;ling2&#39;, &#39;hun2&#39;]&#34;</span><span class="p">}</span><span class="err">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>And as a Chinese native speaker, the common one would be &ldquo;惊世骇俗&rdquo;, and let&rsquo;s give a try!</p>
<p></p>
<h4 id="the-visualization-of-the-query" class="headerLink">
    <a href="#the-visualization-of-the-query" class="header-mark"></a>2.2.2 The Visualization of the Query</h4><p>We could modify our query to make every part of the subquery returned, thus, they could also be renderred visually:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># There is one Character not in 1st position, with tone-4, final part as &#34;ai&#34;, but is not &#34;爱&#34;
</span></span><span class="line"><span class="cl">MATCH p0=(char0:character)&lt;-[with_char_0:with_character]-(x:idiom)-[with_pinyin_0:with_pinyin]-&gt;(pinyin_0:character_pinyin)-[:with_pinyin_part]-&gt;(final_part_0:pinyin_part{part_type: &#34;final&#34;})
</span></span><span class="line"><span class="cl">WHERE id(final_part_0) == &#34;ai&#34; AND pinyin_0.character_pinyin.tone == 4 AND with_pinyin_0.position != 0 AND with_char_0.position != 0 AND id(char0) != &#34;爱&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># There is one Character in tone-1 not in 2nd position
</span></span><span class="line"><span class="cl">MATCH p1=(x:idiom) -[with_pinyin_1:with_pinyin]-&gt;(pinyin_1:character_pinyin)
</span></span><span class="line"><span class="cl">WHERE pinyin_1.character_pinyin.tone == 1 AND with_pinyin_1.position != 1
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># There is one Character with final part as &#34;ing&#34;, not in 4th position
</span></span><span class="line"><span class="cl">MATCH p2=(x:idiom) -[with_pinyin_2:with_pinyin]-&gt;(:character_pinyin)-[:with_pinyin_part]-&gt;(final_part_2:pinyin_part{part_type: &#34;final&#34;})
</span></span><span class="line"><span class="cl">WHERE id(final_part_2) == &#34;ing&#34; AND with_pinyin_2.position != 3
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># The 4th Character is tone-2
</span></span><span class="line"><span class="cl">MATCH p3=(x:idiom) -[with_pinyin_3:with_pinyin]-&gt;(pinyin_3:character_pinyin)
</span></span><span class="line"><span class="cl">WHERE pinyin_3.character_pinyin.tone == 2 AND with_pinyin_3.position == 3
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">RETURN p0,p1,p2,p3
</span></span></code></pre></td></tr></table>
</div>
</div><p>And then we query it in Nebula-Studio-Console, and click &ldquo;View Subgraphs&rdquo; to see how the searching was done like it was in our own brains:</p>
<p></p>
<h2 id="whats-next" class="headerLink">
    <a href="#whats-next" class="header-mark"></a>3 What&amp;rsquo;s Next</h2><p>If you happened to get hands dirty(or being intrested to) on Graph Database, you could checkout the <a href="https://github.com/vesoft-inc/nebula" target="_blank" rel="noopener noreffer">Nebula Graph</a> project now and its <a href="https://docs.nebula-graph.io/" target="_blank" rel="noopener noreffer">Docs</a> to have more fun of it! Also, <a href="https://nebula-graph.io/demo/" target="_blank" rel="noopener noreffer">here</a> are some only playgrounds if you prefer to try it without deployment on your own envrioment.</p>
<p>If you are intrested in the <code>MATCH</code> query syntax and would like to actually do exersices with each daily handle challenge, check below Documents:</p>
<ul>
<li>MATCH <a href="https://docs.nebula-graph.io/3.0.1/3.ngql-guide/7.general-query-statements/2.match/" target="_blank" rel="noopener noreffer">https://docs.nebula-graph.io/3.0.1/3.ngql-guide/7.general-query-statements/2.match/</a></li>
<li>Graph Patterns <a href="https://docs.nebula-graph.io/3.0.1/3.ngql-guide/1.nGQL-overview/3.graph-patterns/" target="_blank" rel="noopener noreffer">https://docs.nebula-graph.io/3.0.1/3.ngql-guide/1.nGQL-overview/3.graph-patterns/</a></li>
<li>nGQL command cheatsheet <a href="https://docs.nebula-graph.io/3.0.1/2.quick-start/6.cheatsheet-for-ngql/" target="_blank" rel="noopener noreffer">https://docs.nebula-graph.io/3.0.1/2.quick-start/6.cheatsheet-for-ngql/</a></li>
</ul>
<p>Happy Graphing!</p>
<h2 id="appendix-setting-up-the-knowledge-graph" class="headerLink">
    <a href="#appendix-setting-up-the-knowledge-graph" class="header-mark"></a>4 Appendix: Setting up the Knowledge Graph</h2><p>I put the code and process here: <a href="https://github.com/wey-gu/chinese-graph" target="_blank" rel="noopener noreffer">https://github.com/wey-gu/chinese-graph</a>, feel free to check that out.</p>
<h3 id="build-the-knowledge-graph" class="headerLink">
    <a href="#build-the-knowledge-graph" class="header-mark"></a>4.1 Build the Knowledge Graph</h3><p>The process would be:</p>
<ul>
<li>Modeling the Knowledge</li>
<li>Preprocessing the data</li>
<li>ETL data to a Graph Database: Nebula Graph</li>
<li>Have fun on Nebula Graph</li>
</ul>
<h3 id="modeling-the-knowledge-graph" class="headerLink">
    <a href="#modeling-the-knowledge-graph" class="header-mark"></a>4.2 Modeling the Knowledge Graph</h3><p>For Graph Modeling, it&rsquo;s actually quite straight forward, the mind model for me was to put the knowledge I cares as vertcies and connect them with their relationships first.</p>
<p>You will come back to iterate or optimize the modeling when you are actually playing with the data afterwards, thus, if you could imagine how the graph will be queried in the first place, the graph modeling could be adopted accordingly. Otherwise, don&rsquo;t over design it, just do it the intuitive way.</p>
<p>Here, I put the vertices with properties as:</p>
<ul>
<li>idiom</li>
<li>character</li>
<li>pinyin
<ul>
<li>tone</li>
</ul>
</li>
<li>pinyin_part
<ul>
<li>type</li>
</ul>
</li>
</ul>
<p>The edges with properteis as:</p>
<ul>
<li>with_character</li>
<li>with_pinyin</li>
<li>with_pinyin_part</li>
</ul>
<p></p>
<h3 id="deploy-nebula-graph" class="headerLink">
    <a href="#deploy-nebula-graph" class="header-mark"></a>4.3 Deploy Nebula Graph</h3><blockquote>
<p>With <a href="https://github.com/wey-gu/nebula-up/" target="_blank" rel="noopener noreffer">Nebula-UP</a>, it&rsquo;s an onliner call</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">curl -fsSL nebula-up.siwei.io/install.sh <span class="p">|</span> bash -s -- v3.0.0
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="load-data" class="headerLink">
    <a href="#load-data" class="header-mark"></a>4.4 Load data</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># clone the code for data genration and data loading</span>
</span></span><span class="line"><span class="cl">git clone https://github.com/wey-gu/chinese-graph.git <span class="o">&amp;&amp;</span> <span class="nb">cd</span> chinese-graph
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">python3 graph_data_generator.py <span class="c1"># generate data</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># load data with Nebula-Importer</span>
</span></span><span class="line"><span class="cl">docker run --rm -ti <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --network<span class="o">=</span>nebula-docker-compose_nebula-net <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -v <span class="si">${</span><span class="nv">PWD</span><span class="si">}</span>/importer_conf.yaml:/root/importer_conf.yaml <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -v <span class="si">${</span><span class="nv">PWD</span><span class="si">}</span>/output:/root <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    vesoft/nebula-importer:v3.0.0 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --config /root/importer_conf.yaml
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>Nebula Index Explained</title>
    <link>https://siwei.io/en/nebula-index-explained/</link>
    <pubDate>Sun, 20 Feb 2022 16:35:53 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/en/nebula-index-explained/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p>Nebula Graph Native Index explained, why <code>index not found</code>? When should I use Nebula Index and full-text index?</p>
</blockquote>
<p>The term of Nebula Graph Index is quite similar to the index in RDBMS, while, they are not the same. It&rsquo;s noticed that when getting started with Nebula Graph, the index confused some of the users in first glance on the following</p>
<ul>
<li>What exactly Nebula Graph Index is.</li>
<li>When I should use it.</li>
<li>How it impacts the performance.</li>
</ul>
<p>Today I&rsquo;m gonna walk you through the index in Nebula Graph.</p>
<p>Let&rsquo;s get started!</p>
<h2 id="what-exactly-nebula-graph-index-is" class="headerLink">
    <a href="#what-exactly-nebula-graph-index-is" class="header-mark"></a>1 What exactly Nebula Graph Index is</h2><p>TL;DR, Nebula Graph Index is only to be used to enable the graph query to be <strong>started from</strong> conditions on <strong>properties</strong> of vertices or edges, instead of vertexID.</p>
<p>It&rsquo;s only used in a starting entry of a graph query. If a query is in pattern: (a-&gt;b-&gt;c, where c in condition-foobar) graph walk, due to the only filtering <code>condition-foobar</code> is on <code>c</code>, this query under the hood will be started to seek <code>c</code>, and then it walks through the reversed <code>-&gt;</code> to <code>b</code>, finally to <code>a</code>. Thus, the Nebula Graph Index will be used and only be possbily used in seeking c, when <code>condition-foobar</code> is not like <code>id(c) == &quot;foobar&quot;</code> but <code>c.property_x == &quot;foobar&quot;</code>.</p>
<h3 id="index-is-used-only-for-starting-point-seek" class="headerLink">
    <a href="#index-is-used-only-for-starting-point-seek" class="header-mark"></a>1.1 Index is used only for starting point seek</h3><p>We know that in RDBMS, an INDEX is to create a duplicated sorted DATA to enable QUERY with condition filtering on the sorted data, to <strong>accelerate the query in read</strong> and involves extra writes during the write.</p>
<blockquote>
<p>Note: in RDBMS/Tabular DB, an INDEX on some columns means to create extra data that are sorted on those columns to make query with those columns&rsquo; condition to be scanned faster, rather than scanning from the original table data sorted based on the key only.</p>
</blockquote>
<p>In Nebula Graph, the INDEX is to create a duplicated sorted <strong>Vertex/Edge PROP DATA</strong> to <strong>enable starting point seek of a QUERY</strong>(it&rsquo;s a prerequisite rather than help accelerate it).</p>
<p>Not all of the queries relied on index, here are some examples, let&rsquo;s call them pure-property-condition-start queries:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">#### Queries relying on Nebula Graph Index
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># query 0 pure-property-condition-start query
</span></span><span class="line"><span class="cl">LOOKUP ON tag1 WHERE col1 &gt; 1 AND col2 == &#34;foo&#34; \
</span></span><span class="line"><span class="cl">    YIELD tag1.col1 as col1, tag1.col3 as col3;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># query 1 pure-property-condition-start query
</span></span><span class="line"><span class="cl">MATCH (v:player { name: &#39;Tim Duncan&#39; })--&gt;(v2:player) \
</span></span><span class="line"><span class="cl">        RETURN v2.player.name AS Name;
</span></span></code></pre></td></tr></table>
</div>
</div><p>In both <code>query 0</code> and <code>query 1</code>, the pattern is to &ldquo;Find VID/EDGE only based on given the propertiy condtions&rdquo;. On the contrary, the starting point are VertexID based instead in <code>query 2</code> and <code>query 3</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">#### Queries not based on Nebula Graph Index
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># query 2, walk query starting from given vertex VID: &#34;player100&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">GO FROM &#34;player100&#34; OVER follow REVERSELY \
</span></span><span class="line"><span class="cl">        YIELD src(edge) AS id | \
</span></span><span class="line"><span class="cl">    GO FROM $-.id OVER serve \
</span></span><span class="line"><span class="cl">        WHERE properties($^).age &gt; 20 \
</span></span><span class="line"><span class="cl">        YIELD properties($^).name AS FriendOf, properties($$).name AS Team;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># query 3, walk query starting from given vertex VID: &#34;player101&#34; or &#34;player102&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">MATCH (v:player { name: &#39;Tim Duncan&#39; })--(v2) \
</span></span><span class="line"><span class="cl">        WHERE id(v2) IN [&#34;player101&#34;, &#34;player102&#34;] \
</span></span><span class="line"><span class="cl">        RETURN v2.player.name AS Name;
</span></span></code></pre></td></tr></table>
</div>
</div><p>If we look into <code>query 1</code> and <code>query 3</code>, which shared condition on vertex on <code>tag:player</code> are both <code>{ name: 'Tim Duncan' }</code> though, they are differenciated in starting points:</p>
<p>For <code>query 3</code> , the index is not required as the query will be started from known vertex ID in <code>[&quot;player101&quot;, &quot;player102&quot;]</code> and thus:</p>
<ul>
<li>It&rsquo;ll directly fetch vertex Data from <code>v2</code>&rsquo;s vertex IDs</li>
<li>then to GetNeighbors(): walk through edges of <code>v2</code>, GetVertices() for next hop: <code>v</code> and filter based on property: <code>name</code></li>
</ul>
<p>For <code>query 1</code> , the query has to start from <code>v</code> due to no known vertex IDs were provided:</p>
<ul>
<li>It&rsquo;ll do IndexScan() first to find all vertices only with property condtion of <code>{ name: 'Tim Duncan' }</code></li>
<li>Then, GetNeighbors(): walk through edges of <code>v</code>, GetVertices() for next hop: <code>v2</code></li>
</ul>
<p>Now, we could know the whole point that matters here is on <strong>whether to know the vertexID</strong>. And the above differences could be shown in their execution plans with PROFILE or EXPLAIN like the follow:</p>
<table>
<thead>
<tr>
<th><code>query 1</code>, requires index(on tag: player), pure prop condition query as starting point</th>
<th><code>query 3</code>, no index required, query starting from known vertex IDs</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="why-nebula-graph-index-is-enabler-rather-than-an-accelerater" class="headerLink">
    <a href="#why-nebula-graph-index-is-enabler-rather-than-an-accelerater" class="header-mark"></a>1.2 Why Nebula Graph index is enabler rather than an accelerater</h3><p>Can&rsquo;t those queries be done without indexes?</p>
<p>It&rsquo;s possible in theory with full scan, but disabled without index.</p>
<p>The reason is Nebula Graph stores data in a distributed and graph-oriented way, the full scan of data was condiserred too expensive to be allowed.</p>
<blockquote>
<p>Note: from v3.0, it&rsquo;s possible to do TopN Scan without INDEX, where the <code>LIMIT &lt;n&gt;</code> is used, this is different from the fullscan case(INDEX is a must), which will be explained later.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">MATCH (v:player { name: &#39;Tim Duncan&#39; })--&gt;(v2:player) \
</span></span><span class="line"><span class="cl">        RETURN v2.player.name AS Name LIMIT 3;
</span></span></code></pre></td></tr></table>
</div>
</div></blockquote>
<h3 id="why-starting-point-only" class="headerLink">
    <a href="#why-starting-point-only" class="header-mark"></a>1.3 Why starting point only</h3><p>Index data is not used in terversal. It could confuse use to think of index is to sorting data based on properties, does it accelerate the terversal with property condition filtering? The answer is, no.</p>
<p>In Nebula Graph, the data is structured in a way to enable fast graph-terversal, which is already indexed/sorted on vertex ID(for both vertex and edge) in raw data, where terversal(underlying in storage, it&rsquo;s calling GetNeighbors interface) of given vertex is cheap and fast due to the locality/stored continuously(pysically linked).</p>
<p>So in summary:</p>
<blockquote>
<p>Nebula Graph Index is sorted prop data to find the starting vertex or edge on given pure prop conditions.</p>
</blockquote>
<h2 id="facts-on-nebula-graph-index" class="headerLink">
    <a href="#facts-on-nebula-graph-index" class="header-mark"></a>2 Facts on Nebula Graph Index</h2><p>To understand more details/limitations/cost of Nebula, let&rsquo;s reveal more on its design and here are some facts in short:</p>
<ul>
<li>
<p>Index Data is stored and sharded together with Vertex Data</p>
</li>
<li>
<p>It&rsquo;s <strong>Left Match</strong> based only: It&rsquo;s RocksDB Prefix Scan under the hood</p>
</li>
<li>
<p>Effect on write and read path(to see its cost):</p>
<ul>
<li>Write Path: Extra Data written + Extra Read request introduced</li>
<li>Read Path: RBO(Rule based optimization), Fan Out(to all shards)</li>
</ul>
</li>
<li>
<p>Data Full Scan LIMIT Sample(not full scan) is supported without Index</p>
<ul>
<li>
<p><code>LOOKUP ON t YIELD t.name | LIMIT 1</code></p>
</li>
<li>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">MATCH (v:player { name: &#39;Tim Duncan&#39; })--&gt;(v2:player) \
</span></span><span class="line"><span class="cl">        RETURN v2.player.name AS Name LIMIT 3;
</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ul>
</li>
</ul>
<p>The key info can be seen from one of my <a href="https://www.siwei.io/en/sketch-notes/" target="_blank" rel="noopener noreffer">sketch notes</a>:</p>
<p></p>
<blockquote>
<p>We should notice that only the left match is supported in pure-property-condition-start queries. For queries like wildcard or reguler-expression, Full-text Index/Search is to be used, where an external elastic search is integrated with nebula: please check <a href="https://docs.nebula-graph.io/3.1.0/4.deployment-and-installation/6.deploy-text-based-index/2.deploy-es/" target="_blank" rel="noopener noreffer">Nebula Graph Full text index</a> for more.</p>
</blockquote>
<p>Within this sketch note, more highlights are:</p>
<ul>
<li>
<p>It&rsquo;s a Local Index Design</p>
<ul>
<li>The index is stored and shared locally together with the graph data.</li>
<li>It&rsquo;s sorting based on prop value, and the index search is underlying a rocksDB prefix scan, that&rsquo;s why only left match is supported.</li>
</ul>
</li>
<li>
<p>There is cost in the write path</p>
<ul>
<li>The index enables the RDBMS-like Prop Condition Based Query with cost in the write path including not only the extra write, but also, random read, to ensure the data consistency.</li>
<li>Index Data write is done in a sync way</li>
</ul>
</li>
<li>
<p>For Read path:</p>
<ul>
<li>In pure-property-condition-start queries, in GraphD, the index will be selected with Rule-based-optimization like this example, where, in a rule, the col2 to be sorted first is considered optimal with the condition: col2 equals &lsquo;foo&rsquo;.</li>
<li>After the index was chosen, index-scan request will be fanout to storageD instances, and in the case of filters like LIMIT N, it will be pushed down to the storage side to reduce data payload.
<ul>
<li>Note: it was not shown in the sketch but actually from v3.0, the nebula graph allows LIMIT N Sample Prop condition query like this w/o index, which is underlying pushing down the LIMIT filter to storage side.</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>Take aways:</p>
<ul>
<li>Use index only when we have to, as it&rsquo;s costly in write cases and if limit N sample is the only needed case and it&rsquo;s fast enough, we can use that instead.</li>
<li>Index is left match
<ul>
<li>composite index order matters, should be created carefully.</li>
<li>for full-text search use case, use <a href="https://docs.nebula-graph.io/3.1.0/4.deployment-and-installation/6.deploy-text-based-index/2.deploy-es/" target="_blank" rel="noopener noreffer">full-text index</a> instead.</li>
</ul>
</li>
</ul>
<h2 id="how-to-use-the-index" class="headerLink">
    <a href="#how-to-use-the-index" class="header-mark"></a>3 How to use the index</h2><p>We should always refer to the <a href="https://docs.nebula-graph.io/3.1.0/3.ngql-guide/14.native-index-statements/" target="_blank" rel="noopener noreffer">documentation</a>, and I just put some highlights on this here:</p>
<ul>
<li>
<p>To create an index on a tag or edge type to specify a list of props in the order that we need.</p>
<ul>
<li><code>CREATE INDEX</code></li>
</ul>
</li>
<li>
<p>If an index was created after existing data was inserted, we need to trigger an index async rebuild job, as the index data will be written in sync way only when index is created.</p>
<ul>
<li><code>REBUILD INDEX</code></li>
</ul>
</li>
<li>
<p>We can see the index status after <code>REBUILD INDEX</code> issued.</p>
<ul>
<li><code>SHOW INDEX STATUS</code></li>
</ul>
</li>
<li>
<p>Queries levering index could be LOOKUP, and with the pipeline, in most cases we will do follow-up graph-walk queries like:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="n">LOOKUP</span><span class="w"> </span><span class="k">ON</span><span class="w"> </span><span class="n">player</span><span class="w"> </span><span class="err">\</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="k">WHERE</span><span class="w"> </span><span class="n">player</span><span class="p">.</span><span class="n">name</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">&#34;Kobe Bryant&#34;</span><span class="err">\</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="n">YIELD</span><span class="w"> </span><span class="n">id</span><span class="p">(</span><span class="n">vertex</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">VertexID</span><span class="p">,</span><span class="w"> </span><span class="n">properties</span><span class="p">(</span><span class="n">vertex</span><span class="p">).</span><span class="n">name</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">name</span><span class="w"> </span><span class="o">|</span><span class="err">\</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="k">GO</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="err">$</span><span class="o">-</span><span class="p">.</span><span class="n">VertexID</span><span class="w"> </span><span class="n">OVER</span><span class="w"> </span><span class="n">serve</span><span class="w"> </span><span class="err">\</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="n">YIELD</span><span class="w"> </span><span class="err">$</span><span class="o">-</span><span class="p">.</span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="n">properties</span><span class="p">(</span><span class="n">edge</span><span class="p">).</span><span class="n">start_year</span><span class="p">,</span><span class="w"> </span><span class="n">properties</span><span class="p">(</span><span class="n">edge</span><span class="p">).</span><span class="n">end_year</span><span class="p">,</span><span class="w"> </span><span class="n">properties</span><span class="p">(</span><span class="err">$$</span><span class="p">).</span><span class="n">name</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>Or in MATCH query like this, under the hood, v will be searched on index and v2 will be walked by default graph data structure without involving index.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">MATCH (v:player{name:&#34;Tim Duncan&#34;})--&gt;(v2:player) \
</span></span><span class="line"><span class="cl">  RETURN v2.player.name AS Name;
</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ul>
<h2 id="recap" class="headerLink">
    <a href="#recap" class="header-mark"></a>4 Recap</h2><p>Finally, Let&rsquo;s Recap</p>
<ul>
<li>INDEX is sorting PROP DATA to enable finding starting point on given PURE PROP CONDITION</li>
<li>INDEX is <strong>not</strong> for Trevsal</li>
<li>INDEX is left match, <strong>not</strong> for full-text search</li>
<li>INDEX has cost on WRITE</li>
<li>Remember to REBUILD after CREATE INDEX on existing data</li>
</ul>
<p>Happy Graphing!</p>
<p>Feture image credit to <a href="https://unsplash.com/photos/ZiQkhI7417A" target="_blank" rel="noopener noreffer">Alina</a></p>
]]></description>
</item><item>
    <title>Nebula Java Happy Parsing Guide</title>
    <link>https://siwei.io/en/nebula-java-happy-parsing-guide/</link>
    <pubDate>Thu, 25 Nov 2021 19:47:53 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/en/nebula-java-happy-parsing-guide/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p>How to parse nebula graph data in an interactive way and what are the best practices?</p>
<p>I will show you an easier way in this article 😁.</p>
</blockquote>
<h2 id="prepare-for-the-java-repl" class="headerLink">
    <a href="#prepare-for-the-java-repl" class="header-mark"></a>1 Prepare for the Java REPL</h2><p>Thanks to <a href="https://github.com/albertlatacz/java-repl/" target="_blank" rel="noopener noreffer">https://github.com/albertlatacz/java-repl/</a> we could play with/debug this in an interactive way, and all we need is to leverage its docker image to have all the envrioment in a clean and quick way:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker pull albertlatacz/java-repl
</span></span><span class="line"><span class="cl">docker run --rm -it <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --network<span class="o">=</span>nebula-docker-compose_nebula-net <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -v ~:/root <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    albertlatacz/java-repl <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    bash
</span></span><span class="line"><span class="cl">apt update -y <span class="o">&amp;&amp;</span> apt install ca-certificates -y
</span></span><span class="line"><span class="cl">wget https://dlcdn.apache.org/maven/maven-3/3.8.4/binaries/apache-maven-3.8.4-bin.tar.gz --no-check-certificate
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">tar xzvf apache-maven-3.8.4-bin.tar.gz
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">wget https://github.com/vesoft-inc/nebula-java/archive/refs/tags/v2.6.1.tar.gz
</span></span><span class="line"><span class="cl">tar xzvf v2.6.1.tar.gz
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> nebula-java-2.6.1/
</span></span><span class="line"><span class="cl">../apache-maven-3.8.4/bin/mvn dependency:copy-dependencies
</span></span><span class="line"><span class="cl">../apache-maven-3.8.4/bin/mvn -B package -Dmaven.test.skip<span class="o">=</span><span class="nb">true</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">java -jar ../javarepl/javarepl.jar
</span></span></code></pre></td></tr></table>
</div>
</div><p>Now, after executing <code>java -jar ../javarepl/javarepl.jar</code> we are in a Java Shell(REPL), this enable us to execute Java code in an interactive way without wasting time and patience in the slow path(code &ndash;&gt; build &ndash;&gt; execute &ndash;&gt; add print &ndash;&gt; build), isn&rsquo;t that cool?</p>
<p>Like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">root</span><span class="nd">@a2e26ba62bb6</span><span class="o">:/</span><span class="n">javarepl</span><span class="o">/</span><span class="n">nebula</span><span class="o">-</span><span class="n">java</span><span class="o">-</span><span class="n">2</span><span class="o">.</span><span class="na">6</span><span class="o">.</span><span class="na">1</span><span class="err">#</span> <span class="n">java</span> <span class="o">-</span><span class="n">jar</span> <span class="o">../</span><span class="n">javarepl</span><span class="o">/</span><span class="n">javarepl</span><span class="o">.</span><span class="na">jar</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Welcome</span> <span class="n">to</span> <span class="n">JavaREPL</span> <span class="n">version</span> <span class="nf">428</span> <span class="o">(</span><span class="n">Java</span> <span class="nf">HotSpot</span><span class="o">(</span><span class="n">TM</span><span class="o">)</span> <span class="n">64</span><span class="o">-</span><span class="n">Bit</span> <span class="n">Server</span> <span class="n">VM</span><span class="o">,</span> <span class="n">Java</span> <span class="n">1</span><span class="o">.</span><span class="na">8</span><span class="o">.</span><span class="na">0_111</span><span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="n">Type</span> <span class="n">expression</span> <span class="n">to</span> <span class="n">evaluate</span><span class="o">,</span> <span class="o">:</span><span class="n">help</span> <span class="k">for</span> <span class="n">more</span> <span class="n">options</span> <span class="n">or</span> <span class="n">press</span> <span class="n">tab</span> <span class="n">to</span> <span class="n">auto</span><span class="o">-</span><span class="n">complete</span><span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="n">Connected</span> <span class="n">to</span> <span class="n">local</span> <span class="n">instance</span> <span class="n">at</span> <span class="n">http</span><span class="o">:</span><span class="c1">//localhost:43707
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="n">java</span><span class="o">&gt;</span> <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Hello, World!&#34;</span><span class="o">);</span>
</span></span><span class="line"><span class="cl"><span class="n">Hello</span><span class="o">,</span> <span class="n">World</span><span class="o">!</span>
</span></span><span class="line"><span class="cl"><span class="n">java</span><span class="o">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Now we are in the java REPL, let&rsquo;s introduce all the class path needed and do the imports in one go:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="o">:</span><span class="n">cp</span> <span class="o">/</span><span class="n">javarepl</span><span class="o">/</span><span class="n">nebula</span><span class="o">-</span><span class="n">java</span><span class="o">-</span><span class="n">2</span><span class="o">.</span><span class="na">6</span><span class="o">.</span><span class="na">1</span><span class="o">/</span><span class="n">client</span><span class="o">/</span><span class="n">target</span><span class="o">/</span><span class="n">client</span><span class="o">-</span><span class="n">2</span><span class="o">.</span><span class="na">6</span><span class="o">.</span><span class="na">1</span><span class="o">.</span><span class="na">jar</span>
</span></span><span class="line"><span class="cl"><span class="o">:</span><span class="n">cp</span> <span class="o">/</span><span class="n">javarepl</span><span class="o">/</span><span class="n">nebula</span><span class="o">-</span><span class="n">java</span><span class="o">-</span><span class="n">2</span><span class="o">.</span><span class="na">6</span><span class="o">.</span><span class="na">1</span><span class="o">/</span><span class="n">client</span><span class="o">/</span><span class="n">target</span><span class="o">/</span><span class="n">dependency</span><span class="o">/</span><span class="n">fastjson</span><span class="o">-</span><span class="n">1</span><span class="o">.</span><span class="na">2</span><span class="o">.</span><span class="na">78</span><span class="o">.</span><span class="na">jar</span>
</span></span><span class="line"><span class="cl"><span class="o">:</span><span class="n">cp</span> <span class="o">/</span><span class="n">javarepl</span><span class="o">/</span><span class="n">nebula</span><span class="o">-</span><span class="n">java</span><span class="o">-</span><span class="n">2</span><span class="o">.</span><span class="na">6</span><span class="o">.</span><span class="na">1</span><span class="o">/</span><span class="n">client</span><span class="o">/</span><span class="n">target</span><span class="o">/</span><span class="n">dependency</span><span class="o">/</span><span class="n">slf4j</span><span class="o">-</span><span class="n">api</span><span class="o">-</span><span class="n">1</span><span class="o">.</span><span class="na">7</span><span class="o">.</span><span class="na">25</span><span class="o">.</span><span class="na">jar</span>
</span></span><span class="line"><span class="cl"><span class="o">:</span><span class="n">cp</span> <span class="o">/</span><span class="n">javarepl</span><span class="o">/</span><span class="n">nebula</span><span class="o">-</span><span class="n">java</span><span class="o">-</span><span class="n">2</span><span class="o">.</span><span class="na">6</span><span class="o">.</span><span class="na">1</span><span class="o">/</span><span class="n">client</span><span class="o">/</span><span class="n">target</span><span class="o">/</span><span class="n">dependency</span><span class="o">/</span><span class="n">slf4j</span><span class="o">-</span><span class="n">log4j12</span><span class="o">-</span><span class="n">1</span><span class="o">.</span><span class="na">7</span><span class="o">.</span><span class="na">25</span><span class="o">.</span><span class="na">jar</span>
</span></span><span class="line"><span class="cl"><span class="o">:</span><span class="n">cp</span> <span class="o">/</span><span class="n">javarepl</span><span class="o">/</span><span class="n">nebula</span><span class="o">-</span><span class="n">java</span><span class="o">-</span><span class="n">2</span><span class="o">.</span><span class="na">6</span><span class="o">.</span><span class="na">1</span><span class="o">/</span><span class="n">client</span><span class="o">/</span><span class="n">target</span><span class="o">/</span><span class="n">dependency</span><span class="o">/</span><span class="n">commons</span><span class="o">-</span><span class="n">pool2</span><span class="o">-</span><span class="n">2</span><span class="o">.</span><span class="na">2</span><span class="o">.</span><span class="na">jar</span>
</span></span><span class="line"><span class="cl"><span class="o">:</span><span class="n">cp</span> <span class="o">/</span><span class="n">javarepl</span><span class="o">/</span><span class="n">nebula</span><span class="o">-</span><span class="n">java</span><span class="o">-</span><span class="n">2</span><span class="o">.</span><span class="na">6</span><span class="o">.</span><span class="na">1</span><span class="o">/</span><span class="n">client</span><span class="o">/</span><span class="n">target</span><span class="o">/</span><span class="n">dependency</span><span class="o">/</span><span class="n">log4j</span><span class="o">-</span><span class="n">1</span><span class="o">.</span><span class="na">2</span><span class="o">.</span><span class="na">17</span><span class="o">.</span><span class="na">jar</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.alibaba.fastjson.JSON</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.alibaba.fastjson.JSONObject</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.vesoft.nebula.ErrorCode</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.vesoft.nebula.client.graph.NebulaPoolConfig</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.vesoft.nebula.client.graph.data.CASignedSSLParam</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.vesoft.nebula.client.graph.data.HostAddress</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.vesoft.nebula.client.graph.data.ResultSet</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.vesoft.nebula.client.graph.data.SelfSignedSSLParam</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.vesoft.nebula.client.graph.data.ValueWrapper</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.vesoft.nebula.client.graph.net.NebulaPool</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.vesoft.nebula.client.graph.net.Session</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.io.UnsupportedEncodingException</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.concurrent.TimeUnit</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.slf4j.Logger</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.slf4j.LoggerFactory</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.lang.reflect.*</span><span class="o">;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>And let&rsquo;s connect it to the nebula graph, please replace your graphD IP and Port here, and execute them under the propmt string of <code>java&gt;</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">NebulaPoolConfig</span> <span class="n">nebulaPoolConfig</span> <span class="o">=</span> <span class="k">new</span> <span class="n">NebulaPoolConfig</span><span class="o">();</span>
</span></span><span class="line"><span class="cl"><span class="n">nebulaPoolConfig</span><span class="o">.</span><span class="na">setMaxConnSize</span><span class="o">(</span><span class="n">10</span><span class="o">);</span>
</span></span><span class="line"><span class="cl"><span class="n">List</span><span class="o">&lt;</span><span class="n">HostAddress</span><span class="o">&gt;</span> <span class="n">addresses</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="k">new</span> <span class="n">HostAddress</span><span class="o">(</span><span class="s">&#34;192.168.8.127&#34;</span><span class="o">,</span> <span class="n">9669</span><span class="o">));</span>
</span></span><span class="line"><span class="cl"><span class="n">NebulaPool</span> <span class="n">pool</span> <span class="o">=</span> <span class="k">new</span> <span class="n">NebulaPool</span><span class="o">();</span>
</span></span><span class="line"><span class="cl"><span class="n">pool</span><span class="o">.</span><span class="na">init</span><span class="o">(</span><span class="n">addresses</span><span class="o">,</span> <span class="n">nebulaPoolConfig</span><span class="o">);</span>
</span></span><span class="line"><span class="cl"><span class="n">Session</span> <span class="n">session</span> <span class="o">=</span> <span class="n">pool</span><span class="o">.</span><span class="na">getSession</span><span class="o">(</span><span class="s">&#34;root&#34;</span><span class="o">,</span> <span class="s">&#34;nebula&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="the-execute-for-resultset" class="headerLink">
    <a href="#the-execute-for-resultset" class="header-mark"></a>2 The &lt;code&gt;execute&lt;/code&gt; for ResultSet</h2><p>First let&rsquo;s check what we can do with a simple query:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">ResultSet</span> <span class="n">resp</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="s">&#34;USE basketballplayer;MATCH (n:player) WHERE n.name==\&#34;Tim Duncan\&#34; RETURN n&#34;</span><span class="o">);</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Now you could play with it:</p>
<blockquote>
<p>Reference: <a href="https://github.dev/vesoft-inc/nebula-java/blob/master/client/src/main/java/com/vesoft/nebula/client/graph/data/ResultSet.java" target="_blank" rel="noopener noreffer">client/graph/data/ResultSet.java</a></p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">java</span><span class="o">&gt;</span> <span class="n">resp</span><span class="o">.</span><span class="na">isSucceeded</span><span class="o">()</span>
</span></span><span class="line"><span class="cl"><span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Boolean</span> <span class="n">res9</span> <span class="o">=</span> <span class="kc">true</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">java</span><span class="o">&gt;</span> <span class="n">resp</span><span class="o">.</span><span class="na">rowsSize</span><span class="o">()</span>
</span></span><span class="line"><span class="cl"><span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Integer</span> <span class="n">res16</span> <span class="o">=</span> <span class="n">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">java</span><span class="o">&gt;</span> <span class="n">rows</span> <span class="o">=</span> <span class="n">resp</span><span class="o">.</span><span class="na">getRows</span><span class="o">()</span>
</span></span><span class="line"><span class="cl"><span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">ArrayList</span> <span class="n">rows</span> <span class="o">=</span> <span class="o">[</span><span class="n">Row</span> <span class="o">(</span>
</span></span><span class="line"><span class="cl">  <span class="n">values</span> <span class="o">:</span> <span class="o">[</span>
</span></span><span class="line"><span class="cl">    <span class="o">&lt;</span><span class="n">Value</span> <span class="n">vVal</span><span class="o">:</span><span class="n">Vertex</span> <span class="o">(</span>
</span></span><span class="line"><span class="cl">        <span class="n">vid</span> <span class="o">:</span> <span class="o">&lt;</span><span class="n">Value</span> <span class="n">sVal</span><span class="o">:</span><span class="n">70</span> <span class="n">6c</span> <span class="n">61</span> <span class="n">79</span> <span class="n">65</span> <span class="n">72</span> <span class="n">31</span> <span class="n">30</span> <span class="n">30</span><span class="o">&gt;,</span>
</span></span><span class="line"><span class="cl">        <span class="n">tags</span> <span class="o">:</span> <span class="o">[</span>
</span></span><span class="line"><span class="cl">          <span class="n">Tag</span> <span class="o">(</span>
</span></span><span class="line"><span class="cl">              <span class="n">name</span> <span class="o">:</span> <span class="n">70</span> <span class="n">6C</span> <span class="n">61</span> <span class="n">79</span> <span class="n">65</span> <span class="n">72</span><span class="o">,</span>
</span></span><span class="line"><span class="cl">              <span class="n">props</span> <span class="o">:</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">                <span class="o">[</span><span class="n">B</span><span class="nd">@5264a468</span> <span class="o">:</span> <span class="o">&lt;</span><span class="n">Value</span> <span class="n">iVal</span><span class="o">:</span><span class="n">42</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">                <span class="o">[</span><span class="n">B</span><span class="nd">@496b8e10</span> <span class="o">:</span> <span class="o">&lt;</span><span class="n">Value</span> <span class="n">sVal</span><span class="o">:</span><span class="n">54</span> <span class="n">69</span> <span class="n">6d</span> <span class="n">20</span> <span class="n">44</span> <span class="n">75</span> <span class="n">6e</span> <span class="n">63</span> <span class="n">61</span> <span class="n">6e</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">              <span class="o">}</span>
</span></span><span class="line"><span class="cl">            <span class="o">)</span>
</span></span><span class="line"><span class="cl">        <span class="o">]</span>
</span></span><span class="line"><span class="cl">      <span class="o">)&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="o">)]</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="n">java</span><span class="o">&gt;</span> <span class="n">row0</span> <span class="o">=</span> <span class="n">resp</span><span class="o">.</span><span class="na">rowValues</span><span class="o">(</span><span class="n">0</span><span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Iterable</span><span class="o">&lt;</span><span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">ValueWrapper</span><span class="o">&gt;</span> <span class="n">res10</span> <span class="o">=</span> <span class="n">ColumnName</span><span class="o">:</span> <span class="o">[</span><span class="n">n</span><span class="o">],</span> <span class="n">Values</span><span class="o">:</span> <span class="o">[(</span><span class="s">&#34;player100&#34;</span> <span class="o">:</span><span class="n">player</span> <span class="o">{</span><span class="n">name</span><span class="o">:</span> <span class="s">&#34;Tim Duncan&#34;</span><span class="o">,</span> <span class="n">age</span><span class="o">:</span> <span class="n">42</span><span class="o">})]</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Remember our item is actually a vertex?</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">(root@nebula) [basketballplayer]&gt; match (n:player) WHERE n.name == &#34;Tim Duncan&#34; return n
</span></span><span class="line"><span class="cl">+----------------------------------------------------+
</span></span><span class="line"><span class="cl">| n                                                  |
</span></span><span class="line"><span class="cl">+----------------------------------------------------+
</span></span><span class="line"><span class="cl">| (&#34;player100&#34; :player{age: 42, name: &#34;Tim Duncan&#34;}) |
</span></span><span class="line"><span class="cl">+----------------------------------------------------+
</span></span><span class="line"><span class="cl">Got 1 rows (time spent 2116/44373 us)
</span></span></code></pre></td></tr></table>
</div>
</div><p>Let&rsquo;s see what(methods) can be done towards a value?</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">v</span> <span class="o">=</span> <span class="n">Class</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="s">&#34;com.vesoft.nebula.Value&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="n">v</span><span class="o">.</span><span class="na">getDeclaredMethods</span><span class="o">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>We could tell it&rsquo;s quite Primitive on what <code>com.vesoft.nebula.Value</code> provided, thus we should use the ValueWrapper(or use executeJson actually) instead.</p>
<p>To get a row of the result via iteration(as its a java iterable), we just follow how the example looped the result:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="n">List</span><span class="o">&lt;</span><span class="n">ValueWrapper</span><span class="o">&gt;</span> <span class="n">wrappedValueList</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">resp</span><span class="o">.</span><span class="na">rowsSize</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">ResultSet</span><span class="o">.</span><span class="na">Record</span> <span class="n">record</span> <span class="o">=</span> <span class="n">resp</span><span class="o">.</span><span class="na">rowValues</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="o">(</span><span class="n">ValueWrapper</span> <span class="n">value</span> <span class="o">:</span> <span class="n">record</span><span class="o">.</span><span class="na">values</span><span class="o">())</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">wrappedValueList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="o">(</span><span class="n">value</span><span class="o">.</span><span class="na">isLong</span><span class="o">())</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;%15s |&#34;</span><span class="o">,</span> <span class="n">value</span><span class="o">.</span><span class="na">asLong</span><span class="o">());</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="o">(</span><span class="n">value</span><span class="o">.</span><span class="na">isBoolean</span><span class="o">())</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;%15s |&#34;</span><span class="o">,</span> <span class="n">value</span><span class="o">.</span><span class="na">asBoolean</span><span class="o">());</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="o">(</span><span class="n">value</span><span class="o">.</span><span class="na">isDouble</span><span class="o">())</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;%15s |&#34;</span><span class="o">,</span> <span class="n">value</span><span class="o">.</span><span class="na">asDouble</span><span class="o">());</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="o">(</span><span class="n">value</span><span class="o">.</span><span class="na">isString</span><span class="o">())</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;%15s |&#34;</span><span class="o">,</span> <span class="n">value</span><span class="o">.</span><span class="na">asString</span><span class="o">());</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="o">(</span><span class="n">value</span><span class="o">.</span><span class="na">isTime</span><span class="o">())</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;%15s |&#34;</span><span class="o">,</span> <span class="n">value</span><span class="o">.</span><span class="na">asTime</span><span class="o">());</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="o">(</span><span class="n">value</span><span class="o">.</span><span class="na">isDate</span><span class="o">())</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;%15s |&#34;</span><span class="o">,</span> <span class="n">value</span><span class="o">.</span><span class="na">asDate</span><span class="o">());</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="o">(</span><span class="n">value</span><span class="o">.</span><span class="na">isDateTime</span><span class="o">())</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;%15s |&#34;</span><span class="o">,</span> <span class="n">value</span><span class="o">.</span><span class="na">asDateTime</span><span class="o">());</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="o">(</span><span class="n">value</span><span class="o">.</span><span class="na">isVertex</span><span class="o">())</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;%15s |&#34;</span><span class="o">,</span> <span class="n">value</span><span class="o">.</span><span class="na">asNode</span><span class="o">());</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="o">(</span><span class="n">value</span><span class="o">.</span><span class="na">isEdge</span><span class="o">())</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;%15s |&#34;</span><span class="o">,</span> <span class="n">value</span><span class="o">.</span><span class="na">asRelationship</span><span class="o">());</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="o">(</span><span class="n">value</span><span class="o">.</span><span class="na">isPath</span><span class="o">())</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;%15s |&#34;</span><span class="o">,</span> <span class="n">value</span><span class="o">.</span><span class="na">asPath</span><span class="o">());</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="o">(</span><span class="n">value</span><span class="o">.</span><span class="na">isList</span><span class="o">())</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;%15s |&#34;</span><span class="o">,</span> <span class="n">value</span><span class="o">.</span><span class="na">asList</span><span class="o">());</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="o">(</span><span class="n">value</span><span class="o">.</span><span class="na">isSet</span><span class="o">())</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;%15s |&#34;</span><span class="o">,</span> <span class="n">value</span><span class="o">.</span><span class="na">asSet</span><span class="o">());</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="o">(</span><span class="n">value</span><span class="o">.</span><span class="na">isMap</span><span class="o">())</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;%15s |&#34;</span><span class="o">,</span> <span class="n">value</span><span class="o">.</span><span class="na">asMap</span><span class="o">());</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>As shown in above, the result value/item could be in properties string/int etc&hellip; or in graph semantic vertex, edge, path, we should use correspond <code>asXxxx</code> methods:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">java</span><span class="o">&gt;</span> <span class="n">v</span> <span class="o">=</span> <span class="n">wrappedValueList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">0</span><span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">ValueWrapper</span> <span class="n">v</span> <span class="o">=</span> <span class="o">(</span><span class="s">&#34;player100&#34;</span> <span class="o">:</span><span class="n">player</span> <span class="o">{</span><span class="n">name</span><span class="o">:</span> <span class="s">&#34;Tim Duncan&#34;</span><span class="o">,</span> <span class="n">age</span><span class="o">:</span> <span class="n">42</span><span class="o">})</span>
</span></span><span class="line"><span class="cl"><span class="n">java</span><span class="o">&gt;</span> <span class="n">v</span><span class="o">.</span><span class="na">asNode</span><span class="o">()</span>
</span></span><span class="line"><span class="cl"><span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">Node</span> <span class="n">res16</span> <span class="o">=</span> <span class="o">(</span><span class="s">&#34;player100&#34;</span> <span class="o">:</span><span class="n">player</span> <span class="o">{</span><span class="n">name</span><span class="o">:</span> <span class="s">&#34;Tim Duncan&#34;</span><span class="o">,</span> <span class="n">age</span><span class="o">:</span> <span class="n">42</span><span class="o">})</span>
</span></span><span class="line"><span class="cl"><span class="n">java</span><span class="o">&gt;</span> <span class="n">node</span> <span class="o">=</span> <span class="n">v</span><span class="o">.</span><span class="na">asNode</span><span class="o">()</span>
</span></span><span class="line"><span class="cl"><span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">Node</span> <span class="n">node</span> <span class="o">=</span> <span class="o">(</span><span class="s">&#34;player100&#34;</span> <span class="o">:</span><span class="n">player</span> <span class="o">{</span><span class="n">name</span><span class="o">:</span> <span class="s">&#34;Tim Duncan&#34;</span><span class="o">,</span> <span class="n">age</span><span class="o">:</span> <span class="n">42</span><span class="o">})</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Btw, it&rsquo;s also possible to play with it with reflections(we imported already):</p>
<blockquote>
<p>Of courese we could also check via <a href="https://github.dev/vesoft-inc/nebula-java/blob/master/client/src/main/java/com/vesoft/nebula/client/graph/data/ResultSet.java" target="_blank" rel="noopener noreffer">client/graph/data/ResultSet.java</a></p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">java</span><span class="o">&gt;</span> <span class="n">rClass</span><span class="o">=</span><span class="n">Class</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="s">&#34;com.vesoft.nebula.client.graph.data.ResultSet&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Class</span> <span class="n">r</span> <span class="o">=</span> <span class="kd">class</span> <span class="nc">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">ResultSet</span>
</span></span><span class="line"><span class="cl"><span class="n">java</span><span class="o">&gt;</span> <span class="n">rClass</span><span class="o">.</span><span class="na">getDeclaredMethods</span><span class="o">()</span>
</span></span><span class="line"><span class="cl"><span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">reflect</span><span class="o">.</span><span class="na">Method</span><span class="o">[]</span> <span class="n">res20</span> <span class="o">=</span> <span class="o">[</span><span class="kd">public</span> <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">List</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">ResultSet</span><span class="o">.</span><span class="na">getColumnNames</span><span class="o">(),</span> <span class="kd">public</span> <span class="kt">int</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">ResultSet</span><span class="o">.</span><span class="na">rowsSize</span><span class="o">(),</span> <span class="kd">public</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">ResultSet$Record</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">ResultSet</span><span class="o">.</span><span class="na">rowValues</span><span class="o">(</span><span class="kt">int</span><span class="o">),</span> <span class="kd">public</span> <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">List</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">ResultSet</span><span class="o">.</span><span class="na">colValues</span><span class="o">(</span><span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">String</span><span class="o">),</span> <span class="kd">public</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">String</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">ResultSet</span><span class="o">.</span><span class="na">getErrorMessage</span><span class="o">(),</span> <span class="kd">public</span> <span class="kt">boolean</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">ResultSet</span><span class="o">.</span><span class="na">isSucceeded</span><span class="o">(),</span> <span class="kd">public</span> <span class="kt">int</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">ResultSet</span><span class="o">.</span><span class="na">getErrorCode</span><span class="o">(),</span> <span class="kd">public</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">String</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">ResultSet</span><span class="o">.</span><span class="na">getSpaceName</span><span class="o">(),</span> <span class="kd">public</span> <span class="kt">int</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">ResultSet</span><span class="o">.</span><span class="na">getLatency</span><span class="o">(),</span> <span class="kd">public</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">PlanDescription</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">ResultSet</span><span class="o">.</span><span class="na">getPlanDesc</span><span class="o">(),</span> <span class="kd">public</span> <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">List</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">ResultSet</span><span class="o">.</span><span class="na">getRows</span><span class="o">(),</span> <span class="kd">public</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">String</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">ResultSet</span><span class="o">.</span><span class="na">getComment</span><span class="o">(),</span> <span class="kd">public</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">String</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">ResultSet</span><span class="o">.</span><span class="na">toString</span><span class="o">(),</span> <span class="kd">public</span> <span class="kt">boolean</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">ResultSet</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">(),</span> <span class="kd">public</span> <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">List</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">ResultSet</span><span class="o">.</span><span class="na">keys</span><span class="o">()]</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">java</span><span class="o">&gt;</span> <span class="n">nodeClass</span><span class="o">=</span><span class="n">Class</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="s">&#34;com.vesoft.nebula.client.graph.data.Node&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Class</span> <span class="n">nodeClass</span> <span class="o">=</span> <span class="kd">class</span> <span class="nc">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">Node</span>
</span></span><span class="line"><span class="cl"><span class="n">java</span><span class="o">&gt;</span> <span class="n">nodeClass</span><span class="o">.</span><span class="na">getDeclaredMethods</span><span class="o">()</span>
</span></span><span class="line"><span class="cl"><span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">reflect</span><span class="o">.</span><span class="na">Method</span><span class="o">[]</span> <span class="n">res20</span> <span class="o">=</span> <span class="o">[</span><span class="kd">public</span> <span class="kt">boolean</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">Node</span><span class="o">.</span><span class="na">hasTagName</span><span class="o">(</span><span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">String</span><span class="o">),</span> <span class="kd">public</span> <span class="kt">boolean</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">Node</span><span class="o">.</span><span class="na">hasLabel</span><span class="o">(</span><span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">String</span><span class="o">),</span> <span class="kd">public</span> <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">List</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">Node</span><span class="o">.</span><span class="na">tagNames</span><span class="o">(),</span> <span class="kd">public</span> <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">HashMap</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">Node</span><span class="o">.</span><span class="na">properties</span><span class="o">(</span><span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">String</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">java</span><span class="o">.</span><span class="na">io</span><span class="o">.</span><span class="na">UnsupportedEncodingException</span><span class="o">,</span> <span class="kd">public</span> <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">List</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">Node</span><span class="o">.</span><span class="na">labels</span><span class="o">(),</span> <span class="kd">public</span> <span class="kt">boolean</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">Node</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Object</span><span class="o">),</span> <span class="kd">public</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">String</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">Node</span><span class="o">.</span><span class="na">toString</span><span class="o">(),</span> <span class="kd">public</span> <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">List</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">Node</span><span class="o">.</span><span class="na">values</span><span class="o">(</span><span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">String</span><span class="o">),</span> <span class="kd">public</span> <span class="kt">int</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">Node</span><span class="o">.</span><span class="na">hashCode</span><span class="o">(),</span> <span class="kd">public</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">ValueWrapper</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">Node</span><span class="o">.</span><span class="na">getId</span><span class="o">(),</span> <span class="kd">public</span> <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">List</span> <span class="n">com</span><span class="o">.</span><span class="na">vesoft</span><span class="o">.</span><span class="na">nebula</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">graph</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">Node</span><span class="o">.</span><span class="na">keys</span><span class="o">(</span><span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">String</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">java</span><span class="o">.</span><span class="na">io</span><span class="o">.</span><span class="na">UnsupportedEncodingException</span><span class="o">]</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>It comes with methods like <code>tagNames()</code>, <code>properties()</code>, <code>labels()</code> etc&hellip;</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">java</span><span class="o">&gt;</span> <span class="n">node</span><span class="o">.</span><span class="na">properties</span><span class="o">(</span><span class="s">&#34;player&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">HashMap</span> <span class="n">res11</span> <span class="o">=</span> <span class="o">{</span><span class="n">name</span><span class="o">=</span><span class="s">&#34;Tim Duncan&#34;</span><span class="o">,</span> <span class="n">age</span><span class="o">=</span><span class="n">42</span><span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="n">java</span><span class="o">&gt;</span> <span class="n">node</span><span class="o">.</span><span class="na">tagNames</span><span class="o">()</span>
</span></span><span class="line"><span class="cl"><span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">ArrayList</span> <span class="n">res12</span> <span class="o">=</span> <span class="o">[</span><span class="n">player</span><span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="n">java</span><span class="o">&gt;</span> <span class="n">node</span><span class="o">.</span><span class="na">labels</span><span class="o">()</span>
</span></span><span class="line"><span class="cl"><span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">ArrayList</span> <span class="n">res13</span> <span class="o">=</span> <span class="o">[</span><span class="n">player</span><span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="n">java</span><span class="o">&gt;</span> <span class="n">node</span><span class="o">.</span><span class="na">values</span><span class="o">(</span><span class="s">&#34;player&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">ArrayList</span> <span class="n">res14</span> <span class="o">=</span> <span class="o">[</span><span class="n">42</span><span class="o">,</span> <span class="s">&#34;Tim Duncan&#34;</span><span class="o">]</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>We only demestrated the <code>RETURN n</code> case which is a vertex, but for sure you could explore other types like: edge, path or datetime, string etc., right?</p>
<h2 id="the-executejson-method" class="headerLink">
    <a href="#the-executejson-method" class="header-mark"></a>3 The &lt;code&gt;executeJson&lt;/code&gt; method</h2><p>Since 2.6, nebule finally supports json string response and we could do this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">java</span><span class="o">&gt;</span> <span class="n">String</span> <span class="n">resp_json</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="na">executeJson</span><span class="o">(</span><span class="s">&#34;USE basketballplayer;MATCH (n:player) WHERE n.name==\&#34;Tim Duncan\&#34; RETURN n&#34;</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">String</span> <span class="n">resp_json</span> <span class="o">=</span> <span class="s">&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">{
</span></span></span><span class="line"><span class="cl"><span class="s">   &#34;</span><span class="n">errors</span><span class="s">&#34;:[
</span></span></span><span class="line"><span class="cl"><span class="s">      {
</span></span></span><span class="line"><span class="cl"><span class="s">         &#34;</span><span class="n">code</span><span class="s">&#34;:0
</span></span></span><span class="line"><span class="cl"><span class="s">      }
</span></span></span><span class="line"><span class="cl"><span class="s">   ],
</span></span></span><span class="line"><span class="cl"><span class="s">   &#34;</span><span class="n">results</span><span class="s">&#34;:[
</span></span></span><span class="line"><span class="cl"><span class="s">      {
</span></span></span><span class="line"><span class="cl"><span class="s">         &#34;</span><span class="n">spaceName</span><span class="s">&#34;:&#34;</span><span class="n">basketballplayer</span><span class="s">&#34;,
</span></span></span><span class="line"><span class="cl"><span class="s">         &#34;</span><span class="n">data</span><span class="s">&#34;:[
</span></span></span><span class="line"><span class="cl"><span class="s">            {
</span></span></span><span class="line"><span class="cl"><span class="s">               &#34;</span><span class="n">meta</span><span class="s">&#34;:[
</span></span></span><span class="line"><span class="cl"><span class="s">                  {
</span></span></span><span class="line"><span class="cl"><span class="s">                     &#34;</span><span class="n">type</span><span class="s">&#34;:&#34;</span><span class="n">vertex</span><span class="s">&#34;,
</span></span></span><span class="line"><span class="cl"><span class="s">                     &#34;</span><span class="n">id</span><span class="s">&#34;:&#34;</span><span class="n">player100</span><span class="s">&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">                  }
</span></span></span><span class="line"><span class="cl"><span class="s">               ],
</span></span></span><span class="line"><span class="cl"><span class="s">               &#34;</span><span class="n">row</span><span class="s">&#34;:[
</span></span></span><span class="line"><span class="cl"><span class="s">                  {
</span></span></span><span class="line"><span class="cl"><span class="s">                     &#34;</span><span class="n">player</span><span class="o">.</span><span class="na">age</span><span class="s">&#34;:42,
</span></span></span><span class="line"><span class="cl"><span class="s">                     &#34;</span><span class="n">player</span><span class="o">.</span><span class="na">name</span><span class="s">&#34;:&#34;</span><span class="n">Tim</span> <span class="n">Duncan</span><span class="s">&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">                  }
</span></span></span><span class="line"><span class="cl"><span class="s">               ]
</span></span></span><span class="line"><span class="cl"><span class="s">            }
</span></span></span><span class="line"><span class="cl"><span class="s">         ],
</span></span></span><span class="line"><span class="cl"><span class="s">         &#34;</span><span class="n">columns</span><span class="s">&#34;:[
</span></span></span><span class="line"><span class="cl"><span class="s">            &#34;</span><span class="n">n</span><span class="s">&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">         ],
</span></span></span><span class="line"><span class="cl"><span class="s">         &#34;</span><span class="n">errors</span><span class="s">&#34;:{
</span></span></span><span class="line"><span class="cl"><span class="s">            &#34;</span><span class="n">code</span><span class="s">&#34;:0
</span></span></span><span class="line"><span class="cl"><span class="s">         },
</span></span></span><span class="line"><span class="cl"><span class="s">         &#34;</span><span class="n">latencyInUs</span><span class="s">&#34;:4761
</span></span></span><span class="line"><span class="cl"><span class="s">      }
</span></span></span><span class="line"><span class="cl"><span class="s">   ]
</span></span></span><span class="line"><span class="cl"><span class="s">}
</span></span></span><span class="line"><span class="cl"><span class="s">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">java</span><span class="o">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>And I believe you know much better than I do with it.</p>
<h2 id="conclusion" class="headerLink">
    <a href="#conclusion" class="header-mark"></a>4 Conclusion</h2><ul>
<li>If we go with JSON response, it&rsquo;ll be easier for you to have everything parsed.</li>
<li>If we have to deal with resultSet object, just use the ValueWrapper asNode() if the value is a vertex, use asRelationship if value is an edge and asPath() if the value is a path.
<ul>
<li>With the REPL tool shown together with java reflection and source code, it&rsquo;s possbile to inspect on how data could be parsed.</li>
</ul>
</li>
</ul>
<p>Happy Graphing!</p>
<blockquote>
<p>Picture Credit：<a href="https://unsplash.com/photos/0wIHsm2_1fc" target="_blank" rel="noopener noreffer">leunesmedia</a></p>
</blockquote>]]></description>
</item><item>
    <title>Nebula Siwi: A Dialog System With Graph Database Backed Knowledge Graph</title>
    <link>https://siwei.io/en/nebula-siwi/</link>
    <pubDate>Sat, 18 Sep 2021 13:53:20 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/en/nebula-siwi/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p>a PoC of Dialog System With Graph Database Backed Knowledge Graph.</p>
</blockquote>
<p>Related GitHub Repo: <a href="https://github.com/wey-gu/nebula-siwi/" target="_blank" rel="noopener noreffer">https://github.com/wey-gu/nebula-siwi/</a></p>
<blockquote>
<p>I created the Katacoda Interactive Env for this project 👉🏻 <a href="https://siwei.io/cources/" target="_blank" rel="noopener noreffer">https://siwei.io/cources/</a></p>
</blockquote>
<blockquote>
<p>Now you can play with the data on Nebula Playground: <a href="https://nebula-graph.io/demo/" target="_blank" rel="noopener noreffer">https://nebula-graph.io/demo/</a></p>
</blockquote>
<h1 id="siwi-the-voice-assistant" class="headerLink">
    <a href="#siwi-the-voice-assistant" class="header-mark"></a>Siwi the voice assistant</h1><p>Siwi (/ˈsɪwi/) is a PoC of Dialog System With Graph Database Backed Knowledge Graph.</p>
<p>For now, it&rsquo;s a demo for task-driven(not general purpose) dialog bots with KG(Knowledge Graph) leveraging Nebula Graph with the minimal/sample dataset from <a href="https://docs.nebula-graph.io/2.0.1/3.ngql-guide/1.nGQL-overview/1.overview/#basketballplayer" target="_blank" rel="noopener noreffer">Nebula Graph Manual</a>/ <a href="https://docs.nebula-graph.com.cn/2.0.1/3.ngql-guide/1.nGQL-overview/1.overview/#basketballplayer" target="_blank" rel="noopener noreffer">NG中文手册</a>.</p>
<blockquote>
<p>Tips: Now you can play with the graph online without installing yourself!</p>
<p><a href="https://playground.nebula-graph.io" target="_blank" rel="noopener noreffer">Nebula Playground</a> | <a href="https://playground.nebula-graph.com.cn" target="_blank" rel="noopener noreffer">Nebula Playground - China Mainland</a></p>
</blockquote>
<p>Supported queries:</p>
<p><code>relation</code>:</p>
<ul>
<li>What is the relationship between Yao Ming and Lakers?</li>
<li>How does Yao Ming and Lakers connected?</li>
</ul>
<p><code>serving</code>:</p>
<ul>
<li>Which team had Yao Ming served?</li>
</ul>
<p><code>friendship</code>:</p>
<ul>
<li>Whom does Tim Duncan follow?</li>
<li>Who are Yao Ming&rsquo;s friends?</li>
</ul>
<h2 id="deploy-and-try" class="headerLink">
    <a href="#deploy-and-try" class="header-mark"></a>1 Deploy and Try</h2><p>TBD (leveraging docker and nebula-up)</p>
<h2 id="how-does-it-work" class="headerLink">
    <a href="#how-does-it-work" class="header-mark"></a>2 How does it work?</h2><p>This is one of the most naive pipeline for a specific domain/ single purpose chat bot built on a Knowledge Graph.</p>
<h3 id="backend" class="headerLink">
    <a href="#backend" class="header-mark"></a>2.1 Backend</h3><p></p>
<p>The Backend(Siwi API) is a Flask based API server:</p>
<ul>
<li>
<p>Flask API server takes questions in HTTP POST, and calls the bot API.</p>
</li>
<li>
<p>In bot API part there are classfier(Symentic Parsing, Intent Matching, Slot Filling), and question actors(Call corresponding actions to query Knowledge Graph with intents and slots).</p>
</li>
<li>
<p>Knowledge Graph is built on an Open-Source Graph Database: <a href="https://github.com/vesoft-inc/nebula-graph" target="_blank" rel="noopener noreffer">Nebula Graph</a></p>
</li>
</ul>
<h3 id="frontend" class="headerLink">
    <a href="#frontend" class="header-mark"></a>2.2 Frontend</h3><p></p>
<p>The Frontend is a VueJS Single Page Applicaiton(SPA):</p>
<ul>
<li>I reused a Vue Bot UI to showcase a chat window in this human-agent interaction, typing is supported.</li>
<li>In addtion, leverating Chrome&rsquo;s <a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API/Using_the_Web_Speech_API" target="_blank" rel="noopener noreffer">Web Speech API</a>, a button to listen to human voice is introduced</li>
</ul>
<h3 id="a-query-flow" class="headerLink">
    <a href="#a-query-flow" class="header-mark"></a>2.3 A Query Flow</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">┌────────────────┬──────────────────────────────────────┐
</span></span><span class="line"><span class="cl">│                │                                      │
</span></span><span class="line"><span class="cl">│                │  Speech                              │
</span></span><span class="line"><span class="cl">│     ┌──────────▼──────────┐                           │
</span></span><span class="line"><span class="cl">│     │            Frontend │   Siwi, /ˈsɪwi/           │
</span></span><span class="line"><span class="cl">│     │ Web_Speech_API      │   A PoC of                │
</span></span><span class="line"><span class="cl">│     │                     │   Dialog System           │
</span></span><span class="line"><span class="cl">│     │ Vue.JS              │   With Graph Database     │
</span></span><span class="line"><span class="cl">│     │                     │   Backed Knowledge Graph  │
</span></span><span class="line"><span class="cl">│     └──────────┬──────────┘                           │
</span></span><span class="line"><span class="cl">│                │  Sentence                            │
</span></span><span class="line"><span class="cl">│                │                                      │
</span></span><span class="line"><span class="cl">│   ┌────────────┼──────────────────────────────┐       │
</span></span><span class="line"><span class="cl">│   │            │                              │       │
</span></span><span class="line"><span class="cl">│   │            │              Backend         │       │
</span></span><span class="line"><span class="cl">│   │ ┌──────────▼──────────┐                   │       │
</span></span><span class="line"><span class="cl">│   │ │ Web API, Flask      │   ./app/          │       │
</span></span><span class="line"><span class="cl">│   │ └──────────┬──────────┘                   │       │
</span></span><span class="line"><span class="cl">│   │            │  Sentence    ./bot/          │       │
</span></span><span class="line"><span class="cl">│   │ ┌──────────▼──────────┐                   │       │
</span></span><span class="line"><span class="cl">│   │ │                     │                   │       │
</span></span><span class="line"><span class="cl">│   │ │ Intent matching,    │   ./bot/classifier│       │
</span></span><span class="line"><span class="cl">│   │ │ Symentic Processing │                   │       │
</span></span><span class="line"><span class="cl">│   │ │                     │                   │       │
</span></span><span class="line"><span class="cl">│   │ └──────────┬──────────┘                   │       │
</span></span><span class="line"><span class="cl">│   │            │  Intent, Entities            │       │
</span></span><span class="line"><span class="cl">│   │ ┌──────────▼──────────┐                   │       │
</span></span><span class="line"><span class="cl">│   │ │                     │                   │       │
</span></span><span class="line"><span class="cl">│   │ │ Intent Actor        │   ./bot/actions   │       │
</span></span><span class="line"><span class="cl">│   │ │                     │                   │       │
</span></span><span class="line"><span class="cl">│   └─┴──────────┬──────────┴───────────────────┘       │
</span></span><span class="line"><span class="cl">│                │  Graph Query                         │
</span></span><span class="line"><span class="cl">│     ┌──────────▼──────────┐                           │
</span></span><span class="line"><span class="cl">│     │                     │                           │
</span></span><span class="line"><span class="cl">│     │ Graph Database      │    Nebula Graph           │
</span></span><span class="line"><span class="cl">│     │                     │                           │
</span></span><span class="line"><span class="cl">│     └─────────────────────┘                           │
</span></span><span class="line"><span class="cl">│                                                       │
</span></span><span class="line"><span class="cl">│                                                       │
</span></span><span class="line"><span class="cl">│                                                       │
</span></span><span class="line"><span class="cl">└───────────────────────────────────────────────────────┘
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="source-code-tree" class="headerLink">
    <a href="#source-code-tree" class="header-mark"></a>2.4 Source Code Tree</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">.
</span></span><span class="line"><span class="cl">├── README.md
</span></span><span class="line"><span class="cl">├── src
</span></span><span class="line"><span class="cl">│   ├── siwi                        <span class="c1"># Siwi-API Backend</span>
</span></span><span class="line"><span class="cl">│   │   ├── app                     <span class="c1"># Web Server, take HTTP requests and calls Bot API</span>
</span></span><span class="line"><span class="cl">│   │   └── bot                     <span class="c1"># Bot API</span>
</span></span><span class="line"><span class="cl">│   │       ├── actions             <span class="c1"># Take Intent, Slots, Query Knowledge Graph here</span>
</span></span><span class="line"><span class="cl">│   │       ├── bot                 <span class="c1"># Entrypoint of the Bot API</span>
</span></span><span class="line"><span class="cl">│   │       ├── classifier          <span class="c1"># Symentic Parsing, Intent Matching, Slot Filling</span>
</span></span><span class="line"><span class="cl">│   │       └── <span class="nb">test</span>                <span class="c1"># Example Data Source as equivalent/mocked module</span>
</span></span><span class="line"><span class="cl">│   └── siwi_frontend               <span class="c1"># Browser End</span>
</span></span><span class="line"><span class="cl">│       ├── README.md
</span></span><span class="line"><span class="cl">│       ├── package.json
</span></span><span class="line"><span class="cl">│       └── src
</span></span><span class="line"><span class="cl">│           ├── App.vue             <span class="c1"># Listening to user and pass Questions to Siwi-API</span>
</span></span><span class="line"><span class="cl">│           └── main.js
</span></span><span class="line"><span class="cl">└── wsgi.py
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="manually-run-components" class="headerLink">
    <a href="#manually-run-components" class="header-mark"></a>3 Manually Run Components</h2><h3 id="backend-1" class="headerLink">
    <a href="#backend-1" class="header-mark"></a>3.1 Backend</h3><p>Install and run.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Install siwi backend</span>
</span></span><span class="line"><span class="cl">python3 -m build
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Configure Nebula Graph Endpoint</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">NG_ENDPOINTS</span><span class="o">=</span>127.0.0.1:9669
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Run Backend API server</span>
</span></span><span class="line"><span class="cl">gunicorn --bind :5000 wsgi --workers <span class="m">1</span> --threads <span class="m">1</span> --timeout <span class="m">60</span>
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>For OpenFunction/ KNative</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker build -t weygu/siwi-api .
</span></span><span class="line"><span class="cl">docker run --rm --name siwi-api <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>     --env<span class="o">=</span><span class="nv">PORT</span><span class="o">=</span><span class="m">5000</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>     --env<span class="o">=</span><span class="nv">NG_ENDPOINTS</span><span class="o">=</span>127.0.0.1:9669 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>     --net<span class="o">=</span>host <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>     weygu/siwi-api
</span></span></code></pre></td></tr></table>
</div>
</div><p>Try it out Web API:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl --header <span class="s2">&#34;Content-Type: application/json&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>       --request POST <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>       --data <span class="s1">&#39;{&#34;question&#34;: &#34;What is the relationship between Yao Ming and Lakers?&#34;}&#39;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>       http://192.168.8.128:5000/query <span class="p">|</span> jq
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;answer&#34;</span>: <span class="s2">&#34;There are at least 23 relations between Yao Ming and Lakers, one relation path is: Yao Ming follows Shaquille O&#39;Neal serves Lakers.&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Call Bot Python API:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">nebula2.gclient.net</span> <span class="kn">import</span> <span class="n">ConnectionPool</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">nebula2.Config</span> <span class="kn">import</span> <span class="n">Config</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># define a config</span>
</span></span><span class="line"><span class="cl"><span class="n">config</span> <span class="o">=</span> <span class="n">Config</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">config</span><span class="o">.</span><span class="n">max_connection_pool_size</span> <span class="o">=</span> <span class="mi">10</span>
</span></span><span class="line"><span class="cl"><span class="c1"># init connection pool</span>
</span></span><span class="line"><span class="cl"><span class="n">connection_pool</span> <span class="o">=</span> <span class="n">ConnectionPool</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="c1"># if the given servers are ok, return true, else return false</span>
</span></span><span class="line"><span class="cl"><span class="n">ok</span> <span class="o">=</span> <span class="n">connection_pool</span><span class="o">.</span><span class="n">init</span><span class="p">([(</span><span class="s1">&#39;127.0.0.1&#39;</span><span class="p">,</span> <span class="mi">9669</span><span class="p">)],</span> <span class="n">config</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># import siwi bot</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">siwi.bot</span> <span class="kn">import</span> <span class="n">bot</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># instantiate a bot</span>
</span></span><span class="line"><span class="cl"><span class="n">b</span> <span class="o">=</span> <span class="n">bot</span><span class="o">.</span><span class="n">SiwiBot</span><span class="p">(</span><span class="n">connection_pool</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># make the question query</span>
</span></span><span class="line"><span class="cl"><span class="n">b</span><span class="o">.</span><span class="n">query</span><span class="p">(</span><span class="s2">&#34;Which team had Jonathon Simmons served?&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then a response will be like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">In</span> <span class="p">[</span><span class="mi">4</span><span class="p">]:</span> <span class="n">b</span><span class="o">.</span><span class="n">query</span><span class="p">(</span><span class="s2">&#34;Which team had Jonathon Simmons serv</span>
</span></span><span class="line"><span class="cl">   <span class="o">...</span><span class="p">:</span> <span class="n">ed</span><span class="err">?</span><span class="s2">&#34;)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">DEBUG</span><span class="p">]</span> <span class="n">ServeAction</span> <span class="n">intent</span><span class="p">:</span> <span class="p">{</span><span class="s1">&#39;entities&#39;</span><span class="p">:</span> <span class="p">{</span><span class="s1">&#39;Jonathon Simmons&#39;</span><span class="p">:</span> <span class="s1">&#39;player&#39;</span><span class="p">},</span> <span class="s1">&#39;intents&#39;</span><span class="p">:</span> <span class="p">(</span><span class="s1">&#39;serve&#39;</span><span class="p">,)}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">DEBUG</span><span class="p">]</span> <span class="n">query</span> <span class="k">for</span> <span class="n">RelationshipAction</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="n">USE</span> <span class="n">basketballplayer</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">MATCH</span> <span class="n">p</span><span class="o">=</span><span class="p">(</span><span class="n">v</span><span class="p">)</span><span class="o">-</span><span class="p">[</span><span class="n">e</span><span class="p">:</span><span class="n">serve</span><span class="o">*</span><span class="mi">1</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">(</span><span class="n">v1</span><span class="p">)</span> <span class="n">WHERE</span> <span class="nb">id</span><span class="p">(</span><span class="n">v</span><span class="p">)</span> <span class="o">==</span> <span class="s2">&#34;player112&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">RETURN</span> <span class="n">p</span> <span class="n">LIMIT</span> <span class="mi">100</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="mi">2021</span><span class="o">-</span><span class="mi">07</span><span class="o">-</span><span class="mi">02</span> <span class="mi">02</span><span class="p">:</span><span class="mi">59</span><span class="p">:</span><span class="mi">36</span><span class="p">,</span><span class="mi">392</span><span class="p">]:</span><span class="n">Get</span> <span class="n">connection</span> <span class="n">to</span> <span class="p">(</span><span class="s1">&#39;127.0.0.1&#39;</span><span class="p">,</span> <span class="mi">9669</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Out</span><span class="p">[</span><span class="mi">4</span><span class="p">]:</span> <span class="s1">&#39;Jonathon Simmons had served 3 teams. Spurs from 2015 to 2015; 76ers from 2019 to 2019; Magic from 2017 to 2017; &#39;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="frontend-1" class="headerLink">
    <a href="#frontend-1" class="header-mark"></a>3.2 Frontend</h3><p>Referring to <a href="https://github.com/wey-gu/nebula-siwi/tree/main/src/siwi_frontend" target="_blank" rel="noopener noreffer">siwi_frontend</a></p>
<h2 id="further-work" class="headerLink">
    <a href="#further-work" class="header-mark"></a>4 Further work</h2><ul>
<li><i class="far fa-square fa-fw"></i> Use <a href="https://github.com/swar/nba_api" target="_blank" rel="noopener noreffer">NBA-API</a> to fallback undefined pattern questions</li>
<li><i class="far fa-square fa-fw"></i> Wrap and manage sessions instead of get and release session per request, this is somehow costly actually.</li>
<li><i class="far fa-square fa-fw"></i> Use NLP methods to implement proper Symentic Parsing, Intent Matching, Slot Filling</li>
<li><i class="far fa-square fa-fw"></i> Build Graph to help with Intent Matching, especially for a general purpose bot</li>
<li><i class="far fa-square fa-fw"></i> Use larger Dataset i.e. from <a href="https://www.kaggle.com/wyattowalsh/basketball" target="_blank" rel="noopener noreffer">wyattowalsh/basketball</a></li>
</ul>
<h2 id="thanks-to-upstream-projects-" class="headerLink">
    <a href="#thanks-to-upstream-projects-" class="header-mark"></a>5 Thanks to Upstream Projects ❤️</h2><h3 id="backend-2" class="headerLink">
    <a href="#backend-2" class="header-mark"></a>5.1 Backend</h3><ul>
<li>I learnt a lot from the <a href="https://github.com/liuhuanyong/QASystemOnMedicalKG" target="_blank" rel="noopener noreffer">KGQA on MedicalKG</a> created by <a href="https://liuhuanyong.github.io" target="_blank" rel="noopener noreffer">Huanyong Liu</a></li>
<li><a href="https://github.com/pallets/flask" target="_blank" rel="noopener noreffer">Flask</a></li>
<li><a href="https://github.com/WojciechMula/pyahocorasick" target="_blank" rel="noopener noreffer">pyahocorasick</a> created by <a href="http://0x80.pl/" target="_blank" rel="noopener noreffer">Wojciech Muła</a></li>
<li><a href="https://pyyaml.org/" target="_blank" rel="noopener noreffer">PyYaml</a></li>
</ul>
<h3 id="frontend-2" class="headerLink">
    <a href="#frontend-2" class="header-mark"></a>5.2 Frontend</h3><ul>
<li><a href="https://vuejs.org" target="_blank" rel="noopener noreffer">VueJS</a> for frontend framework</li>
<li><a href="https://github.com/juzser/vue-bot-ui" target="_blank" rel="noopener noreffer">Vue Bot UI</a>, as a lovely bot UI in vue</li>
<li><a href="https://github.com/Drackokacka/vue-web-speech" target="_blank" rel="noopener noreffer">Vue Web Speech</a>, for speech API vue wrapper</li>
<li><a href="https://github.com/axios/axios" target="_blank" rel="noopener noreffer">Axios</a> for browser http client</li>
<li><a href="https://en.wikipedia.org/wiki/Solarized_%28color_scheme%29" target="_blank" rel="noopener noreffer">Solarized</a> for color scheme</li>
<li><a href="https://github.com/alvarosaburido/vitesome" target="_blank" rel="noopener noreffer">Vitesome</a> for landing page design</li>
</ul>
<blockquote>
<p>Image credit goes to <a href="https://unsplash.com/photos/0E_vhMVqL9g" target="_blank" rel="noopener noreffer">https://unsplash.com/photos/0E_vhMVqL9g</a></p>
</blockquote>]]></description>
</item><item>
    <title>Nebula CLion: Setup Nebula Graph Dev Env with CLion and Docker</title>
    <link>https://siwei.io/en/nebula-clion/</link>
    <pubDate>Sat, 18 Sep 2021 10:00:05 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/en/nebula-clion/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p>之前卡比同学向我咨询搭建 CLion 环境，开发 Nebula 的一些问题，我做了一些工作方便利用 Docker 在本地搭建这样一个环境，相关的东西放在：https://github.com/wey-gu/nebula-dev-CLion 。</p>
</blockquote>
<p>Related GitHub Repo: <a href="https://github.com/wey-gu/nebula-dev-CLion" target="_blank" rel="noopener noreffer">https://github.com/wey-gu/nebula-dev-CLion</a></p>
<h2 id="run-docker-env-for-nebula-graph-with-clion" class="headerLink">
    <a href="#run-docker-env-for-nebula-graph-with-clion" class="header-mark"></a>1 Run Docker Env for Nebula-Graph with CLion</h2><p>Build Docker Image</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git clone https://github.com/wey-gu/nebula-dev-CLion.git
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> nebula-dev-CLion
</span></span><span class="line"><span class="cl">docker build -t wey/nebula-dev-clion:v2.0 .
</span></span></code></pre></td></tr></table>
</div>
</div><p>Run Docker Container for Nebula-Dev with CLion Integration Readiness(actually mostly Rsync &amp; SSH).</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> &lt;nebula-graph-repo-you-worked-on&gt;
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">DOCKER_DEFAULT_PLATFORM</span><span class="o">=</span>linux/amd64
</span></span><span class="line"><span class="cl">docker run --rm -d <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --name nebula-dev <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --security-opt <span class="nv">seccomp</span><span class="o">=</span>unconfined <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -p 2222:22 -p 2873:873 --cap-add<span class="o">=</span>ALL <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -v <span class="nv">$PWD</span>:/home/nebula <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -w /home/nebula <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  wey/nebula-dev-clion:v2.0
</span></span></code></pre></td></tr></table>
</div>
</div><p>Verify cmake with SSH.</p>
<blockquote>
<p>The default password is <code>password</code></p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">ssh -o <span class="nv">StrictHostKeyChecking</span><span class="o">=</span>no root@localhost -p <span class="m">2222</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># in docker</span>
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> /home/nebula
</span></span><span class="line"><span class="cl">mkdir build <span class="o">&amp;&amp;</span> <span class="nb">cd</span> build
</span></span><span class="line"><span class="cl">cmake -DENABLE_TESTING<span class="o">=</span>OFF -DCMAKE_BUILD_TYPE<span class="o">=</span>Release ..
</span></span></code></pre></td></tr></table>
</div>
</div><p>Access container w/o SSH.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker <span class="nb">exec</span> -it nebula-dev bash
</span></span><span class="line"><span class="cl">mkdir -p build <span class="o">&amp;&amp;</span> <span class="nb">cd</span> build
</span></span><span class="line"><span class="cl">cmake -DENABLE_TESTING<span class="o">=</span>OFF -DCMAKE_BUILD_TYPE<span class="o">=</span>Release ..
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="configurations-in-clion" class="headerLink">
    <a href="#configurations-in-clion" class="header-mark"></a>2 Configurations in CLion</h2><blockquote>
<p>Ref: <a href="https://www.jetbrains.com/help/clion/clion-toolchains-in-docker.html#build-and-run" target="_blank" rel="noopener noreffer">https://www.jetbrains.com/help/clion/clion-toolchains-in-docker.html#build-and-run</a></p>
</blockquote>
<p><strong>Toolchains</strong></p>
<ul>
<li>Add a remote host
<ul>
<li><code>root@localhost:2222</code></li>
<li><code>password</code></li>
</ul>
</li>
<li>Put <code>/opt/vesoft/toolset/cmake/bin/cmake</code> as CMake</li>
</ul>
<p></p>
<p><strong>CMake</strong></p>
<ul>
<li>Toochain:
<ul>
<li>Select the one created in last step</li>
</ul>
</li>
<li>Build directory:
<ul>
<li><code>/home/nebula/build</code></li>
</ul>
</li>
</ul>
<p></p>
<h2 id="the-appendix" class="headerLink">
    <a href="#the-appendix" class="header-mark"></a>3 The appendix</h2><h3 id="references-of-cmake-output" class="headerLink">
    <a href="#references-of-cmake-output" class="header-mark"></a>3.1 References of CMake output:</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>root@4c98e3f77ce8 build<span class="o">]</span><span class="c1"># cmake -DENABLE_TESTING=OFF -DCMAKE_BUILD_TYPE=Release ..</span>
</span></span><span class="line"><span class="cl">&gt;&gt;&gt;&gt; Options of Nebula Graph <span class="o">&lt;&lt;&lt;</span>&lt;
</span></span><span class="line"><span class="cl">-- ENABLE_ASAN                     : OFF <span class="o">(</span>Build with AddressSanitizer<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_BUILD_STORAGE            : OFF <span class="o">(</span>Whether to build storage<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_CCACHE                   : ON <span class="o">(</span>Use ccache to speed up compiling<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_CLANG_TIDY               : OFF <span class="o">(</span>Enable clang-tidy <span class="k">if</span> present<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_COMPRESSED_DEBUG_INFO    : ON <span class="o">(</span>Compress debug info to reduce binary size<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_COVERAGE                 : OFF <span class="o">(</span>Build with coverage report<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_FRAME_POINTER            : OFF <span class="o">(</span>Build with frame pointer<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_FUZZY_TESTING            : OFF <span class="o">(</span>Enable Fuzzy tests<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_GDB_SCRIPT_SECTION       : OFF <span class="o">(</span>Add .debug_gdb_scripts section<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_JEMALLOC                 : ON <span class="o">(</span>Use jemalloc as memory allocator<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_MODULE_FORCE_CHECKOUT    : ON <span class="o">(</span>Whether checkout branch of module to same as graph.<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_MODULE_UPDATE            : OFF <span class="o">(</span>Automatically update module<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_PACK_ONE                 : ON <span class="o">(</span>Whether to package into one<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_PIC                      : OFF <span class="o">(</span>Build with -fPIC<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_STATIC_ASAN              : OFF <span class="o">(</span>Statically link against libasan<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_STATIC_UBSAN             : OFF <span class="o">(</span>Statically link against libubsan<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_STRICT_ALIASING          : OFF <span class="o">(</span>Build with -fstrict-aliasing<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_TESTING                  : OFF <span class="o">(</span>Build unit tests<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_TSAN                     : OFF <span class="o">(</span>Build with ThreadSanitizer<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_UBSAN                    : OFF <span class="o">(</span>Build with UndefinedBehaviourSanitizer<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_VERBOSE_BISON            : OFF <span class="o">(</span>Enable Bison to report state<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_WERROR                   : ON <span class="o">(</span>Regard warnings as errors<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- CMAKE_BUILD_TYPE                : Release <span class="o">(</span>Choose the <span class="nb">type</span> of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- CMAKE_INSTALL_PREFIX            : /usr/local/nebula <span class="o">(</span>Install path prefix, prepended onto install directories.<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- CMAKE_CXX_STANDARD              : <span class="m">17</span>
</span></span><span class="line"><span class="cl">-- CMAKE_CXX_COMPILER              : /opt/vesoft/toolset/clang/9.0.0/bin/c++ <span class="o">(</span>CXX compiler<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- CMAKE_CXX_COMPILER_ID           : GNU
</span></span><span class="line"><span class="cl">-- NEBULA_USE_LINKER               : bfd
</span></span><span class="line"><span class="cl">-- CCACHE_DIR                      : /root/.ccache
</span></span><span class="line"><span class="cl">&gt;&gt;&gt;&gt; Configuring third party <span class="k">for</span> <span class="s1">&#39;Nebula Graph&#39;</span> <span class="o">&lt;&lt;&lt;</span>&lt;
</span></span><span class="line"><span class="cl">-- NEBULA_THIRDPARTY_ROOT          : /opt/vesoft/third-party/2.0
</span></span><span class="line"><span class="cl">-- Build info of nebula third party:
</span></span><span class="line"><span class="cl">Package         : Nebula Third Party
</span></span><span class="line"><span class="cl">Version         : 2.0
</span></span><span class="line"><span class="cl">Date            : Mon Jun <span class="m">28</span> 15:07:38 UTC <span class="m">2021</span>
</span></span><span class="line"><span class="cl">glibc           : 2.17
</span></span><span class="line"><span class="cl">Arch            : x86_64
</span></span><span class="line"><span class="cl">Compiler        : GCC 9.2.0
</span></span><span class="line"><span class="cl">C++ ABI         : <span class="m">11</span>
</span></span><span class="line"><span class="cl">Vendor          : VEsoft Inc.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-- CMAKE_INCLUDE_PATH              : /opt/vesoft/third-party/2.0/include
</span></span><span class="line"><span class="cl">-- CMAKE_LIBRARY_PATH              : /opt/vesoft/third-party/2.0/lib64<span class="p">;</span>/opt/vesoft/third-party/2.0/lib
</span></span><span class="line"><span class="cl">-- CMAKE_PROGRAM_PATH              : /opt/vesoft/third-party/2.0/bin
</span></span><span class="line"><span class="cl">-- GLIBC_VERSION                   : 2.17
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-- found krb5-config here /opt/vesoft/third-party/2.0/bin/krb5-config
</span></span><span class="line"><span class="cl">-- Found kerberos <span class="m">5</span> headers: /opt/vesoft/third-party/2.0/include
</span></span><span class="line"><span class="cl">-- Found kerberos <span class="m">5</span> libs:    /opt/vesoft/third-party/2.0/lib/libgssapi_krb5.a<span class="p">;</span>/opt/vesoft/third-party/2.0/lib/libkrb5.a<span class="p">;</span>/opt/vesoft/third-party/2.0/lib/libk5crypto.a<span class="p">;</span>/opt/vesoft/third-party/2.0/lib/libcom_err.a<span class="p">;</span>/opt/vesoft/third-party/2.0/lib/libkrb5support.a
</span></span><span class="line"><span class="cl">&gt;&gt;&gt;&gt; Configuring third party <span class="k">for</span> <span class="s1">&#39;Nebula Graph&#39;</span> <span class="k">done</span> <span class="o">&lt;&lt;&lt;</span>&lt;
</span></span><span class="line"><span class="cl">-- Create the pre-commit hook
</span></span><span class="line"><span class="cl">-- Creating pre-commit hook <span class="k">done</span>
</span></span><span class="line"><span class="cl">&gt;&gt;&gt;&gt; Configuring Nebula Common <span class="o">&lt;&lt;&lt;</span>&lt;
</span></span><span class="line"><span class="cl">&gt;&gt;&gt;&gt; Options of Nebula Common <span class="o">&lt;&lt;&lt;</span>&lt;
</span></span><span class="line"><span class="cl">-- ENABLE_ASAN                     : OFF <span class="o">(</span>Build with AddressSanitizer<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_CCACHE                   : ON <span class="o">(</span>Use ccache to speed up compiling<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_CLANG_TIDY               : OFF <span class="o">(</span>Enable clang-tidy <span class="k">if</span> present<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_COMPRESSED_DEBUG_INFO    : ON <span class="o">(</span>Compress debug info to reduce binary size<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_COVERAGE                 : OFF <span class="o">(</span>Build with coverage report<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_FRAME_POINTER            : OFF <span class="o">(</span>Build with frame pointer<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_FUZZY_TESTING            : OFF <span class="o">(</span>Enable Fuzzy tests<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_GDB_SCRIPT_SECTION       : OFF <span class="o">(</span>Add .debug_gdb_scripts section<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_JEMALLOC                 : ON <span class="o">(</span>Use jemalloc as memory allocator<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_PIC                      : OFF <span class="o">(</span>Build with -fPIC<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_STATIC_ASAN              : OFF <span class="o">(</span>Statically link against libasan<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_STATIC_UBSAN             : OFF <span class="o">(</span>Statically link against libubsan<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_STRICT_ALIASING          : OFF <span class="o">(</span>Build with -fstrict-aliasing<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_TESTING                  : OFF <span class="o">(</span>Build unit tests<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_TSAN                     : OFF <span class="o">(</span>Build with ThreadSanitizer<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_UBSAN                    : OFF <span class="o">(</span>Build with UndefinedBehaviourSanitizer<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- ENABLE_WERROR                   : ON <span class="o">(</span>Regard warnings as errors<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- Set D_GLIBCXX_USE_CXX11_ABI to <span class="m">1</span>
</span></span><span class="line"><span class="cl">-- CMAKE_BUILD_TYPE                : Release <span class="o">(</span>Choose the <span class="nb">type</span> of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- CMAKE_INSTALL_PREFIX            : /usr/local/nebula <span class="o">(</span>Install path prefix, prepended onto install directories.<span class="o">)</span>
</span></span><span class="line"><span class="cl">-- CMAKE_CXX_STANDARD              : <span class="m">17</span>
</span></span><span class="line"><span class="cl">-- CMAKE_CXX_COMPILER              : /opt/vesoft/toolset/clang/9.0.0/bin/c++
</span></span><span class="line"><span class="cl">-- CMAKE_CXX_COMPILER_ID           : GNU
</span></span><span class="line"><span class="cl">-- NEBULA_USE_LINKER               : bfd
</span></span><span class="line"><span class="cl">-- CCACHE_DIR                      : /root/.ccache
</span></span><span class="line"><span class="cl">&gt;&gt;&gt;&gt; Configuring third party <span class="k">for</span> <span class="s1">&#39;Nebula Common&#39;</span> <span class="o">&lt;&lt;&lt;</span>&lt;
</span></span><span class="line"><span class="cl">-- NEBULA_THIRDPARTY_ROOT          : /opt/vesoft/third-party/2.0
</span></span><span class="line"><span class="cl">-- Build info of nebula third party:
</span></span><span class="line"><span class="cl">Package         : Nebula Third Party
</span></span><span class="line"><span class="cl">Version         : 2.0
</span></span><span class="line"><span class="cl">Date            : Mon Jun <span class="m">28</span> 15:07:38 UTC <span class="m">2021</span>
</span></span><span class="line"><span class="cl">glibc           : 2.17
</span></span><span class="line"><span class="cl">Arch            : x86_64
</span></span><span class="line"><span class="cl">Compiler        : GCC 9.2.0
</span></span><span class="line"><span class="cl">C++ ABI         : <span class="m">11</span>
</span></span><span class="line"><span class="cl">Vendor          : VEsoft Inc.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-- CMAKE_INCLUDE_PATH              : /opt/vesoft/third-party/2.0/include
</span></span><span class="line"><span class="cl">-- CMAKE_LIBRARY_PATH              : /opt/vesoft/third-party/2.0/lib64<span class="p">;</span>/opt/vesoft/third-party/2.0/lib
</span></span><span class="line"><span class="cl">-- CMAKE_PROGRAM_PATH              : /opt/vesoft/third-party/2.0/bin
</span></span><span class="line"><span class="cl">-- GLIBC_VERSION                   : 2.17
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-- found krb5-config here /opt/vesoft/third-party/2.0/bin/krb5-config
</span></span><span class="line"><span class="cl">-- Found kerberos <span class="m">5</span> headers: /opt/vesoft/third-party/2.0/include
</span></span><span class="line"><span class="cl">-- Found kerberos <span class="m">5</span> libs:    /opt/vesoft/third-party/2.0/lib/libgssapi_krb5.a<span class="p">;</span>/opt/vesoft/third-party/2.0/lib/libkrb5.a<span class="p">;</span>/opt/vesoft/third-party/2.0/lib/libk5crypto.a<span class="p">;</span>/opt/vesoft/third-party/2.0/lib/libcom_err.a<span class="p">;</span>/opt/vesoft/third-party/2.0/lib/libkrb5support.a
</span></span><span class="line"><span class="cl">&gt;&gt;&gt;&gt; Configuring third party <span class="k">for</span> <span class="s1">&#39;Nebula Common&#39;</span> <span class="k">done</span> <span class="o">&lt;&lt;&lt;</span>&lt;
</span></span><span class="line"><span class="cl">-- Create the pre-commit hook
</span></span><span class="line"><span class="cl">-- Creating pre-commit hook <span class="k">done</span>
</span></span><span class="line"><span class="cl">-- Configuring <span class="k">done</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-- Generating <span class="k">done</span>
</span></span><span class="line"><span class="cl">-- Build files have been written to: /home/nebula/build/modules/common
</span></span><span class="line"><span class="cl">&gt;&gt;&gt;&gt; Configuring Nebula Common <span class="k">done</span> <span class="o">&lt;&lt;&lt;</span>&lt;
</span></span><span class="line"><span class="cl">-- Configuring <span class="k">done</span>
</span></span><span class="line"><span class="cl">-- Generating <span class="k">done</span>
</span></span><span class="line"><span class="cl">-- Build files have been written to: /home/nebula/build
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>题图版权：<a href="https://unsplash.com/@glencarrie" target="_blank" rel="noopener noreffer">@glencarrie</a></p>
</blockquote>]]></description>
</item><item>
    <title>Nebula Holdshare Dataset: A demo of Shareholding Breakthrough with Distributed open-source Graph Database: Nebula Graph.</title>
    <link>https://siwei.io/en/nebula-holdshare-dataset/</link>
    <pubDate>Sat, 28 Aug 2021 13:54:03 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/en/nebula-holdshare-dataset/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p>A demo of Shareholding Breakthrough with Distributed open-source Graph Database: Nebula Graph. 图数据库应用示例：股权关系穿透</p>
</blockquote>
<p>Related GitHub Repo: <a href="https://github.com/wey-gu/nebula-shareholding-example" target="_blank" rel="noopener noreffer">https://github.com/wey-gu/nebula-shareholding-example</a></p>
<blockquote>
<p>更新：在这个数据集生成的工作基础上，我又做了一个全栈示例项目 👉🏻 <a href="https://siwei.io/corp-rel-graph/" target="_blank" rel="noopener noreffer">https://siwei.io/corp-rel-graph/</a></p>
</blockquote>
<blockquote>
<p>I created the Katacoda Interactive Env for this project 👉🏻 <a href="https://siwei.io/cources/" target="_blank" rel="noopener noreffer">https://siwei.io/cources/</a></p>
</blockquote>
<blockquote>
<p>Now you can play with the data on Nebula Playground: <a href="https://nebula-graph.io/demo/" target="_blank" rel="noopener noreffer">https://nebula-graph.io/demo/</a></p>
</blockquote>
<p>This is a demo of Shareholding Relationship Analysis with Distributed open-source Graph Database: Nebula Graph.</p>
<h2 id="data" class="headerLink">
    <a href="#data" class="header-mark"></a>1 Data</h2><h3 id="data-modeling" class="headerLink">
    <a href="#data-modeling" class="header-mark"></a>1.1 Data Modeling</h3><p></p>
<p>There are various kinds of relationships when we checking companies&rsquo; shareholding breakthrough, here let&rsquo;s simplify it with only two kind of entities: person and corp, and with following relationship types.</p>
<ul>
<li><code>person</code> can hold a <code>corp</code> in <code>{share} %</code></li>
<li><code>person</code> can be relative with another <code>person</code></li>
<li><code>corp</code> can hold another <code>corp</code> in <code>{share} %</code></li>
<li><code>corp</code> can be a branch of another <code>corp</code></li>
<li><code>person</code> can be as a role of a <code>corp</code></li>
</ul>
<p>Below is the lines to reflect this graph modele in Nebula Graph, it&rsquo;s quite straightforward, right?</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">CREATE</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="n">person</span><span class="p">(</span><span class="n">name</span><span class="w"> </span><span class="n">string</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="n">corp</span><span class="p">(</span><span class="n">name</span><span class="w"> </span><span class="n">string</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="n">role_as</span><span class="p">(</span><span class="k">role</span><span class="w"> </span><span class="n">string</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="n">is_branch_of</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="n">hold_share</span><span class="p">(</span><span class="k">share</span><span class="w"> </span><span class="nb">float</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="n">reletive_with</span><span class="p">(</span><span class="n">degree</span><span class="w"> </span><span class="nb">int</span><span class="p">);</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="data-generation" class="headerLink">
    <a href="#data-generation" class="header-mark"></a>1.2 Data Generation</h3><p>We just randomly generate some data to help with this demo, you can call <code>data_generator.py</code> directly to generate or reuse what&rsquo;s already done under <code>data_sample</code> folder.</p>
<p>The generated data are records to be fit in above data model from below <code>.csv</code> files.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ pip install <span class="nv">Faker</span><span class="o">==</span>2.0.5 <span class="nv">pydbgen</span><span class="o">==</span>1.0.5
</span></span><span class="line"><span class="cl">$ python3 data_generator.py
</span></span><span class="line"><span class="cl">$ ls -l data
</span></span><span class="line"><span class="cl">total <span class="m">1688</span>
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> weyl  staff   <span class="m">23941</span> Jul <span class="m">14</span> 13:28 corp.csv
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> weyl  staff    <span class="m">1277</span> Jul <span class="m">14</span> 13:26 corp_rel.csv
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> weyl  staff    <span class="m">3048</span> Jul <span class="m">14</span> 13:26 corp_share.csv
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> weyl  staff  <span class="m">211661</span> Jul <span class="m">14</span> 13:26 person.csv
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> weyl  staff  <span class="m">179770</span> Jul <span class="m">14</span> 13:26 person_corp_role.csv
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> weyl  staff  <span class="m">322965</span> Jul <span class="m">14</span> 13:26 person_corp_share.csv
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> weyl  staff   <span class="m">17689</span> Jul <span class="m">14</span> 13:26 person_rel.csv
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="data-import" class="headerLink">
    <a href="#data-import" class="header-mark"></a>1.3 Data Import</h3><p>With those data in <code>.csv</code> files, we can easily import them into a Nebula Graph Cluster with the help of <a href="https://github.com/vesoft-inc/nebula-importer" target="_blank" rel="noopener noreffer">Nebula-Importer</a>. <code>nebula-importer.yaml</code> in this repo describes rules and configurations on how this import will be done by the importer.</p>
<p>For Nebula Graph Database, plesae refer to <a href="https://docs.nebula-graph.io/" target="_blank" rel="noopener noreffer">Doc</a> , <a href="https://docs.nebula-graph.com.cn/" target="_blank" rel="noopener noreffer">Doc-CN</a> to deploy on any Linux Servers, for study and test, you can run it via Docker following the Quick Start Chapter of the documentation.</p>
<p>For Nebula-Importer, if you already have Docker env, you can run it as the following without installing anything. Or, if you prefer to install it, it&rsquo;s quite easy as it&rsquo;s written in Golang and you can run its single file binary quite easily, go check both Documentation and Nebula-Importer Repo: <a href="https://github.com/vesoft-inc/nebula-importer" target="_blank" rel="noopener noreffer">https://github.com/vesoft-inc/nebula-importer</a>.</p>
<blockquote>
<p>Let&rsquo;s start! Below is the commands I used to import our data into a Nebula Graph Database.</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># put generated data &amp; nebula-importor.yaml to nebula-importer server</span>
</span></span><span class="line"><span class="cl">$ scp -r data nebula_graph_host:~
</span></span><span class="line"><span class="cl">$ scp nebula-importer.yaml data nebula_graph_host:~/data
</span></span><span class="line"><span class="cl">$ ssh nebula_graph_host
</span></span><span class="line"><span class="cl">$ ls -l <span class="si">${</span><span class="nv">HOME</span><span class="si">}</span>/data
</span></span><span class="line"><span class="cl">total <span class="m">756</span>
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> wei.gu wei.gu  <span class="m">23941</span> Jul <span class="m">14</span> 05:44 corp.csv
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> wei.gu wei.gu   <span class="m">1277</span> Jul <span class="m">14</span> 05:44 corp_rel.csv
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> wei.gu wei.gu   <span class="m">3048</span> Jul <span class="m">14</span> 05:44 corp_share.csv
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> wei.gu wei.gu   <span class="m">3893</span> Jul <span class="m">14</span> 05:44 nebula-importer.yaml
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> wei.gu wei.gu <span class="m">211661</span> Jul <span class="m">14</span> 05:44 person.csv
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> wei.gu wei.gu <span class="m">179770</span> Jul <span class="m">14</span> 05:44 person_corp_role.csv
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> wei.gu wei.gu <span class="m">322965</span> Jul <span class="m">14</span> 05:44 person_corp_share.csv
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> wei.gu wei.gu  <span class="m">17689</span> Jul <span class="m">14</span> 05:44 person_rel.csv
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># import data into our nebula graph database</span>
</span></span><span class="line"><span class="cl">$ docker run --rm -ti <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --network<span class="o">=</span>nebula-docker-compose_nebula-net <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -v <span class="si">${</span><span class="nv">HOME</span><span class="si">}</span>/data/nebula-importer.yaml:/root/nebula-importer.yaml <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -v <span class="si">${</span><span class="nv">HOME</span><span class="si">}</span>/data:/root <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    vesoft/nebula-importer:v2 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --config /root/nebula-importer.yaml
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">2021/07/14 05:49:32 --- START OF NEBULA IMPORTER ---
</span></span><span class="line"><span class="cl">2021/07/14 05:49:32 <span class="o">[</span>WARN<span class="o">]</span> config.go:491: Not <span class="nb">set</span> files<span class="o">[</span>0<span class="o">]</span>.schema.vertex.vid.Type, reset to default value <span class="sb">`</span>string<span class="err">&#39;</span>
</span></span><span class="line"><span class="cl">...
</span></span><span class="line"><span class="cl">2021/07/14 05:49:43 <span class="o">[</span>INFO<span class="o">]</span> reader.go:180: Total lines of file<span class="o">(</span>/root/person_corp_role.csv<span class="o">)</span> is: 5000, error lines: <span class="m">1287</span>
</span></span><span class="line"><span class="cl">2021/07/14 05:49:43 <span class="o">[</span>INFO<span class="o">]</span> statsmgr.go:61: Done<span class="o">(</span>/root/person_corp_role.csv<span class="o">)</span>: Time<span class="o">(</span>11.39s<span class="o">)</span>, Finished<span class="o">(</span>12523<span class="o">)</span>, Failed<span class="o">(</span>0<span class="o">)</span>, Latency AVG<span class="o">(</span>1514us<span class="o">)</span>, Batches Req AVG<span class="o">(</span>1824us<span class="o">)</span>, Rows AVG<span class="o">(</span>1099.43/s<span class="o">)</span>
</span></span><span class="line"><span class="cl">2021/07/14 05:49:47 <span class="o">[</span>INFO<span class="o">]</span> statsmgr.go:61: Tick: Time<span class="o">(</span>15.00s<span class="o">)</span>, Finished<span class="o">(</span>25807<span class="o">)</span>, Failed<span class="o">(</span>0<span class="o">)</span>, Latency AVG<span class="o">(</span>1500us<span class="o">)</span>, Batches Req AVG<span class="o">(</span>1805us<span class="o">)</span>, Rows AVG<span class="o">(</span>1720.46/s<span class="o">)</span>
</span></span><span class="line"><span class="cl">2021/07/14 05:49:48 <span class="o">[</span>INFO<span class="o">]</span> reader.go:180: Total lines of file<span class="o">(</span>/root/person.csv<span class="o">)</span> is: 10000, error lines: <span class="m">0</span>
</span></span><span class="line"><span class="cl">2021/07/14 05:49:48 <span class="o">[</span>INFO<span class="o">]</span> statsmgr.go:61: Done<span class="o">(</span>/root/person.csv<span class="o">)</span>: Time<span class="o">(</span>16.10s<span class="o">)</span>, Finished<span class="o">(</span>29731<span class="o">)</span>, Failed<span class="o">(</span>0<span class="o">)</span>, Latency AVG<span class="o">(</span>1505us<span class="o">)</span>, Batches Req AVG<span class="o">(</span>1810us<span class="o">)</span>, Rows AVG<span class="o">(</span>1847.17/s<span class="o">)</span>
</span></span><span class="line"><span class="cl">2021/07/14 05:49:50 <span class="o">[</span>INFO<span class="o">]</span> reader.go:180: Total lines of file<span class="o">(</span>/root/person_corp_share.csv<span class="o">)</span> is: 20000, error lines: <span class="m">0</span>
</span></span><span class="line"><span class="cl">2021/07/14 05:49:50 <span class="o">[</span>INFO<span class="o">]</span> statsmgr.go:61: Done<span class="o">(</span>/root/person_corp_share.csv<span class="o">)</span>: Time<span class="o">(</span>17.74s<span class="o">)</span>, Finished<span class="o">(</span>36013<span class="o">)</span>, Failed<span class="o">(</span>0<span class="o">)</span>, Latency AVG<span class="o">(</span>1531us<span class="o">)</span>, Batches Req AVG<span class="o">(</span>1844us<span class="o">)</span>, Rows AVG<span class="o">(</span>2030.29/s<span class="o">)</span>
</span></span><span class="line"><span class="cl">2021/07/14 05:49:50 Finish import data, consume time: 18.25s
</span></span><span class="line"><span class="cl">2021/07/14 05:49:51 --- END OF NEBULA IMPORTER ---
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="corporation-sharehold-relationship-breakthrough" class="headerLink">
    <a href="#corporation-sharehold-relationship-breakthrough" class="header-mark"></a>2 Corporation sharehold relationship breakthrough</h2><h4 id="query-in-ngql" class="headerLink">
    <a href="#query-in-ngql" class="header-mark"></a>2.0.1 Query in nGQL</h4><p>We can query from corp: <code>c_132</code> over <code>*</code>(all relationships) in <code>BIDIRECT</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">GO</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="k">TO</span><span class="w"> </span><span class="mi">3</span><span class="w"> </span><span class="n">STEPS</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="s2">&#34;c_132&#34;</span><span class="w"> </span><span class="n">over</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">BIDIRECT</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>Below are lines I call this query in <a href="https://github.com/vesoft-inc/nebula-console" target="_blank" rel="noopener noreffer">nebula-console</a>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">/ <span class="c1"># nebula-console  -addr 192.168.8.128 -port 9669 -user user -password password</span>
</span></span><span class="line"><span class="cl">2021/07/14 07:07:41 <span class="o">[</span>INFO<span class="o">]</span> connection pool is initialized successfully
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Welcome to Nebula Graph!
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">(</span>user@nebula<span class="o">)</span> <span class="o">[(</span>none<span class="o">)]</span>&gt; show spaces
</span></span><span class="line"><span class="cl">+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> Name               <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> <span class="s2">&#34;basketballplayer&#34;</span> <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> <span class="s2">&#34;shareholding&#34;</span>     <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------------+
</span></span><span class="line"><span class="cl">Got <span class="m">2</span> rows <span class="o">(</span><span class="nb">time</span> spent 3851/4595 us<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Wed, <span class="m">14</span> Jul <span class="m">2021</span> 07:07:57 UTC
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">(</span>user@nebula<span class="o">)</span> <span class="o">[(</span>none<span class="o">)]</span>&gt; use shareholding
</span></span><span class="line"><span class="cl">Execution succeeded <span class="o">(</span><span class="nb">time</span> spent 1822/2342 us<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Wed, <span class="m">14</span> Jul <span class="m">2021</span> 07:08:02 UTC
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">(</span>user@nebula<span class="o">)</span> <span class="o">[</span>shareholding<span class="o">]</span>&gt; GO <span class="m">1</span> TO <span class="m">3</span> STEPS FROM <span class="s2">&#34;c_132&#34;</span> over * BIDIRECT
</span></span><span class="line"><span class="cl">+--------------+-------------------+-----------------+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> role_as._dst <span class="p">|</span> is_branch_of._dst <span class="p">|</span> hold_share._dst <span class="p">|</span> reletive_with._dst <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------+-------------------+-----------------+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> <span class="s2">&#34;p_2024&#34;</span>     <span class="p">|</span>                   <span class="p">|</span>                 <span class="p">|</span>                    <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------+-------------------+-----------------+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> <span class="s2">&#34;p_4000&#34;</span>     <span class="p">|</span>                   <span class="p">|</span>                 <span class="p">|</span>                    <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------+-------------------+-----------------+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span>              <span class="p">|</span>                   <span class="p">|</span> <span class="s2">&#34;c_245&#34;</span>         <span class="p">|</span>                    <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------+-------------------+-----------------+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span>              <span class="p">|</span>                   <span class="p">|</span> <span class="s2">&#34;p_1039&#34;</span>        <span class="p">|</span>                    <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------+-------------------+-----------------+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span>              <span class="p">|</span>                   <span class="p">|</span> <span class="s2">&#34;p_1399&#34;</span>        <span class="p">|</span>                    <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------+-------------------+-----------------+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span>              <span class="p">|</span>                   <span class="p">|</span> <span class="s2">&#34;p_1767&#34;</span>        <span class="p">|</span>                    <span class="p">|</span>
</span></span><span class="line"><span class="cl">...
</span></span><span class="line"><span class="cl">+--------------+-------------------+-----------------+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span>              <span class="p">|</span>                   <span class="p">|</span> <span class="s2">&#34;c_132&#34;</span>         <span class="p">|</span>                    <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------+-------------------+-----------------+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span>              <span class="p">|</span>                   <span class="p">|</span> <span class="s2">&#34;c_245&#34;</span>         <span class="p">|</span>                    <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------+-------------------+-----------------+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span>              <span class="p">|</span>                   <span class="p">|</span> <span class="s2">&#34;c_25&#34;</span>          <span class="p">|</span>                    <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------+-------------------+-----------------+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span>              <span class="p">|</span>                   <span class="p">|</span> <span class="s2">&#34;c_649&#34;</span>         <span class="p">|</span>                    <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------+-------------------+-----------------+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span>              <span class="p">|</span>                   <span class="p">|</span> <span class="s2">&#34;c_753&#34;</span>         <span class="p">|</span>                    <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------+-------------------+-----------------+--------------------+
</span></span><span class="line"><span class="cl">Got <span class="m">1519</span> rows <span class="o">(</span><span class="nb">time</span> spent 12190/14702 us<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Wed, <span class="m">14</span> Jul <span class="m">2021</span> 07:08:06 UTC
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="in-a-visual-way" class="headerLink">
    <a href="#in-a-visual-way" class="header-mark"></a>2.0.2 In a Visual Way</h4><p>Of course, we can also be done in a visual way:</p>
<p>Step 1, login from Nebula Graph Studio, explore with one VID: <code>c_132</code>:</p>
<p></p>
<p>Step2, click this explored vertex dot, then you can explore from select vertices by selecting:</p>
<ul>
<li>Edge Type</li>
<li>Direction</li>
<li>Steps</li>
<li>Query Limit(Optional)</li>
</ul>
<blockquote>
<p>note, you can click the 👁️ icon to add options to show fields of the graph,</p>
</blockquote>
<p></p>
<p>Step3, after click Expand, you will see all quried relations with <code>c_132</code> the <code>Chambers LLC</code>.</p>
<p></p>
<h2 id="thanks-to-upstream-projects-" class="headerLink">
    <a href="#thanks-to-upstream-projects-" class="header-mark"></a>3 Thanks to Upstream Projects ❤️</h2><ul>
<li>Python Faker <a href="https://github.com/joke2k/faker/" target="_blank" rel="noopener noreffer">https://github.com/joke2k/faker/</a></li>
<li>pydbgen <a href="https://github.com/tirthajyoti/pydbgen" target="_blank" rel="noopener noreffer">https://github.com/tirthajyoti/pydbgen</a></li>
<li>Nebula Graph <a href="https://github.com/vesoft-inc/nebula-graph" target="_blank" rel="noopener noreffer">https://github.com/vesoft-inc/nebula-graph</a></li>
</ul>
<h3 id="tips" class="headerLink">
    <a href="#tips" class="header-mark"></a>3.1 Tips:</h3><ul>
<li>You can deploy nebula graph in one line with:
<ul>
<li><a href="https://siwei.io/nebula-up/" target="_blank" rel="noopener noreffer">Nebula-UP</a>, it helps install a nebula graph with Docker</li>
<li><a href="https://siwei.io/nebula-operator-kind/" target="_blank" rel="noopener noreffer">Nebula-operator-KIND</a> , it helps setup all dependencies of Nebula-K8s-Operator including a K8s in Docker, PV Provider and then install a Nebula Graph with Nebula-Operator in K8s.</li>
</ul>
</li>
</ul>
<blockquote>
<p>Image Credit goes to <a href="https://unsplash.com/photos/3fPXt37X6UQ" target="_blank" rel="noopener noreffer">https://unsplash.com/photos/3fPXt37X6UQ</a></p>
</blockquote>]]></description>
</item><item>
    <title>Nebula LiveJournal, Import LiveJournal Dataset into Nebula Graph and Run Nebula Algorithm</title>
    <link>https://siwei.io/en/nebula-livejournal/</link>
    <pubDate>Tue, 24 Aug 2021 11:22:55 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/en/nebula-livejournal/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p>一个导入 Livejournal 数据集到 Nebula Graph 图数据库，并执行 Nebula Algorithm 图算法的过程分享。</p>
</blockquote>
<p>Related GitHub Repo: <a href="https://github.com/wey-gu/nebula-LiveJournal" target="_blank" rel="noopener noreffer">https://github.com/wey-gu/nebula-LiveJournal</a></p>
<h1 id="nebula-livejournal" class="headerLink">
    <a href="#nebula-livejournal" class="header-mark"></a>nebula-LiveJournal</h1><p>LiveJournal Dataset is a Social Network Dataset in one file with two columns(FromNodeId, ToNodeId).</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ head soc-LiveJournal1.txt
</span></span><span class="line"><span class="cl"><span class="c1"># Directed graph (each unordered pair of nodes is saved once): soc-LiveJournal1.txt</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Directed LiveJournal friednship social network</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Nodes: 4847571 Edges: 68993773</span>
</span></span><span class="line"><span class="cl"><span class="c1"># FromNodeId	ToNodeId</span>
</span></span><span class="line"><span class="cl">0	<span class="m">1</span>
</span></span><span class="line"><span class="cl">0	<span class="m">2</span>
</span></span><span class="line"><span class="cl">0	<span class="m">3</span>
</span></span><span class="line"><span class="cl">0	<span class="m">4</span>
</span></span><span class="line"><span class="cl">0	<span class="m">5</span>
</span></span><span class="line"><span class="cl">0	<span class="m">6</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>It could be accessed in <a href="https://snap.stanford.edu/data/soc-LiveJournal1.html" target="_blank" rel="noopener noreffer">https://snap.stanford.edu/data/soc-LiveJournal1.html</a>.</p>
<table>
<thead>
<tr>
<th style="text-align:left">Dataset statistics</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Nodes</td>
<td>4847571</td>
</tr>
<tr>
<td style="text-align:left">Edges</td>
<td>68993773</td>
</tr>
<tr>
<td style="text-align:left">Nodes in largest WCC</td>
<td>4843953 (0.999)</td>
</tr>
<tr>
<td style="text-align:left">Edges in largest WCC</td>
<td>68983820 (1.000)</td>
</tr>
<tr>
<td style="text-align:left">Nodes in largest SCC</td>
<td>3828682 (0.790)</td>
</tr>
<tr>
<td style="text-align:left">Edges in largest SCC</td>
<td>65825429 (0.954)</td>
</tr>
<tr>
<td style="text-align:left">Average clustering coefficient</td>
<td>0.2742</td>
</tr>
<tr>
<td style="text-align:left">Number of triangles</td>
<td>285730264</td>
</tr>
<tr>
<td style="text-align:left">Fraction of closed triangles</td>
<td>0.04266</td>
</tr>
<tr>
<td style="text-align:left">Diameter (longest shortest path)</td>
<td>16</td>
</tr>
<tr>
<td style="text-align:left">90-percentile effective diameter</td>
<td>6.5</td>
</tr>
</tbody>
</table>
<h2 id="dataset-download-and-preprocessing" class="headerLink">
    <a href="#dataset-download-and-preprocessing" class="header-mark"></a>1 Dataset Download and Preprocessing</h2><h3 id="download" class="headerLink">
    <a href="#download" class="header-mark"></a>1.1 Download</h3><p>It is accesissiable from the official web page:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ <span class="nb">cd</span> nebula-livejournal/data
</span></span><span class="line"><span class="cl">$ wget https://snap.stanford.edu/data/soc-LiveJournal1.txt.gz
</span></span></code></pre></td></tr></table>
</div>
</div><p>Comments in data file should be removed to make the data import tool happy.</p>
<h3 id="preprocessing" class="headerLink">
    <a href="#preprocessing" class="header-mark"></a>1.2 Preprocessing</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ gzip -d soc-LiveJournal1.txt.gz
</span></span><span class="line"><span class="cl">$ sed -i <span class="s1">&#39;1,4d&#39;</span> soc-LiveJournal1.txt
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="import-dataset-to-nebula-graph" class="headerLink">
    <a href="#import-dataset-to-nebula-graph" class="header-mark"></a>2 Import dataset to Nebula Graph</h2><h3 id="with-nebula-importer" class="headerLink">
    <a href="#with-nebula-importer" class="header-mark"></a>2.1 With Nebula Importer</h3><p><a href="https://github.com/vesoft-inc/nebula-importer" target="_blank" rel="noopener noreffer">Nebula-Importer</a> is a Golang Headless import tool for Nebula Graph.</p>
<p>You may need to edit the config file under <a href="nebula-importer/importer.yaml" rel="">nebula-importer/importer.yaml</a> on Nebula Graph&rsquo;s address and credential。</p>
<p>Then, Nebula-Importer could be called in Docker as follow:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ <span class="nb">cd</span> nebula-livejournal
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ docker run --rm -ti <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --network<span class="o">=</span>nebula-net <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -v nebula-importer/importer.yaml:/root/importer.yaml <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -v data/:/root <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    vesoft/nebula-importer:v2 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --config /root/importer.yaml
</span></span></code></pre></td></tr></table>
</div>
</div><p>Or if you have the binary nebula-importer locally:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ <span class="nb">cd</span> data
</span></span><span class="line"><span class="cl">$ &lt;path_to_nebula-importer_binary&gt; --config ../nebula-importer/importer.yaml
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="with-nebula-exchange" class="headerLink">
    <a href="#with-nebula-exchange" class="header-mark"></a>2.2 With Nebula Exchange</h3><p><a href="https://github.com/vesoft-inc/nebula-spark-utils/tree/master/nebula-exchange" target="_blank" rel="noopener noreffer">Nebula-Exchange</a> is a Spark Application to enable batch and streaming data import from multiple data sources to Nebula Graph.</p>
<p>To be done. (You can refer to <a href="https://siwei.io/nebula-exchange-sst-2.x/" target="_blank" rel="noopener noreffer">https://siwei.io/nebula-exchange-sst-2.x/</a>)</p>
<h2 id="run-algorithms-with-nebula-graph" class="headerLink">
    <a href="#run-algorithms-with-nebula-graph" class="header-mark"></a>3 Run Algorithms with Nebula Graph</h2><p><a href="https://github.com/vesoft-inc/nebula-spark-utils/tree/master/nebula-algorithm" target="_blank" rel="noopener noreffer">Nebula-Algorithm</a> is a Spark/GraphX Application to run Graph Algorithms with data consumed from files or a Nebula Graph Cluster.</p>
<p>Supported Algorithms for now:</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Use Case</th>
</tr>
</thead>
<tbody>
<tr>
<td>PageRank</td>
<td>page ranking, important node digging</td>
</tr>
<tr>
<td>Louvain</td>
<td>community digging, hierarchical clustering</td>
</tr>
<tr>
<td>KCore</td>
<td>community detection, financial risk control</td>
</tr>
<tr>
<td>LabelPropagation</td>
<td>community detection, consultation propagation, advertising recommendation</td>
</tr>
<tr>
<td>ConnectedComponent</td>
<td>community detection, isolated island detection</td>
</tr>
<tr>
<td>StronglyConnectedComponent</td>
<td>community detection</td>
</tr>
<tr>
<td>ShortestPath</td>
<td>path plan, network plan</td>
</tr>
<tr>
<td>TriangleCount</td>
<td>network structure analysis</td>
</tr>
<tr>
<td>BetweennessCentrality</td>
<td>important node digging, node influence calculation</td>
</tr>
<tr>
<td>DegreeStatic</td>
<td>graph structure analysis</td>
</tr>
</tbody>
</table>
<h3 id="ad-hoc-spark-env-setup" class="headerLink">
    <a href="#ad-hoc-spark-env-setup" class="header-mark"></a>3.1 Ad-hoc Spark Env setup</h3><p>Here I assume the Nebula Graph was bootstraped with <a href="https://github.com/wey-gu/nebula-up" target="_blank" rel="noopener noreffer">Nebula-Up</a>, thus nebula is running in a Docker Network named <code>nebula-docker-compose_nebula-net</code>.</p>
<p>Then let&rsquo;s start a single server spark:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker run --name spark-master --network nebula-docker-compose_nebula-net <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -h spark-master -e <span class="nv">ENABLE_INIT_DAEMON</span><span class="o">=</span><span class="nb">false</span> -d <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -v nebula-algorithm/:/root <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    bde2020/spark-master:2.4.5-hadoop2.7
</span></span></code></pre></td></tr></table>
</div>
</div><p>Thus we could make spark application submt inside this container:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker <span class="nb">exec</span> -it spark-master bash
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> /root/
</span></span><span class="line"><span class="cl"><span class="c1"># download Nebula-Algorithm Jar Packagem, 2.0.0 for example, for other versions, refer to nebula-algorithm github repo and documentations.</span>
</span></span><span class="line"><span class="cl">wget https://repo1.maven.org/maven2/com/vesoft/nebula-algorithm/2.0.0/nebula-algorithm-2.0.0.jar
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="run-algorithms" class="headerLink">
    <a href="#run-algorithms" class="header-mark"></a>3.2 Run Algorithms</h3><p>There are many altorithms supported by Nebula-Algorithm, here some of their configuration files were put under nebula-algorithm as an example.</p>
<p>Before using them, please first edit and change Nebula Graph Cluster Addresses and credentials.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">vim nebula-altorithm/algo-pagerank.conf
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then we could enter the spark container and call corresponding algorithms as follow.</p>
<p>Please adjust your <code>--driver-memeory</code> accordingly, i.e. pagerank altorithm:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">/spark/bin/spark-submit --master <span class="s2">&#34;local&#34;</span> --conf spark.rpc.askTimeout<span class="o">=</span>6000s <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --class com.vesoft.nebula.algorithm.Main <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --driver-memory 16g nebula-algorithm-2.0.0.jar <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -p pagerank.conf
</span></span></code></pre></td></tr></table>
</div>
</div><p>After the algorithm finished, the output will be under the path insdie the container defined in conf file:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-toml" data-lang="toml"><span class="line"><span class="cl">    <span class="nx">write</span><span class="err">:</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">resultPath</span><span class="err">:/</span><span class="nx">output</span><span class="err">/</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>题图版权：<a href="https://unsplash.com/photos/eTgMFFzroGc" target="_blank" rel="noopener noreffer">@sigmund</a></p>
</blockquote>]]></description>
</item><item>
    <title>Nebula Exchange SST 2.x Hands-on Guide</title>
    <link>https://siwei.io/en/nebula-exchange-sst-2.x/</link>
    <pubDate>Wed, 18 Aug 2021 15:21:00 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/en/nebula-exchange-sst-2.x/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featured-image.webp" referrerpolicy="no-referrer">
            </div><p>这篇文章带大家以最小方式，快速趟一下 Nebula Exchange 中 SST 写入方式的步骤。</p>
<h2 id="什么是-nebula-exchange-" class="headerLink">
    <a href="#%e4%bb%80%e4%b9%88%e6%98%af-nebula-exchange-" class="header-mark"></a>1 什么是 Nebula Exchange ?</h2><p>之前我在 <a href="https://siwei.io/sketches/nebula-data-import-options/" target="_blank" rel="noopener noreffer">Nebula Data Import Options</a> 之中介绍过，<a href="https://github.com/vesoft-inc/nebula-spark-utils/tree/master/nebula-exchange" target="_blank" rel="noopener noreffer">Nebula Exchange</a> 是一个 Nebula Graph 社区开源的 Spark Applicaiton，它专门用来支持批量或者流式地把数据导入 Nebula Graph Database 之中。</p>
<p>Nebula Exchange 支持多种多样的数据源（从 Apache Parquet, ORC, JSON, CSV, HBase, Hive MaxCompute 到 Neo4j, MySQL, ClickHouse, 再有 Kafka, Pulsar，更多的数据源也在不断增加之中）。</p>
<p></p>
<p>如上图所示，在 Exchange 内部，从除了不同 Reader 可以读取不同数据源之外，在数据经过 Processor 处理之后通过 Writer写入（sink） Nebula Graph 图数据库的时候，除了走正常的 ServerBaseWriter 的写入流程之外，它还可以绕过整个写入流程，利用 Spark 的计算能力并行生成底层 RocksDB 的 SST 文件，从而实现超高性能的数据导入，这个 SST 文件导入的场景就是本文带大家上手熟悉的部分。</p>
<blockquote>
<p>详细信息请参阅：<a href="https://docs.nebula-graph.com.cn/master/nebula-exchange/about-exchange/ex-ug-what-is-exchange/" target="_blank" rel="noopener noreffer">Nebula Graph 手册:什么是 Nebula Exchange</a></p>
<p><a href="https://nebula-graph.com.cn/posts/" target="_blank" rel="noopener noreffer">Nebula Graph 官方博客</a>也有更多 Nebula Exchange 的实践文章</p>
</blockquote>
<h2 id="步骤概观" class="headerLink">
    <a href="#%e6%ad%a5%e9%aa%a4%e6%a6%82%e8%a7%82" class="header-mark"></a>2 步骤概观</h2><ul>
<li><a href="#%e5%ae%9e%e9%aa%8c%e7%8e%af%e5%a2%83%e5%87%86%e5%a4%87" rel="">实验环境</a></li>
<li><a href="#%e9%85%8d%e7%bd%aeExchange" rel="">配置 Exchange</a></li>
<li><a href="#%e7%94%9f%e6%88%90SST%e6%96%87%e4%bb%b6" rel="">生成 SST 文件</a></li>
<li><a href="#%e5%86%99%e5%85%a5SST%e6%96%87%e4%bb%b6%e5%88%b0NebulaGraph" rel="">写入 SST 文件到 Nebula Graph</a></li>
</ul>
<h2 id="实验环境准备" class="headerLink">
    <a href="#%e5%ae%9e%e9%aa%8c%e7%8e%af%e5%a2%83%e5%87%86%e5%a4%87" class="header-mark"></a>3 实验环境准备</h2><p>为了最小化使用 Nebula Exchange 的 SST 功能，我们需要：</p>
<ul>
<li>搭建一个 Nebula Graph 集群，创建导入数据的 Schema，我们选择使用 Docker-Compose 方式、利用 <a href="https://github.com/wey-gu/nebula-up/" target="_blank" rel="noopener noreffer">Nebula-Up</a> 快速部署，并简单修改其网络，以方便同样容器化的 Exchange 程序对其访问。</li>
<li>搭建容器化的 Spark 运行环境</li>
<li>搭建容器化的 HDFS</li>
</ul>
<h3 id="搭建-nebula-graph-集群" class="headerLink">
    <a href="#%e6%90%ad%e5%bb%ba-nebula-graph-%e9%9b%86%e7%be%a4" class="header-mark"></a>3.1 搭建 Nebula Graph 集群</h3><p>借助于 <a href="https://github.com/wey-gu/nebula-up/" target="_blank" rel="noopener noreffer">Nebula-Up</a> 我们可以在 Linux 环境下一键部署一套 Nebula Graph 集群：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">curl -fsSL nebula-up.siwei.io/install.sh <span class="p">|</span> bash
</span></span></code></pre></td></tr></table>
</div>
</div><p></p>
<p>待部署成功之后，我们需要对环境做一些修改，这里我做的修改其实就是两点：</p>
<ol>
<li>只保留一个 metaD 服务</li>
<li>起用 Docker 的外部网络</li>
</ol>
<p>详细修改的部分参考<a href="#%e9%99%84%e5%bd%95%e4%b8%80" rel="">附录一</a></p>
<p>应用 docker-compose 的修改：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> ~/.nebula-up/nebula-docker-compose
</span></span><span class="line"><span class="cl">vim docker-compose.yaml <span class="c1"># 参考附录一</span>
</span></span><span class="line"><span class="cl">docker network create nebula-net <span class="c1"># 需要创建外部网络</span>
</span></span><span class="line"><span class="cl">docker-compose up -d --remove-orphans
</span></span></code></pre></td></tr></table>
</div>
</div><p>之后，我们来创建要测试的图空间，并创建图的 Schema，为此，我们可以利用 nebula-console ，同样，Nebula-Up 里自带了容器化的 nebula-console。</p>
<ul>
<li>进入 Nebula-Console 所在的容器</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">~/.nebula-up/console.sh
</span></span><span class="line"><span class="cl">/ <span class="c1">#</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>在 console 容器里发起链接到图数据库，其中 <code>192.168.x.y</code> 是我所在的 Linux VM 的第一个网卡地址，请换成您的</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">/ # nebula-console -addr 192.168.x.y -port 9669 -user root -p password
</span></span><span class="line"><span class="cl">[INFO] connection pool is initialized successfully
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Welcome to Nebula Graph!
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>创建图空间（我们起名字叫 <code>sst</code> ），以及 schema</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">create</span><span class="w"> </span><span class="k">space</span><span class="w"> </span><span class="n">sst</span><span class="p">(</span><span class="n">partition_num</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span><span class="n">replica_factor</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">vid_type</span><span class="o">=</span><span class="n">fixed_string</span><span class="p">(</span><span class="mi">32</span><span class="p">));</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">:</span><span class="n">sleep</span><span class="w"> </span><span class="mi">20</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">use</span><span class="w"> </span><span class="n">sst</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">create</span><span class="w"> </span><span class="n">tag</span><span class="w"> </span><span class="n">player</span><span class="p">(</span><span class="n">name</span><span class="w"> </span><span class="n">string</span><span class="p">,</span><span class="w"> </span><span class="n">age</span><span class="w"> </span><span class="nb">int</span><span class="p">);</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>示例输出</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[(</span><span class="k">none</span><span class="p">)]</span><span class="o">&gt;</span><span class="w"> </span><span class="k">create</span><span class="w"> </span><span class="k">space</span><span class="w"> </span><span class="n">sst</span><span class="p">(</span><span class="n">partition_num</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span><span class="n">replica_factor</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">vid_type</span><span class="o">=</span><span class="n">fixed_string</span><span class="p">(</span><span class="mi">32</span><span class="p">));</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Execution</span><span class="w"> </span><span class="n">succeeded</span><span class="w"> </span><span class="p">(</span><span class="n">time</span><span class="w"> </span><span class="n">spent</span><span class="w"> </span><span class="mi">1468</span><span class="o">/</span><span class="mi">1918</span><span class="w"> </span><span class="n">us</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[(</span><span class="k">none</span><span class="p">)]</span><span class="o">&gt;</span><span class="w"> </span><span class="p">:</span><span class="n">sleep</span><span class="w"> </span><span class="mi">20</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[(</span><span class="k">none</span><span class="p">)]</span><span class="o">&gt;</span><span class="w"> </span><span class="n">use</span><span class="w"> </span><span class="n">sst</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Execution</span><span class="w"> </span><span class="n">succeeded</span><span class="w"> </span><span class="p">(</span><span class="n">time</span><span class="w"> </span><span class="n">spent</span><span class="w"> </span><span class="mi">1253</span><span class="o">/</span><span class="mi">1566</span><span class="w"> </span><span class="n">us</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Wed</span><span class="p">,</span><span class="w"> </span><span class="mi">18</span><span class="w"> </span><span class="n">Aug</span><span class="w"> </span><span class="mi">2021</span><span class="w"> </span><span class="mi">08</span><span class="p">:</span><span class="mi">18</span><span class="p">:</span><span class="mi">13</span><span class="w"> </span><span class="n">UTC</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[</span><span class="n">sst</span><span class="p">]</span><span class="o">&gt;</span><span class="w"> </span><span class="k">create</span><span class="w"> </span><span class="n">tag</span><span class="w"> </span><span class="n">player</span><span class="p">(</span><span class="n">name</span><span class="w"> </span><span class="n">string</span><span class="p">,</span><span class="w"> </span><span class="n">age</span><span class="w"> </span><span class="nb">int</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Execution</span><span class="w"> </span><span class="n">succeeded</span><span class="w"> </span><span class="p">(</span><span class="n">time</span><span class="w"> </span><span class="n">spent</span><span class="w"> </span><span class="mi">1312</span><span class="o">/</span><span class="mi">1735</span><span class="w"> </span><span class="n">us</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Wed</span><span class="p">,</span><span class="w"> </span><span class="mi">18</span><span class="w"> </span><span class="n">Aug</span><span class="w"> </span><span class="mi">2021</span><span class="w"> </span><span class="mi">08</span><span class="p">:</span><span class="mi">18</span><span class="p">:</span><span class="mi">23</span><span class="w"> </span><span class="n">UTC</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="搭建容器化的-spark-环境" class="headerLink">
    <a href="#%e6%90%ad%e5%bb%ba%e5%ae%b9%e5%99%a8%e5%8c%96%e7%9a%84-spark-%e7%8e%af%e5%a2%83" class="header-mark"></a>3.2 搭建容器化的 Spark 环境</h3><p>利用 big data europe 做的工作，这个过程非常容易。</p>
<p>值得注意的是：</p>
<ul>
<li>现在的 Nebula Exchange 对 Spark 的版本有要求，在现在的 2021 年 8 月，我是用了 spark-2.4.5-hadoop-2.7 的版本。</li>
<li>为了方便，我让 Spark 运行在 Nebula Graph 相同的机器上，并且指定了运行在同一个 Docker 网络下</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker run --name spark-master --network nebula-net <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -h spark-master -e <span class="nv">ENABLE_INIT_DAEMON</span><span class="o">=</span><span class="nb">false</span> -d <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    bde2020/spark-master:2.4.5-hadoop2.7
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后，我们就可以进入到环境中了：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker <span class="nb">exec</span> -it spark-master bash
</span></span></code></pre></td></tr></table>
</div>
</div><p>进到 Spark 容器中之后，可以像这样安装 maven:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">MAVEN_VERSION</span><span class="o">=</span>3.5.4
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">MAVEN_HOME</span><span class="o">=</span>/usr/lib/mvn
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">PATH</span><span class="o">=</span><span class="nv">$MAVEN_HOME</span>/bin:<span class="nv">$PATH</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">wget http://archive.apache.org/dist/maven/maven-3/<span class="nv">$MAVEN_VERSION</span>/binaries/apache-maven-<span class="nv">$MAVEN_VERSION</span>-bin.tar.gz <span class="o">&amp;&amp;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  tar -zxvf apache-maven-<span class="nv">$MAVEN_VERSION</span>-bin.tar.gz <span class="o">&amp;&amp;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  rm apache-maven-<span class="nv">$MAVEN_VERSION</span>-bin.tar.gz <span class="o">&amp;&amp;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  mv apache-maven-<span class="nv">$MAVEN_VERSION</span> /usr/lib/mvn
</span></span></code></pre></td></tr></table>
</div>
</div><p>还可以这样在容器里下载 nebula-exchange 的 <code>jar</code> 包：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> ~
</span></span><span class="line"><span class="cl">wget https://repo1.maven.org/maven2/com/vesoft/nebula-exchange/2.1.0/nebula-exchange-2.1.0.jar
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="搭建容器化的-hdfs" class="headerLink">
    <a href="#%e6%90%ad%e5%bb%ba%e5%ae%b9%e5%99%a8%e5%8c%96%e7%9a%84-hdfs" class="header-mark"></a>3.3 搭建容器化的 HDFS</h3><p>同样借助 big-data-euroupe 的工作，这非常简单，不过我们要做一点修改，让它的 <code>docker-compose.yml</code> 文件里使用 <code>nebula-net</code> 这个之前创建的 Docker 网络。</p>
<p>详细修改的部分参考<a href="#%e9%99%84%e5%bd%95%e4%ba%8c" rel="">附录二</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git clone https://github.com/big-data-europe/docker-hadoop.git
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> docker-hadoop
</span></span><span class="line"><span class="cl">vim docker-compose.yml
</span></span><span class="line"><span class="cl">docker-compose up -d
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="配置exchange" class="headerLink">
    <a href="#%e9%85%8d%e7%bd%aeexchange" class="header-mark"></a>4 配置Exchange</h2><p>这个配置主要填入的信息就是 Nebula Graph 集群本身和将要写入数据的 Space Name，以及数据源相关的配置（这里我们用 <code>csv</code> 作为例子），最后再配置输出（sink）为 <code>sst</code></p>
<ul>
<li>Nebula Graph
<ul>
<li>GraphD 地址</li>
<li>MetaD 地址</li>
<li>credential</li>
<li>Space Name</li>
</ul>
</li>
<li>数据源
<ul>
<li><code>source: csv</code>
<ul>
<li><code>path</code></li>
<li><code>fields</code> etc.</li>
</ul>
</li>
<li><code>ink: sst</code></li>
</ul>
</li>
</ul>
<p>详细的配置参考<a href="#%e9%99%84%e5%bd%95%e4%ba%8c" rel="">附录二</a></p>
<p>注意，这里 metaD 的地址可以这样获取，可以看到 <code>0.0.0.0:49377-&gt;9559</code> 表示 <code>49377</code> 是外部的地址。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker ps <span class="p">|</span> grep meta
</span></span><span class="line"><span class="cl">887740c15750   vesoft/nebula-metad:v2.0.0                               <span class="s2">&#34;./bin/nebula-metad …&#34;</span>   <span class="m">6</span> hours ago    Up <span class="m">6</span> hours <span class="o">(</span>healthy<span class="o">)</span>    9560/tcp, 0.0.0.0:49377-&gt;9559/tcp, :::49377-&gt;9559/tcp, 0.0.0.0:49376-&gt;19559/tcp, :::49376-&gt;19559/tcp, 0.0.0.0:49375-&gt;19560/tcp, :::49375-&gt;19560/tcp                  nebula-docker-compose_metad0_1
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="生成sst文件" class="headerLink">
    <a href="#%e7%94%9f%e6%88%90sst%e6%96%87%e4%bb%b6" class="header-mark"></a>5 生成SST文件</h2><h3 id="准备源文件配置文件" class="headerLink">
    <a href="#%e5%87%86%e5%a4%87%e6%ba%90%e6%96%87%e4%bb%b6%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6" class="header-mark"></a>5.1 准备源文件、配置文件</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker cp exchange-sst.conf spark-master:/root/
</span></span><span class="line"><span class="cl">docker cp player.csv spark-master:/root/
</span></span></code></pre></td></tr></table>
</div>
</div><p>其中 <code>player.csv</code> 的例子：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">1100,Tim Duncan,42
</span></span><span class="line"><span class="cl">1101,Tony Parker,36
</span></span><span class="line"><span class="cl">1102,LaMarcus Aldridge,33
</span></span><span class="line"><span class="cl">1103,Rudy Gay,32
</span></span><span class="line"><span class="cl">1104,Marco Belinelli,32
</span></span><span class="line"><span class="cl">1105,Danny Green,31
</span></span><span class="line"><span class="cl">1106,Kyle Anderson,25
</span></span><span class="line"><span class="cl">1107,Aron Baynes,32
</span></span><span class="line"><span class="cl">1108,Boris Diaw,36
</span></span><span class="line"><span class="cl">1109,Tiago Splitter,34
</span></span><span class="line"><span class="cl">1110,Cory Joseph,27
</span></span><span class="line"><span class="cl">1111,David West,38
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="执行-exchange-程序" class="headerLink">
    <a href="#%e6%89%a7%e8%a1%8c-exchange-%e7%a8%8b%e5%ba%8f" class="header-mark"></a>5.2 执行 exchange 程序</h3><p>进入 <code>spark-master</code> 容器，提交执行 <code>exchange</code> 应用。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker <span class="nb">exec</span> -it spark-master bash
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> /root/
</span></span><span class="line"><span class="cl">/spark/bin/spark-submit --master <span class="nb">local</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --class com.vesoft.nebula.exchange.Exchange nebula-exchange-2.1.0.jar<span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -c exchange-sst.conf
</span></span></code></pre></td></tr></table>
</div>
</div><p>检查执行结果：</p>
<p><code>spark-submit</code> 输出：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">21/08/17 03:37:43 INFO TaskSetManager: Finished task 31.0 in stage 2.0 <span class="o">(</span>TID 33<span class="o">)</span> in <span class="m">1093</span> ms on localhost <span class="o">(</span>executor driver<span class="o">)</span> <span class="o">(</span>32/32<span class="o">)</span>
</span></span><span class="line"><span class="cl">21/08/17 03:37:43 INFO TaskSchedulerImpl: Removed TaskSet 2.0, whose tasks have all completed, from pool
</span></span><span class="line"><span class="cl">21/08/17 03:37:43 INFO DAGScheduler: ResultStage <span class="m">2</span> <span class="o">(</span>foreachPartition at VerticesProcessor.scala:179<span class="o">)</span> finished in 22.336 s
</span></span><span class="line"><span class="cl">21/08/17 03:37:43 INFO DAGScheduler: Job <span class="m">1</span> finished: foreachPartition at VerticesProcessor.scala:179, took 22.500639 s
</span></span><span class="line"><span class="cl">21/08/17 03:37:43 INFO Exchange$: SST-Import: failure.player: <span class="m">0</span>
</span></span><span class="line"><span class="cl">21/08/17 03:37:43 WARN Exchange$: Edge is not defined
</span></span><span class="line"><span class="cl">21/08/17 03:37:43 INFO SparkUI: Stopped Spark web UI at http://spark-master:4040
</span></span><span class="line"><span class="cl">21/08/17 03:37:43 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!
</span></span></code></pre></td></tr></table>
</div>
</div><p>验证 HDFS 上生成的 SST 文件：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker <span class="nb">exec</span> -it namenode /bin/bash
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">root@2db58903fb53:/# hdfs dfs -ls /sst
</span></span><span class="line"><span class="cl">Found <span class="m">10</span> items
</span></span><span class="line"><span class="cl">drwxr-xr-x   - root supergroup          <span class="m">0</span> 2021-08-17 03:37 /sst/1
</span></span><span class="line"><span class="cl">drwxr-xr-x   - root supergroup          <span class="m">0</span> 2021-08-17 03:37 /sst/10
</span></span><span class="line"><span class="cl">drwxr-xr-x   - root supergroup          <span class="m">0</span> 2021-08-17 03:37 /sst/2
</span></span><span class="line"><span class="cl">drwxr-xr-x   - root supergroup          <span class="m">0</span> 2021-08-17 03:37 /sst/3
</span></span><span class="line"><span class="cl">drwxr-xr-x   - root supergroup          <span class="m">0</span> 2021-08-17 03:37 /sst/4
</span></span><span class="line"><span class="cl">drwxr-xr-x   - root supergroup          <span class="m">0</span> 2021-08-17 03:37 /sst/5
</span></span><span class="line"><span class="cl">drwxr-xr-x   - root supergroup          <span class="m">0</span> 2021-08-17 03:37 /sst/6
</span></span><span class="line"><span class="cl">drwxr-xr-x   - root supergroup          <span class="m">0</span> 2021-08-17 03:37 /sst/7
</span></span><span class="line"><span class="cl">drwxr-xr-x   - root supergroup          <span class="m">0</span> 2021-08-17 03:37 /sst/8
</span></span><span class="line"><span class="cl">drwxr-xr-x   - root supergroup          <span class="m">0</span> 2021-08-17 03:37 /sst/9
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="写入sst到nebulagraph" class="headerLink">
    <a href="#%e5%86%99%e5%85%a5sst%e5%88%b0nebulagraph" class="header-mark"></a>6 写入SST到NebulaGraph</h2><p>这里的操作实际上都是参考文档：<a href="https://docs.nebula-graph.com.cn/master/nebula-exchange/use-exchange/ex-ug-import-from-sst/" target="_blank" rel="noopener noreffer">SST 导入</a>，得来。其中就是从 console 之中执行了两步操作：</p>
<ul>
<li>Download</li>
<li>Ingest</li>
</ul>
<p>其中 Download 实际上是触发 Nebula Graph 从服务端发起 HDFS Client 的 download，获取 HDFS 上的 SST 文件，然后放到 storageD 能访问的本地路径下，这里，需要我们在服务端部署 HDFS 的依赖。因为我们是最小实践，我就偷懒手动做了这个 Download 的操作。</p>
<h3 id="手动下载" class="headerLink">
    <a href="#%e6%89%8b%e5%8a%a8%e4%b8%8b%e8%bd%bd" class="header-mark"></a>6.1 手动下载</h3><p>这里边手动下载我们就要知道 Nebula Graph 服务端下载的路径，实际上是 <code>/data/storage/nebula/&lt;space_id&gt;/download/</code>，这里的 Space ID 需要手动获取一下：</p>
<p>这个例子里，我们的 Space Name 是 <code>sst</code>，而 Space ID 是 <code>49</code>。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[</span><span class="n">sst</span><span class="p">]</span><span class="o">&gt;</span><span class="w"> </span><span class="k">DESC</span><span class="w"> </span><span class="k">space</span><span class="w"> </span><span class="n">sst</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">----+-------+------------------+----------------+---------+------------+--------------------+-------------+-----------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="n">ID</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Name</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="n">Partition</span><span class="w"> </span><span class="nb">Number</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Replica</span><span class="w"> </span><span class="n">Factor</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Charset</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">Collate</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="n">Vid</span><span class="w"> </span><span class="k">Type</span><span class="w">           </span><span class="o">|</span><span class="w"> </span><span class="k">Atomic</span><span class="w"> </span><span class="n">Edge</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">Group</span><span class="w">     </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">----+-------+------------------+----------------+---------+------------+--------------------+-------------+-----------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="mi">49</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;sst&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">10</span><span class="w">               </span><span class="o">|</span><span class="w"> </span><span class="mi">1</span><span class="w">              </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;utf8&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;utf8_bin&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;FIXED_STRING(32)&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;false&#34;</span><span class="w">     </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;default&#34;</span><span class="w"> </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">----+-------+------------------+----------------+---------+------------+--------------------+-------------+-----------+
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>于是，下边的操作就是手动把 SST 文件从 HDFS 之中 <code>get</code> 下来，再拷贝到 storageD 之中。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker <span class="nb">exec</span> -it namenode /bin/bash
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ hdfs dfs -get /sst /sst
</span></span><span class="line"><span class="cl"><span class="nb">exit</span>
</span></span><span class="line"><span class="cl">docker cp namenode:/sst .
</span></span><span class="line"><span class="cl">docker <span class="nb">exec</span> -it nebula-docker-compose_storaged0_1 mkdir -p /data/storage/nebula/49/download/
</span></span><span class="line"><span class="cl">docker <span class="nb">exec</span> -it nebula-docker-compose_storaged1_1 mkdir -p /data/storage/nebula/49/download/
</span></span><span class="line"><span class="cl">docker <span class="nb">exec</span> -it nebula-docker-compose_storaged2_1 mkdir -p /data/storage/nebula/49/download/
</span></span><span class="line"><span class="cl">docker cp sst nebula-docker-compose_storaged0_1:/data/storage/nebula/49/download/
</span></span><span class="line"><span class="cl">docker cp sst nebula-docker-compose_storaged1_1:/data/storage/nebula/49/download/
</span></span><span class="line"><span class="cl">docker cp sst nebula-docker-compose_storaged2_1:/data/storage/nebula/49/download/
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="sst-文件导入" class="headerLink">
    <a href="#sst-%e6%96%87%e4%bb%b6%e5%af%bc%e5%85%a5" class="header-mark"></a>6.2 SST 文件导入</h3><ul>
<li>进入 Nebula-Console 所在的容器</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">~/.nebula-up/console.sh
</span></span><span class="line"><span class="cl">/ <span class="c1">#</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>在 console 容器里发起链接到图数据库，其中 <code>192.168.x.y</code> 是我所在的 Linux VM 的第一个网卡地址，请换成您的</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">/ # nebula-console -addr 192.168.x.y -port 9669 -user root -p password
</span></span><span class="line"><span class="cl">[INFO] connection pool is initialized successfully
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Welcome to Nebula Graph!
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>执行 <code>INGEST</code> 开始让 StorageD 读取 SST 文件</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">(</span>root@nebula<span class="o">)</span> <span class="o">[(</span>none<span class="o">)]</span>&gt; use sst
</span></span><span class="line"><span class="cl"><span class="o">(</span>root@nebula<span class="o">)</span> <span class="o">[</span>sst<span class="o">]</span>&gt; INGEST<span class="p">;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>我们可以用如下方法实时查看 Nebula Graph 服务端的日志</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">tail -f ~/.nebula-up/nebula-docker-compose/logs/*/*
</span></span></code></pre></td></tr></table>
</div>
</div><p>成功的 INGEST 日志：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">I0817 08:03:28.611877   <span class="m">169</span> EventListner.h:96<span class="o">]</span> Ingest external SST file: column family default, the external file path /data/storage/nebula/49/download/8/8-6.sst, the internal file path /data/storage/nebula/49/data/000023.sst, the properties of the table: <span class="c1"># data blocks=1; # entries=1; # deletions=0; # merge operands=0; # range deletions=0; raw key size=48; raw average key size=48.000000; raw value size=40; raw average value size=40.000000; data block size=75; index block size (user-key? 0, delta-value? 0)=66; filter block size=0; (estimated) table size=141; filter policy name=N/A; prefix extractor name=nullptr; column family ID=N/A; column family name=N/A; comparator name=leveldb.BytewiseComparator; merge operator name=nullptr; property collectors names=[]; SST file compression algo=Snappy; SST file compression options=window_bits=-14; level=32767; strategy=0; max_dict_bytes=0; zstd_max_train_bytes=0; enabled=0; ; creation time=0; time stamp of earliest key=0; file creation time=0;</span>
</span></span><span class="line"><span class="cl">E0817 08:03:28.611912   <span class="m">169</span> StorageHttpIngestHandler.cpp:63<span class="o">]</span> SSTFile ingest successfully
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>题图版权：<a href="https://unsplash.com/photos/n6B49lTx7NM" target="_blank" rel="noopener noreffer">Pietro Jeng</a></p>
</blockquote>
<h2 id="附录" class="headerLink">
    <a href="#%e9%99%84%e5%bd%95" class="header-mark"></a>7 附录</h2><h3 id="附录一" class="headerLink">
    <a href="#%e9%99%84%e5%bd%95%e4%b8%80" class="header-mark"></a>7.1 附录一</h3><p><code>docker-compose.yaml</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span><span class="lnt">133
</span><span class="lnt">134
</span><span class="lnt">135
</span><span class="lnt">136
</span><span class="lnt">137
</span><span class="lnt">138
</span><span class="lnt">139
</span><span class="lnt">140
</span><span class="lnt">141
</span><span class="lnt">142
</span><span class="lnt">143
</span><span class="lnt">144
</span><span class="lnt">145
</span><span class="lnt">146
</span><span class="lnt">147
</span><span class="lnt">148
</span><span class="lnt">149
</span><span class="lnt">150
</span><span class="lnt">151
</span><span class="lnt">152
</span><span class="lnt">153
</span><span class="lnt">154
</span><span class="lnt">155
</span><span class="lnt">156
</span><span class="lnt">157
</span><span class="lnt">158
</span><span class="lnt">159
</span><span class="lnt">160
</span><span class="lnt">161
</span><span class="lnt">162
</span><span class="lnt">163
</span><span class="lnt">164
</span><span class="lnt">165
</span><span class="lnt">166
</span><span class="lnt">167
</span><span class="lnt">168
</span><span class="lnt">169
</span><span class="lnt">170
</span><span class="lnt">171
</span><span class="lnt">172
</span><span class="lnt">173
</span><span class="lnt">174
</span><span class="lnt">175
</span><span class="lnt">176
</span><span class="lnt">177
</span><span class="lnt">178
</span><span class="lnt">179
</span><span class="lnt">180
</span><span class="lnt">181
</span><span class="lnt">182
</span><span class="lnt">183
</span><span class="lnt">184
</span><span class="lnt">185
</span><span class="lnt">186
</span><span class="lnt">187
</span><span class="lnt">188
</span><span class="lnt">189
</span><span class="lnt">190
</span><span class="lnt">191
</span><span class="lnt">192
</span><span class="lnt">193
</span><span class="lnt">194
</span><span class="lnt">195
</span><span class="lnt">196
</span><span class="lnt">197
</span><span class="lnt">198
</span><span class="lnt">199
</span><span class="lnt">200
</span><span class="lnt">201
</span><span class="lnt">202
</span><span class="lnt">203
</span><span class="lnt">204
</span><span class="lnt">205
</span><span class="lnt">206
</span><span class="lnt">207
</span><span class="lnt">208
</span><span class="lnt">209
</span><span class="lnt">210
</span><span class="lnt">211
</span><span class="lnt">212
</span><span class="lnt">213
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-diff" data-lang="diff"><span class="line"><span class="cl"><span class="gh">diff --git a/docker-compose.yaml b/docker-compose.yaml
</span></span></span><span class="line"><span class="cl"><span class="gh">index 48854de..cfeaedb 100644
</span></span></span><span class="line"><span class="cl"><span class="gh"></span><span class="gd">--- a/docker-compose.yaml
</span></span></span><span class="line"><span class="cl"><span class="gd"></span><span class="gi">+++ b/docker-compose.yaml
</span></span></span><span class="line"><span class="cl"><span class="gi"></span><span class="gu">@@ -6,11 +6,13 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       USER: root
</span></span><span class="line"><span class="cl">       TZ:   &#34;${TZ}&#34;
</span></span><span class="line"><span class="cl">     command:
</span></span><span class="line"><span class="cl"><span class="gd">-      - --meta_server_addrs=metad0:9559,metad1:9559,metad2:9559
</span></span></span><span class="line"><span class="cl"><span class="gd"></span><span class="gi">+      - --meta_server_addrs=metad0:9559
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>       - --local_ip=metad0
</span></span><span class="line"><span class="cl">       - --ws_ip=metad0
</span></span><span class="line"><span class="cl">       - --port=9559
</span></span><span class="line"><span class="cl">       - --ws_http_port=19559
</span></span><span class="line"><span class="cl"><span class="gi">+      - --ws_storage_http_port=19779
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>       - --data_path=/data/meta
</span></span><span class="line"><span class="cl">       - --log_dir=/logs
</span></span><span class="line"><span class="cl">       - --v=0
</span></span><span class="line"><span class="cl"><span class="gu">@@ -34,81 +36,14 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>     cap_add:
</span></span><span class="line"><span class="cl">       - SYS_PTRACE
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="gd">-  metad1:
</span></span></span><span class="line"><span class="cl"><span class="gd">-    image: vesoft/nebula-metad:v2.0.0
</span></span></span><span class="line"><span class="cl"><span class="gd">-    environment:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      USER: root
</span></span></span><span class="line"><span class="cl"><span class="gd">-      TZ:   &#34;${TZ}&#34;
</span></span></span><span class="line"><span class="cl"><span class="gd">-    command:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --meta_server_addrs=metad0:9559,metad1:9559,metad2:9559
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --local_ip=metad1
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --ws_ip=metad1
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --port=9559
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --ws_http_port=19559
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --data_path=/data/meta
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --log_dir=/logs
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --v=0
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --minloglevel=0
</span></span></span><span class="line"><span class="cl"><span class="gd">-    healthcheck:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      test: [&#34;CMD&#34;, &#34;curl&#34;, &#34;-sf&#34;, &#34;http://metad1:19559/status&#34;]
</span></span></span><span class="line"><span class="cl"><span class="gd">-      interval: 30s
</span></span></span><span class="line"><span class="cl"><span class="gd">-      timeout: 10s
</span></span></span><span class="line"><span class="cl"><span class="gd">-      retries: 3
</span></span></span><span class="line"><span class="cl"><span class="gd">-      start_period: 20s
</span></span></span><span class="line"><span class="cl"><span class="gd">-    ports:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - 9559
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - 19559
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - 19560
</span></span></span><span class="line"><span class="cl"><span class="gd">-    volumes:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - ./data/meta1:/data/meta
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - ./logs/meta1:/logs
</span></span></span><span class="line"><span class="cl"><span class="gd">-    networks:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - nebula-net
</span></span></span><span class="line"><span class="cl"><span class="gd">-    restart: on-failure
</span></span></span><span class="line"><span class="cl"><span class="gd">-    cap_add:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - SYS_PTRACE
</span></span></span><span class="line"><span class="cl"><span class="gd">-
</span></span></span><span class="line"><span class="cl"><span class="gd">-  metad2:
</span></span></span><span class="line"><span class="cl"><span class="gd">-    image: vesoft/nebula-metad:v2.0.0
</span></span></span><span class="line"><span class="cl"><span class="gd">-    environment:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      USER: root
</span></span></span><span class="line"><span class="cl"><span class="gd">-      TZ:   &#34;${TZ}&#34;
</span></span></span><span class="line"><span class="cl"><span class="gd">-    command:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --meta_server_addrs=metad0:9559,metad1:9559,metad2:9559
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --local_ip=metad2
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --ws_ip=metad2
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --port=9559
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --ws_http_port=19559
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --data_path=/data/meta
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --log_dir=/logs
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --v=0
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --minloglevel=0
</span></span></span><span class="line"><span class="cl"><span class="gd">-    healthcheck:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      test: [&#34;CMD&#34;, &#34;curl&#34;, &#34;-sf&#34;, &#34;http://metad2:19559/status&#34;]
</span></span></span><span class="line"><span class="cl"><span class="gd">-      interval: 30s
</span></span></span><span class="line"><span class="cl"><span class="gd">-      timeout: 10s
</span></span></span><span class="line"><span class="cl"><span class="gd">-      retries: 3
</span></span></span><span class="line"><span class="cl"><span class="gd">-      start_period: 20s
</span></span></span><span class="line"><span class="cl"><span class="gd">-    ports:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - 9559
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - 19559
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - 19560
</span></span></span><span class="line"><span class="cl"><span class="gd">-    volumes:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - ./data/meta2:/data/meta
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - ./logs/meta2:/logs
</span></span></span><span class="line"><span class="cl"><span class="gd">-    networks:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - nebula-net
</span></span></span><span class="line"><span class="cl"><span class="gd">-    restart: on-failure
</span></span></span><span class="line"><span class="cl"><span class="gd">-    cap_add:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - SYS_PTRACE
</span></span></span><span class="line"><span class="cl"><span class="gd">-
</span></span></span><span class="line"><span class="cl"><span class="gd"></span>   storaged0:
</span></span><span class="line"><span class="cl">     image: vesoft/nebula-storaged:v2.0.0
</span></span><span class="line"><span class="cl">     environment:
</span></span><span class="line"><span class="cl">       USER: root
</span></span><span class="line"><span class="cl">       TZ:   &#34;${TZ}&#34;
</span></span><span class="line"><span class="cl">     command:
</span></span><span class="line"><span class="cl"><span class="gd">-      - --meta_server_addrs=metad0:9559,metad1:9559,metad2:9559
</span></span></span><span class="line"><span class="cl"><span class="gd"></span><span class="gi">+      - --meta_server_addrs=metad0:9559
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>       - --local_ip=storaged0
</span></span><span class="line"><span class="cl">       - --ws_ip=storaged0
</span></span><span class="line"><span class="cl">       - --port=9779
</span></span><span class="line"><span class="cl"><span class="gu">@@ -119,8 +54,8 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       - --minloglevel=0
</span></span><span class="line"><span class="cl">     depends_on:
</span></span><span class="line"><span class="cl">       - metad0
</span></span><span class="line"><span class="cl"><span class="gd">-      - metad1
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - metad2
</span></span></span><span class="line"><span class="cl"><span class="gd"></span>     healthcheck:
</span></span><span class="line"><span class="cl">       test: [&#34;CMD&#34;, &#34;curl&#34;, &#34;-sf&#34;, &#34;http://storaged0:19779/status&#34;]
</span></span><span class="line"><span class="cl">       interval: 30s
</span></span><span class="line"><span class="cl"><span class="gu">@@ -146,7 +81,7 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       USER: root
</span></span><span class="line"><span class="cl">       TZ:   &#34;${TZ}&#34;
</span></span><span class="line"><span class="cl">     command:
</span></span><span class="line"><span class="cl"><span class="gd">-      - --meta_server_addrs=metad0:9559,metad1:9559,metad2:9559
</span></span></span><span class="line"><span class="cl"><span class="gd"></span><span class="gi">+      - --meta_server_addrs=metad0:9559
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>       - --local_ip=storaged1
</span></span><span class="line"><span class="cl">       - --ws_ip=storaged1
</span></span><span class="line"><span class="cl">       - --port=9779
</span></span><span class="line"><span class="cl"><span class="gu">@@ -157,8 +92,8 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       - --minloglevel=0
</span></span><span class="line"><span class="cl">     depends_on:
</span></span><span class="line"><span class="cl">       - metad0
</span></span><span class="line"><span class="cl"><span class="gd">-      - metad1
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - metad2
</span></span></span><span class="line"><span class="cl"><span class="gd"></span>     healthcheck:
</span></span><span class="line"><span class="cl">       test: [&#34;CMD&#34;, &#34;curl&#34;, &#34;-sf&#34;, &#34;http://storaged1:19779/status&#34;]
</span></span><span class="line"><span class="cl">       interval: 30s
</span></span><span class="line"><span class="cl"><span class="gu">@@ -184,7 +119,7 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       USER: root
</span></span><span class="line"><span class="cl">       TZ:   &#34;${TZ}&#34;
</span></span><span class="line"><span class="cl">     command:
</span></span><span class="line"><span class="cl"><span class="gd">-      - --meta_server_addrs=metad0:9559,metad1:9559,metad2:9559
</span></span></span><span class="line"><span class="cl"><span class="gd"></span><span class="gi">+      - --meta_server_addrs=metad0:9559
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>       - --local_ip=storaged2
</span></span><span class="line"><span class="cl">       - --ws_ip=storaged2
</span></span><span class="line"><span class="cl">       - --port=9779
</span></span><span class="line"><span class="cl"><span class="gu">@@ -195,8 +130,8 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       - --minloglevel=0
</span></span><span class="line"><span class="cl">     depends_on:
</span></span><span class="line"><span class="cl">       - metad0
</span></span><span class="line"><span class="cl"><span class="gd">-      - metad1
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - metad2
</span></span></span><span class="line"><span class="cl"><span class="gd"></span>     healthcheck:
</span></span><span class="line"><span class="cl">       test: [&#34;CMD&#34;, &#34;curl&#34;, &#34;-sf&#34;, &#34;http://storaged2:19779/status&#34;]
</span></span><span class="line"><span class="cl">       interval: 30s
</span></span><span class="line"><span class="cl"><span class="gu">@@ -222,17 +157,19 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       USER: root
</span></span><span class="line"><span class="cl">       TZ:   &#34;${TZ}&#34;
</span></span><span class="line"><span class="cl">     command:
</span></span><span class="line"><span class="cl"><span class="gd">-      - --meta_server_addrs=metad0:9559,metad1:9559,metad2:9559
</span></span></span><span class="line"><span class="cl"><span class="gd"></span><span class="gi">+      - --meta_server_addrs=metad0:9559
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>       - --port=9669
</span></span><span class="line"><span class="cl">       - --ws_ip=graphd
</span></span><span class="line"><span class="cl">       - --ws_http_port=19669
</span></span><span class="line"><span class="cl"><span class="gi">+      - --ws_meta_http_port=19559
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>       - --log_dir=/logs
</span></span><span class="line"><span class="cl">       - --v=0
</span></span><span class="line"><span class="cl">       - --minloglevel=0
</span></span><span class="line"><span class="cl">     depends_on:
</span></span><span class="line"><span class="cl">       - metad0
</span></span><span class="line"><span class="cl"><span class="gd">-      - metad1
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - metad2
</span></span></span><span class="line"><span class="cl"><span class="gd"></span>     healthcheck:
</span></span><span class="line"><span class="cl">       test: [&#34;CMD&#34;, &#34;curl&#34;, &#34;-sf&#34;, &#34;http://graphd:19669/status&#34;]
</span></span><span class="line"><span class="cl">       interval: 30s
</span></span><span class="line"><span class="cl"><span class="gu">@@ -257,17 +194,19 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       USER: root
</span></span><span class="line"><span class="cl">       TZ:   &#34;${TZ}&#34;
</span></span><span class="line"><span class="cl">     command:
</span></span><span class="line"><span class="cl"><span class="gd">-      - --meta_server_addrs=metad0:9559,metad1:9559,metad2:9559
</span></span></span><span class="line"><span class="cl"><span class="gd"></span><span class="gi">+      - --meta_server_addrs=metad0:9559
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>       - --port=9669
</span></span><span class="line"><span class="cl">       - --ws_ip=graphd1
</span></span><span class="line"><span class="cl">       - --ws_http_port=19669
</span></span><span class="line"><span class="cl"><span class="gi">+      - --ws_meta_http_port=19559
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>       - --log_dir=/logs
</span></span><span class="line"><span class="cl">       - --v=0
</span></span><span class="line"><span class="cl">       - --minloglevel=0
</span></span><span class="line"><span class="cl">     depends_on:
</span></span><span class="line"><span class="cl">       - metad0
</span></span><span class="line"><span class="cl"><span class="gd">-      - metad1
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - metad2
</span></span></span><span class="line"><span class="cl"><span class="gd"></span>     healthcheck:
</span></span><span class="line"><span class="cl">       test: [&#34;CMD&#34;, &#34;curl&#34;, &#34;-sf&#34;, &#34;http://graphd1:19669/status&#34;]
</span></span><span class="line"><span class="cl">       interval: 30s
</span></span><span class="line"><span class="cl"><span class="gu">@@ -292,17 +231,21 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       USER: root
</span></span><span class="line"><span class="cl">       TZ:   &#34;${TZ}&#34;
</span></span><span class="line"><span class="cl">     command:
</span></span><span class="line"><span class="cl"><span class="gd">-      - --meta_server_addrs=metad0:9559,metad1:9559,metad2:9559
</span></span></span><span class="line"><span class="cl"><span class="gd"></span><span class="gi">+      - --meta_server_addrs=metad0:9559
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>       - --port=9669
</span></span><span class="line"><span class="cl">       - --ws_ip=graphd2
</span></span><span class="line"><span class="cl">       - --ws_http_port=19669
</span></span><span class="line"><span class="cl"><span class="gi">+      - --ws_meta_http_port=19559
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>       - --log_dir=/logs
</span></span><span class="line"><span class="cl">       - --v=0
</span></span><span class="line"><span class="cl">       - --minloglevel=0
</span></span><span class="line"><span class="cl"><span class="gi">+      - --storage_client_timeout_ms=60000
</span></span></span><span class="line"><span class="cl"><span class="gi">+      - --local_config=true
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>     depends_on:
</span></span><span class="line"><span class="cl">       - metad0
</span></span><span class="line"><span class="cl"><span class="gd">-      - metad1
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - metad2
</span></span></span><span class="line"><span class="cl"><span class="gd"></span>     healthcheck:
</span></span><span class="line"><span class="cl">       test: [&#34;CMD&#34;, &#34;curl&#34;, &#34;-sf&#34;, &#34;http://graphd2:19669/status&#34;]
</span></span><span class="line"><span class="cl">       interval: 30s
</span></span><span class="line"><span class="cl"><span class="gu">@@ -323,3 +266,4 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>
</span></span><span class="line"><span class="cl"> networks:
</span></span><span class="line"><span class="cl">   nebula-net:
</span></span><span class="line"><span class="cl"><span class="gi">+    external: true
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="附录二" class="headerLink">
    <a href="#%e9%99%84%e5%bd%95%e4%ba%8c" class="header-mark"></a>7.2 附录二</h3><p><a href="https://github.com/big-data-europe/docker-hadoop" target="_blank" rel="noopener noreffer">https://github.com/big-data-europe/docker-hadoop</a> 的 <code>docker-compose.yml</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-diff" data-lang="diff"><span class="line"><span class="cl"><span class="gh">diff --git a/docker-compose.yml b/docker-compose.yml
</span></span></span><span class="line"><span class="cl"><span class="gh">index ed40dc6..66ff1f4 100644
</span></span></span><span class="line"><span class="cl"><span class="gh"></span><span class="gd">--- a/docker-compose.yml
</span></span></span><span class="line"><span class="cl"><span class="gd"></span><span class="gi">+++ b/docker-compose.yml
</span></span></span><span class="line"><span class="cl"><span class="gi"></span><span class="gu">@@ -14,6 +14,8 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       - CLUSTER_NAME=test
</span></span><span class="line"><span class="cl">     env_file:
</span></span><span class="line"><span class="cl">       - ./hadoop.env
</span></span><span class="line"><span class="cl"><span class="gi">+    networks:
</span></span></span><span class="line"><span class="cl"><span class="gi">+      - nebula-net
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>
</span></span><span class="line"><span class="cl">   datanode:
</span></span><span class="line"><span class="cl">     image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
</span></span><span class="line"><span class="cl"><span class="gu">@@ -25,6 +27,8 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       SERVICE_PRECONDITION: &#34;namenode:9870&#34;
</span></span><span class="line"><span class="cl">     env_file:
</span></span><span class="line"><span class="cl">       - ./hadoop.env
</span></span><span class="line"><span class="cl"><span class="gi">+    networks:
</span></span></span><span class="line"><span class="cl"><span class="gi">+      - nebula-net
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>
</span></span><span class="line"><span class="cl">   resourcemanager:
</span></span><span class="line"><span class="cl">     image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
</span></span><span class="line"><span class="cl"><span class="gu">@@ -34,6 +38,8 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       SERVICE_PRECONDITION: &#34;namenode:9000 namenode:9870 datanode:9864&#34;
</span></span><span class="line"><span class="cl">     env_file:
</span></span><span class="line"><span class="cl">       - ./hadoop.env
</span></span><span class="line"><span class="cl"><span class="gi">+    networks:
</span></span></span><span class="line"><span class="cl"><span class="gi">+      - nebula-net
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>
</span></span><span class="line"><span class="cl">   nodemanager1:
</span></span><span class="line"><span class="cl">     image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
</span></span><span class="line"><span class="cl"><span class="gu">@@ -43,6 +49,8 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       SERVICE_PRECONDITION: &#34;namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088&#34;
</span></span><span class="line"><span class="cl">     env_file:
</span></span><span class="line"><span class="cl">       - ./hadoop.env
</span></span><span class="line"><span class="cl"><span class="gi">+    networks:
</span></span></span><span class="line"><span class="cl"><span class="gi">+      - nebula-net
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>
</span></span><span class="line"><span class="cl">   historyserver:
</span></span><span class="line"><span class="cl">     image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
</span></span><span class="line"><span class="cl"><span class="gu">@@ -54,8 +62,14 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       - hadoop_historyserver:/hadoop/yarn/timeline
</span></span><span class="line"><span class="cl">     env_file:
</span></span><span class="line"><span class="cl">       - ./hadoop.env
</span></span><span class="line"><span class="cl"><span class="gi">+    networks:
</span></span></span><span class="line"><span class="cl"><span class="gi">+      - nebula-net
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>
</span></span><span class="line"><span class="cl"> volumes:
</span></span><span class="line"><span class="cl">   hadoop_namenode:
</span></span><span class="line"><span class="cl">   hadoop_datanode:
</span></span><span class="line"><span class="cl">   hadoop_historyserver:
</span></span><span class="line"><span class="cl"><span class="gi">+
</span></span></span><span class="line"><span class="cl"><span class="gi">+networks:
</span></span></span><span class="line"><span class="cl"><span class="gi">+  nebula-net:
</span></span></span><span class="line"><span class="cl"><span class="gi">+    external: true
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="附录三" class="headerLink">
    <a href="#%e9%99%84%e5%bd%95%e4%b8%89" class="header-mark"></a>7.3 附录三</h3><p><code>nebula-exchange-sst.conf</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span><span class="lnt">89
</span><span class="lnt">90
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-toml" data-lang="toml"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="c"># Spark relation config</span>
</span></span><span class="line"><span class="cl">  <span class="nx">spark</span><span class="err">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">app</span><span class="err">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">name</span><span class="err">:</span> <span class="nx">Nebula</span> <span class="nx">Exchange</span> <span class="mf">2.1</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nx">master</span><span class="err">:</span><span class="nx">local</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nx">driver</span><span class="err">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">cores</span><span class="err">:</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">      <span class="nx">maxResultSize</span><span class="err">:</span> <span class="mi">1</span><span class="nx">G</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nx">executor</span><span class="err">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">memory</span><span class="err">:</span><span class="mi">1</span><span class="nx">G</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nx">cores</span><span class="err">:</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">max</span><span class="err">:</span> <span class="mi">16</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c"># Nebula Graph relation config</span>
</span></span><span class="line"><span class="cl">  <span class="nx">nebula</span><span class="err">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">address</span><span class="err">:</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">graph</span><span class="err">:</span><span class="p">[</span><span class="s2">&#34;192.168.8.128:9669&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">      <span class="nx">meta</span><span class="err">:</span><span class="p">[</span><span class="s2">&#34;192.168.8.128:49377&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="nx">user</span><span class="err">:</span> <span class="nx">root</span>
</span></span><span class="line"><span class="cl">    <span class="nx">pswd</span><span class="err">:</span> <span class="nx">nebula</span>
</span></span><span class="line"><span class="cl">    <span class="nx">space</span><span class="err">:</span> <span class="nx">sst</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># parameters for SST import, not required</span>
</span></span><span class="line"><span class="cl">    <span class="nx">path</span><span class="err">:</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">local</span><span class="err">:</span><span class="s2">&#34;/tmp&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="nx">remote</span><span class="err">:</span><span class="s2">&#34;/sst&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="nx">hdfs</span><span class="p">.</span><span class="nx">namenode</span><span class="err">:</span> <span class="s2">&#34;hdfs://192.168.8.128:9000&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># nebula client connection parameters</span>
</span></span><span class="line"><span class="cl">    <span class="nx">connection</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="c"># socket connect &amp; execute timeout, unit: millisecond</span>
</span></span><span class="line"><span class="cl">      <span class="nx">timeout</span><span class="err">:</span> <span class="mi">30000</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nx">error</span><span class="err">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="c"># max number of failures, if the number of failures is bigger than max, then exit the application.</span>
</span></span><span class="line"><span class="cl">      <span class="nx">max</span><span class="err">:</span> <span class="mi">32</span>
</span></span><span class="line"><span class="cl">      <span class="c"># failed import job will be recorded in output path</span>
</span></span><span class="line"><span class="cl">      <span class="nx">output</span><span class="err">:</span> <span class="err">/</span><span class="nx">tmp</span><span class="err">/</span><span class="nx">errors</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># use google&#39;s RateLimiter to limit the requests send to NebulaGraph</span>
</span></span><span class="line"><span class="cl">    <span class="nx">rate</span><span class="err">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="c"># the stable throughput of RateLimiter</span>
</span></span><span class="line"><span class="cl">      <span class="nx">limit</span><span class="err">:</span> <span class="mi">1024</span>
</span></span><span class="line"><span class="cl">      <span class="c"># Acquires a permit from RateLimiter, unit: MILLISECONDS</span>
</span></span><span class="line"><span class="cl">      <span class="c"># if it can&#39;t be obtained within the specified timeout, then give up the request.</span>
</span></span><span class="line"><span class="cl">      <span class="nx">timeout</span><span class="err">:</span> <span class="mi">1000</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c"># Processing tags</span>
</span></span><span class="line"><span class="cl">  <span class="c"># There are tag config examples for different dataSources.</span>
</span></span><span class="line"><span class="cl">  <span class="nx">tags</span><span class="err">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># HDFS csv</span>
</span></span><span class="line"><span class="cl">    <span class="c"># Import mode is sst, just change type.sink to client if you want to use client import mode.</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">name</span><span class="err">:</span> <span class="nx">player</span>
</span></span><span class="line"><span class="cl">      <span class="nx">type</span><span class="err">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">source</span><span class="err">:</span> <span class="nx">csv</span>
</span></span><span class="line"><span class="cl">        <span class="nx">sink</span><span class="err">:</span> <span class="nx">sst</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="nx">path</span><span class="err">:</span> <span class="s2">&#34;file:///root/player.csv&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="c"># if your csv file has no header, then use _c0,_c1,_c2,.. to indicate fields</span>
</span></span><span class="line"><span class="cl">      <span class="nx">fields</span><span class="err">:</span> <span class="p">[</span><span class="nx">_c1</span><span class="p">,</span> <span class="nx">_c2</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">      <span class="nx">nebula</span><span class="p">.</span><span class="nx">fields</span><span class="err">:</span> <span class="p">[</span><span class="nx">name</span><span class="p">,</span> <span class="nx">age</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">      <span class="nx">vertex</span><span class="err">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">field</span><span class="err">:</span><span class="nx">_c0</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="nx">separator</span><span class="err">:</span> <span class="s2">&#34;,&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="nx">header</span><span class="err">:</span> <span class="kc">false</span>
</span></span><span class="line"><span class="cl">      <span class="nx">batch</span><span class="err">:</span> <span class="mi">256</span>
</span></span><span class="line"><span class="cl">      <span class="nx">partition</span><span class="err">:</span> <span class="mi">32</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item></channel>
</rss>
