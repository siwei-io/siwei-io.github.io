<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>SST - Tag - siwei.io</title>
        <link>https://siwei.io/en/tags/sst/</link>
        <description>SST - Tag - siwei.io</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>weyl.gu@gmail.com (Wey Gu)</managingEditor>
            <webMaster>weyl.gu@gmail.com (Wey Gu)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 18 Aug 2021 15:21:00 &#43;0800</lastBuildDate><atom:link href="https://siwei.io/en/tags/sst/" rel="self" type="application/rss+xml" /><item>
    <title>Nebula Exchange SST 2.x Hands-on Guide</title>
    <link>https://siwei.io/en/nebula-exchange-sst-2.x/</link>
    <pubDate>Wed, 18 Aug 2021 15:21:00 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/en/nebula-exchange-sst-2.x/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/en/nebula-exchange-sst-2.x/featured-image.webp" referrerpolicy="no-referrer">
            </div><p>这篇文章带大家以最小方式，快速趟一下 Nebula Exchange 中 SST 写入方式的步骤。</p>
<h2 id="什么是-nebula-exchange-" class="headerLink">
    <a href="#%e4%bb%80%e4%b9%88%e6%98%af-nebula-exchange-" class="header-mark"></a>1 什么是 Nebula Exchange ?</h2><p>之前我在 <a href="https://siwei.io/sketches/nebula-data-import-options/" target="_blank" rel="noopener noreferrer">Nebula Data Import Options</a> 之中介绍过，<a href="https://github.com/vesoft-inc/nebula-spark-utils/tree/master/nebula-exchange" target="_blank" rel="noopener noreferrer">Nebula Exchange</a> 是一个 Nebula Graph 社区开源的 Spark Applicaiton，它专门用来支持批量或者流式地把数据导入 Nebula Graph Database 之中。</p>
<p>Nebula Exchange 支持多种多样的数据源（从 Apache Parquet, ORC, JSON, CSV, HBase, Hive MaxCompute 到 Neo4j, MySQL, ClickHouse, 再有 Kafka, Pulsar，更多的数据源也在不断增加之中）。</p>
<p><a class="lightgallery" href="/en/nebula-exchange-sst-2.x/nebula-exchange-digram.webp" title="nebula-exchange-digram" data-thumbnail="/en/nebula-exchange-sst-2.x/nebula-exchange-digram.webp">
        
    </a></p>
<p>如上图所示，在 Exchange 内部，从除了不同 Reader 可以读取不同数据源之外，在数据经过 Processor 处理之后通过 Writer写入（sink） Nebula Graph 图数据库的时候，除了走正常的 ServerBaseWriter 的写入流程之外，它还可以绕过整个写入流程，利用 Spark 的计算能力并行生成底层 RocksDB 的 SST 文件，从而实现超高性能的数据导入，这个 SST 文件导入的场景就是本文带大家上手熟悉的部分。</p>
<blockquote>
<p>详细信息请参阅：<a href="https://docs.nebula-graph.com.cn/master/nebula-exchange/about-exchange/ex-ug-what-is-exchange/" target="_blank" rel="noopener noreferrer">Nebula Graph 手册:什么是 Nebula Exchange</a></p>
<p><a href="https://nebula-graph.com.cn/posts/" target="_blank" rel="noopener noreferrer">Nebula Graph 官方博客</a>也有更多 Nebula Exchange 的实践文章</p>
</blockquote>
<h2 id="步骤概观" class="headerLink">
    <a href="#%e6%ad%a5%e9%aa%a4%e6%a6%82%e8%a7%82" class="header-mark"></a>2 步骤概观</h2><ul>
<li><a href="#%e5%ae%9e%e9%aa%8c%e7%8e%af%e5%a2%83%e5%87%86%e5%a4%87" rel="">实验环境</a></li>
<li><a href="#%e9%85%8d%e7%bd%aeExchange" rel="">配置 Exchange</a></li>
<li><a href="#%e7%94%9f%e6%88%90SST%e6%96%87%e4%bb%b6" rel="">生成 SST 文件</a></li>
<li><a href="#%e5%86%99%e5%85%a5SST%e6%96%87%e4%bb%b6%e5%88%b0NebulaGraph" rel="">写入 SST 文件到 Nebula Graph</a></li>
</ul>
<h2 id="实验环境准备" class="headerLink">
    <a href="#%e5%ae%9e%e9%aa%8c%e7%8e%af%e5%a2%83%e5%87%86%e5%a4%87" class="header-mark"></a>3 实验环境准备</h2><p>为了最小化使用 Nebula Exchange 的 SST 功能，我们需要：</p>
<ul>
<li>搭建一个 Nebula Graph 集群，创建导入数据的 Schema，我们选择使用 Docker-Compose 方式、利用 <a href="https://github.com/wey-gu/nebula-up/" target="_blank" rel="noopener noreferrer">Nebula-Up</a> 快速部署，并简单修改其网络，以方便同样容器化的 Exchange 程序对其访问。</li>
<li>搭建容器化的 Spark 运行环境</li>
<li>搭建容器化的 HDFS</li>
</ul>
<h3 id="搭建-nebula-graph-集群" class="headerLink">
    <a href="#%e6%90%ad%e5%bb%ba-nebula-graph-%e9%9b%86%e7%be%a4" class="header-mark"></a>3.1 搭建 Nebula Graph 集群</h3><p>借助于 <a href="https://github.com/wey-gu/nebula-up/" target="_blank" rel="noopener noreferrer">Nebula-Up</a> 我们可以在 Linux 环境下一键部署一套 Nebula Graph 集群：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">curl -fsSL nebula-up.siwei.io/install.sh <span class="p">|</span> bash
</span></span></code></pre></td></tr></table>
</div>
</div><p><a class="lightgallery" href="https://github.com/wey-gu/nebula-up/raw/main/images/nebula-up-demo-shell.png" title="nebula-up" data-thumbnail="https://github.com/wey-gu/nebula-up/raw/main/images/nebula-up-demo-shell.png">
        
    </a></p>
<p>待部署成功之后，我们需要对环境做一些修改，这里我做的修改其实就是两点：</p>
<ol>
<li>只保留一个 metaD 服务</li>
<li>起用 Docker 的外部网络</li>
</ol>
<p>详细修改的部分参考<a href="#%e9%99%84%e5%bd%95%e4%b8%80" rel="">附录一</a></p>
<p>应用 docker-compose 的修改：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> ~/.nebula-up/nebula-docker-compose
</span></span><span class="line"><span class="cl">vim docker-compose.yaml <span class="c1"># 参考附录一</span>
</span></span><span class="line"><span class="cl">docker network create nebula-net <span class="c1"># 需要创建外部网络</span>
</span></span><span class="line"><span class="cl">docker-compose up -d --remove-orphans
</span></span></code></pre></td></tr></table>
</div>
</div><p>之后，我们来创建要测试的图空间，并创建图的 Schema，为此，我们可以利用 nebula-console ，同样，Nebula-Up 里自带了容器化的 nebula-console。</p>
<ul>
<li>进入 Nebula-Console 所在的容器</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">~/.nebula-up/console.sh
</span></span><span class="line"><span class="cl">/ <span class="c1">#</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>在 console 容器里发起链接到图数据库，其中 <code>192.168.x.y</code> 是我所在的 Linux VM 的第一个网卡地址，请换成您的</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">/ # nebula-console -addr 192.168.x.y -port 9669 -user root -p password
</span></span><span class="line"><span class="cl">[INFO] connection pool is initialized successfully
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Welcome to Nebula Graph!
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>创建图空间（我们起名字叫 <code>sst</code> ），以及 schema</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">create</span><span class="w"> </span><span class="k">space</span><span class="w"> </span><span class="n">sst</span><span class="p">(</span><span class="n">partition_num</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span><span class="n">replica_factor</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">vid_type</span><span class="o">=</span><span class="n">fixed_string</span><span class="p">(</span><span class="mi">32</span><span class="p">));</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">:</span><span class="n">sleep</span><span class="w"> </span><span class="mi">20</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">use</span><span class="w"> </span><span class="n">sst</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">create</span><span class="w"> </span><span class="n">tag</span><span class="w"> </span><span class="n">player</span><span class="p">(</span><span class="n">name</span><span class="w"> </span><span class="n">string</span><span class="p">,</span><span class="w"> </span><span class="n">age</span><span class="w"> </span><span class="nb">int</span><span class="p">);</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>示例输出</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[(</span><span class="k">none</span><span class="p">)]</span><span class="o">&gt;</span><span class="w"> </span><span class="k">create</span><span class="w"> </span><span class="k">space</span><span class="w"> </span><span class="n">sst</span><span class="p">(</span><span class="n">partition_num</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span><span class="n">replica_factor</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">vid_type</span><span class="o">=</span><span class="n">fixed_string</span><span class="p">(</span><span class="mi">32</span><span class="p">));</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Execution</span><span class="w"> </span><span class="n">succeeded</span><span class="w"> </span><span class="p">(</span><span class="n">time</span><span class="w"> </span><span class="n">spent</span><span class="w"> </span><span class="mi">1468</span><span class="o">/</span><span class="mi">1918</span><span class="w"> </span><span class="n">us</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[(</span><span class="k">none</span><span class="p">)]</span><span class="o">&gt;</span><span class="w"> </span><span class="p">:</span><span class="n">sleep</span><span class="w"> </span><span class="mi">20</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[(</span><span class="k">none</span><span class="p">)]</span><span class="o">&gt;</span><span class="w"> </span><span class="n">use</span><span class="w"> </span><span class="n">sst</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Execution</span><span class="w"> </span><span class="n">succeeded</span><span class="w"> </span><span class="p">(</span><span class="n">time</span><span class="w"> </span><span class="n">spent</span><span class="w"> </span><span class="mi">1253</span><span class="o">/</span><span class="mi">1566</span><span class="w"> </span><span class="n">us</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Wed</span><span class="p">,</span><span class="w"> </span><span class="mi">18</span><span class="w"> </span><span class="n">Aug</span><span class="w"> </span><span class="mi">2021</span><span class="w"> </span><span class="mi">08</span><span class="p">:</span><span class="mi">18</span><span class="p">:</span><span class="mi">13</span><span class="w"> </span><span class="n">UTC</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[</span><span class="n">sst</span><span class="p">]</span><span class="o">&gt;</span><span class="w"> </span><span class="k">create</span><span class="w"> </span><span class="n">tag</span><span class="w"> </span><span class="n">player</span><span class="p">(</span><span class="n">name</span><span class="w"> </span><span class="n">string</span><span class="p">,</span><span class="w"> </span><span class="n">age</span><span class="w"> </span><span class="nb">int</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Execution</span><span class="w"> </span><span class="n">succeeded</span><span class="w"> </span><span class="p">(</span><span class="n">time</span><span class="w"> </span><span class="n">spent</span><span class="w"> </span><span class="mi">1312</span><span class="o">/</span><span class="mi">1735</span><span class="w"> </span><span class="n">us</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Wed</span><span class="p">,</span><span class="w"> </span><span class="mi">18</span><span class="w"> </span><span class="n">Aug</span><span class="w"> </span><span class="mi">2021</span><span class="w"> </span><span class="mi">08</span><span class="p">:</span><span class="mi">18</span><span class="p">:</span><span class="mi">23</span><span class="w"> </span><span class="n">UTC</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="搭建容器化的-spark-环境" class="headerLink">
    <a href="#%e6%90%ad%e5%bb%ba%e5%ae%b9%e5%99%a8%e5%8c%96%e7%9a%84-spark-%e7%8e%af%e5%a2%83" class="header-mark"></a>3.2 搭建容器化的 Spark 环境</h3><p>利用 big data europe 做的工作，这个过程非常容易。</p>
<p>值得注意的是：</p>
<ul>
<li>现在的 Nebula Exchange 对 Spark 的版本有要求，在现在的 2021 年 8 月，我是用了 spark-2.4.5-hadoop-2.7 的版本。</li>
<li>为了方便，我让 Spark 运行在 Nebula Graph 相同的机器上，并且指定了运行在同一个 Docker 网络下</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker run --name spark-master --network nebula-net <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -h spark-master -e <span class="nv">ENABLE_INIT_DAEMON</span><span class="o">=</span><span class="nb">false</span> -d <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    bde2020/spark-master:2.4.5-hadoop2.7
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后，我们就可以进入到环境中了：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker <span class="nb">exec</span> -it spark-master bash
</span></span></code></pre></td></tr></table>
</div>
</div><p>进到 Spark 容器中之后，可以像这样安装 maven:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">MAVEN_VERSION</span><span class="o">=</span>3.5.4
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">MAVEN_HOME</span><span class="o">=</span>/usr/lib/mvn
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">PATH</span><span class="o">=</span><span class="nv">$MAVEN_HOME</span>/bin:<span class="nv">$PATH</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">wget http://archive.apache.org/dist/maven/maven-3/<span class="nv">$MAVEN_VERSION</span>/binaries/apache-maven-<span class="nv">$MAVEN_VERSION</span>-bin.tar.gz <span class="o">&amp;&amp;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  tar -zxvf apache-maven-<span class="nv">$MAVEN_VERSION</span>-bin.tar.gz <span class="o">&amp;&amp;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  rm apache-maven-<span class="nv">$MAVEN_VERSION</span>-bin.tar.gz <span class="o">&amp;&amp;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  mv apache-maven-<span class="nv">$MAVEN_VERSION</span> /usr/lib/mvn
</span></span></code></pre></td></tr></table>
</div>
</div><p>还可以这样在容器里下载 nebula-exchange 的 <code>jar</code> 包：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> ~
</span></span><span class="line"><span class="cl">wget https://repo1.maven.org/maven2/com/vesoft/nebula-exchange/2.1.0/nebula-exchange-2.1.0.jar
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="搭建容器化的-hdfs" class="headerLink">
    <a href="#%e6%90%ad%e5%bb%ba%e5%ae%b9%e5%99%a8%e5%8c%96%e7%9a%84-hdfs" class="header-mark"></a>3.3 搭建容器化的 HDFS</h3><p>同样借助 big-data-euroupe 的工作，这非常简单，不过我们要做一点修改，让它的 <code>docker-compose.yml</code> 文件里使用 <code>nebula-net</code> 这个之前创建的 Docker 网络。</p>
<p>详细修改的部分参考<a href="#%e9%99%84%e5%bd%95%e4%ba%8c" rel="">附录二</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git clone https://github.com/big-data-europe/docker-hadoop.git
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> docker-hadoop
</span></span><span class="line"><span class="cl">vim docker-compose.yml
</span></span><span class="line"><span class="cl">docker-compose up -d
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="配置exchange" class="headerLink">
    <a href="#%e9%85%8d%e7%bd%aeexchange" class="header-mark"></a>4 配置Exchange</h2><p>这个配置主要填入的信息就是 Nebula Graph 集群本身和将要写入数据的 Space Name，以及数据源相关的配置（这里我们用 <code>csv</code> 作为例子），最后再配置输出（sink）为 <code>sst</code></p>
<ul>
<li>Nebula Graph
<ul>
<li>GraphD 地址</li>
<li>MetaD 地址</li>
<li>credential</li>
<li>Space Name</li>
</ul>
</li>
<li>数据源
<ul>
<li><code>source: csv</code>
<ul>
<li><code>path</code></li>
<li><code>fields</code> etc.</li>
</ul>
</li>
<li><code>ink: sst</code></li>
</ul>
</li>
</ul>
<p>详细的配置参考<a href="#%e9%99%84%e5%bd%95%e4%ba%8c" rel="">附录二</a></p>
<p>注意，这里 metaD 的地址可以这样获取，可以看到 <code>0.0.0.0:49377-&gt;9559</code> 表示 <code>49377</code> 是外部的地址。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker ps <span class="p">|</span> grep meta
</span></span><span class="line"><span class="cl">887740c15750   vesoft/nebula-metad:v2.0.0                               <span class="s2">&#34;./bin/nebula-metad …&#34;</span>   <span class="m">6</span> hours ago    Up <span class="m">6</span> hours <span class="o">(</span>healthy<span class="o">)</span>    9560/tcp, 0.0.0.0:49377-&gt;9559/tcp, :::49377-&gt;9559/tcp, 0.0.0.0:49376-&gt;19559/tcp, :::49376-&gt;19559/tcp, 0.0.0.0:49375-&gt;19560/tcp, :::49375-&gt;19560/tcp                  nebula-docker-compose_metad0_1
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="生成sst文件" class="headerLink">
    <a href="#%e7%94%9f%e6%88%90sst%e6%96%87%e4%bb%b6" class="header-mark"></a>5 生成SST文件</h2><h3 id="准备源文件配置文件" class="headerLink">
    <a href="#%e5%87%86%e5%a4%87%e6%ba%90%e6%96%87%e4%bb%b6%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6" class="header-mark"></a>5.1 准备源文件、配置文件</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker cp exchange-sst.conf spark-master:/root/
</span></span><span class="line"><span class="cl">docker cp player.csv spark-master:/root/
</span></span></code></pre></td></tr></table>
</div>
</div><p>其中 <code>player.csv</code> 的例子：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">1100,Tim Duncan,42
</span></span><span class="line"><span class="cl">1101,Tony Parker,36
</span></span><span class="line"><span class="cl">1102,LaMarcus Aldridge,33
</span></span><span class="line"><span class="cl">1103,Rudy Gay,32
</span></span><span class="line"><span class="cl">1104,Marco Belinelli,32
</span></span><span class="line"><span class="cl">1105,Danny Green,31
</span></span><span class="line"><span class="cl">1106,Kyle Anderson,25
</span></span><span class="line"><span class="cl">1107,Aron Baynes,32
</span></span><span class="line"><span class="cl">1108,Boris Diaw,36
</span></span><span class="line"><span class="cl">1109,Tiago Splitter,34
</span></span><span class="line"><span class="cl">1110,Cory Joseph,27
</span></span><span class="line"><span class="cl">1111,David West,38
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="执行-exchange-程序" class="headerLink">
    <a href="#%e6%89%a7%e8%a1%8c-exchange-%e7%a8%8b%e5%ba%8f" class="header-mark"></a>5.2 执行 exchange 程序</h3><p>进入 <code>spark-master</code> 容器，提交执行 <code>exchange</code> 应用。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker <span class="nb">exec</span> -it spark-master bash
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> /root/
</span></span><span class="line"><span class="cl">/spark/bin/spark-submit --master <span class="nb">local</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --class com.vesoft.nebula.exchange.Exchange nebula-exchange-2.1.0.jar<span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -c exchange-sst.conf
</span></span></code></pre></td></tr></table>
</div>
</div><p>检查执行结果：</p>
<p><code>spark-submit</code> 输出：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">21/08/17 03:37:43 INFO TaskSetManager: Finished task 31.0 in stage 2.0 <span class="o">(</span>TID 33<span class="o">)</span> in <span class="m">1093</span> ms on localhost <span class="o">(</span>executor driver<span class="o">)</span> <span class="o">(</span>32/32<span class="o">)</span>
</span></span><span class="line"><span class="cl">21/08/17 03:37:43 INFO TaskSchedulerImpl: Removed TaskSet 2.0, whose tasks have all completed, from pool
</span></span><span class="line"><span class="cl">21/08/17 03:37:43 INFO DAGScheduler: ResultStage <span class="m">2</span> <span class="o">(</span>foreachPartition at VerticesProcessor.scala:179<span class="o">)</span> finished in 22.336 s
</span></span><span class="line"><span class="cl">21/08/17 03:37:43 INFO DAGScheduler: Job <span class="m">1</span> finished: foreachPartition at VerticesProcessor.scala:179, took 22.500639 s
</span></span><span class="line"><span class="cl">21/08/17 03:37:43 INFO Exchange$: SST-Import: failure.player: <span class="m">0</span>
</span></span><span class="line"><span class="cl">21/08/17 03:37:43 WARN Exchange$: Edge is not defined
</span></span><span class="line"><span class="cl">21/08/17 03:37:43 INFO SparkUI: Stopped Spark web UI at http://spark-master:4040
</span></span><span class="line"><span class="cl">21/08/17 03:37:43 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!
</span></span></code></pre></td></tr></table>
</div>
</div><p>验证 HDFS 上生成的 SST 文件：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker <span class="nb">exec</span> -it namenode /bin/bash
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">root@2db58903fb53:/# hdfs dfs -ls /sst
</span></span><span class="line"><span class="cl">Found <span class="m">10</span> items
</span></span><span class="line"><span class="cl">drwxr-xr-x   - root supergroup          <span class="m">0</span> 2021-08-17 03:37 /sst/1
</span></span><span class="line"><span class="cl">drwxr-xr-x   - root supergroup          <span class="m">0</span> 2021-08-17 03:37 /sst/10
</span></span><span class="line"><span class="cl">drwxr-xr-x   - root supergroup          <span class="m">0</span> 2021-08-17 03:37 /sst/2
</span></span><span class="line"><span class="cl">drwxr-xr-x   - root supergroup          <span class="m">0</span> 2021-08-17 03:37 /sst/3
</span></span><span class="line"><span class="cl">drwxr-xr-x   - root supergroup          <span class="m">0</span> 2021-08-17 03:37 /sst/4
</span></span><span class="line"><span class="cl">drwxr-xr-x   - root supergroup          <span class="m">0</span> 2021-08-17 03:37 /sst/5
</span></span><span class="line"><span class="cl">drwxr-xr-x   - root supergroup          <span class="m">0</span> 2021-08-17 03:37 /sst/6
</span></span><span class="line"><span class="cl">drwxr-xr-x   - root supergroup          <span class="m">0</span> 2021-08-17 03:37 /sst/7
</span></span><span class="line"><span class="cl">drwxr-xr-x   - root supergroup          <span class="m">0</span> 2021-08-17 03:37 /sst/8
</span></span><span class="line"><span class="cl">drwxr-xr-x   - root supergroup          <span class="m">0</span> 2021-08-17 03:37 /sst/9
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="写入sst到nebulagraph" class="headerLink">
    <a href="#%e5%86%99%e5%85%a5sst%e5%88%b0nebulagraph" class="header-mark"></a>6 写入SST到NebulaGraph</h2><p>这里的操作实际上都是参考文档：<a href="https://docs.nebula-graph.com.cn/master/nebula-exchange/use-exchange/ex-ug-import-from-sst/" target="_blank" rel="noopener noreferrer">SST 导入</a>，得来。其中就是从 console 之中执行了两步操作：</p>
<ul>
<li>Download</li>
<li>Ingest</li>
</ul>
<p>其中 Download 实际上是触发 Nebula Graph 从服务端发起 HDFS Client 的 download，获取 HDFS 上的 SST 文件，然后放到 storageD 能访问的本地路径下，这里，需要我们在服务端部署 HDFS 的依赖。因为我们是最小实践，我就偷懒手动做了这个 Download 的操作。</p>
<h3 id="手动下载" class="headerLink">
    <a href="#%e6%89%8b%e5%8a%a8%e4%b8%8b%e8%bd%bd" class="header-mark"></a>6.1 手动下载</h3><p>这里边手动下载我们就要知道 Nebula Graph 服务端下载的路径，实际上是 <code>/data/storage/nebula/&lt;space_id&gt;/download/</code>，这里的 Space ID 需要手动获取一下：</p>
<p>这个例子里，我们的 Space Name 是 <code>sst</code>，而 Space ID 是 <code>49</code>。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[</span><span class="n">sst</span><span class="p">]</span><span class="o">&gt;</span><span class="w"> </span><span class="k">DESC</span><span class="w"> </span><span class="k">space</span><span class="w"> </span><span class="n">sst</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">----+-------+------------------+----------------+---------+------------+--------------------+-------------+-----------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="n">ID</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Name</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="n">Partition</span><span class="w"> </span><span class="nb">Number</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Replica</span><span class="w"> </span><span class="n">Factor</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Charset</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">Collate</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="n">Vid</span><span class="w"> </span><span class="k">Type</span><span class="w">           </span><span class="o">|</span><span class="w"> </span><span class="k">Atomic</span><span class="w"> </span><span class="n">Edge</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">Group</span><span class="w">     </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">----+-------+------------------+----------------+---------+------------+--------------------+-------------+-----------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="mi">49</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;sst&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">10</span><span class="w">               </span><span class="o">|</span><span class="w"> </span><span class="mi">1</span><span class="w">              </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;utf8&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;utf8_bin&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;FIXED_STRING(32)&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;false&#34;</span><span class="w">     </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;default&#34;</span><span class="w"> </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">----+-------+------------------+----------------+---------+------------+--------------------+-------------+-----------+
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>于是，下边的操作就是手动把 SST 文件从 HDFS 之中 <code>get</code> 下来，再拷贝到 storageD 之中。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker <span class="nb">exec</span> -it namenode /bin/bash
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ hdfs dfs -get /sst /sst
</span></span><span class="line"><span class="cl"><span class="nb">exit</span>
</span></span><span class="line"><span class="cl">docker cp namenode:/sst .
</span></span><span class="line"><span class="cl">docker <span class="nb">exec</span> -it nebula-docker-compose_storaged0_1 mkdir -p /data/storage/nebula/49/download/
</span></span><span class="line"><span class="cl">docker <span class="nb">exec</span> -it nebula-docker-compose_storaged1_1 mkdir -p /data/storage/nebula/49/download/
</span></span><span class="line"><span class="cl">docker <span class="nb">exec</span> -it nebula-docker-compose_storaged2_1 mkdir -p /data/storage/nebula/49/download/
</span></span><span class="line"><span class="cl">docker cp sst nebula-docker-compose_storaged0_1:/data/storage/nebula/49/download/
</span></span><span class="line"><span class="cl">docker cp sst nebula-docker-compose_storaged1_1:/data/storage/nebula/49/download/
</span></span><span class="line"><span class="cl">docker cp sst nebula-docker-compose_storaged2_1:/data/storage/nebula/49/download/
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="sst-文件导入" class="headerLink">
    <a href="#sst-%e6%96%87%e4%bb%b6%e5%af%bc%e5%85%a5" class="header-mark"></a>6.2 SST 文件导入</h3><ul>
<li>进入 Nebula-Console 所在的容器</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">~/.nebula-up/console.sh
</span></span><span class="line"><span class="cl">/ <span class="c1">#</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>在 console 容器里发起链接到图数据库，其中 <code>192.168.x.y</code> 是我所在的 Linux VM 的第一个网卡地址，请换成您的</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">/ # nebula-console -addr 192.168.x.y -port 9669 -user root -p password
</span></span><span class="line"><span class="cl">[INFO] connection pool is initialized successfully
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Welcome to Nebula Graph!
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>执行 <code>INGEST</code> 开始让 StorageD 读取 SST 文件</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">(</span>root@nebula<span class="o">)</span> <span class="o">[(</span>none<span class="o">)]</span>&gt; use sst
</span></span><span class="line"><span class="cl"><span class="o">(</span>root@nebula<span class="o">)</span> <span class="o">[</span>sst<span class="o">]</span>&gt; INGEST<span class="p">;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>我们可以用如下方法实时查看 Nebula Graph 服务端的日志</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">tail -f ~/.nebula-up/nebula-docker-compose/logs/*/*
</span></span></code></pre></td></tr></table>
</div>
</div><p>成功的 INGEST 日志：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">I0817 08:03:28.611877   <span class="m">169</span> EventListner.h:96<span class="o">]</span> Ingest external SST file: column family default, the external file path /data/storage/nebula/49/download/8/8-6.sst, the internal file path /data/storage/nebula/49/data/000023.sst, the properties of the table: <span class="c1"># data blocks=1; # entries=1; # deletions=0; # merge operands=0; # range deletions=0; raw key size=48; raw average key size=48.000000; raw value size=40; raw average value size=40.000000; data block size=75; index block size (user-key? 0, delta-value? 0)=66; filter block size=0; (estimated) table size=141; filter policy name=N/A; prefix extractor name=nullptr; column family ID=N/A; column family name=N/A; comparator name=leveldb.BytewiseComparator; merge operator name=nullptr; property collectors names=[]; SST file compression algo=Snappy; SST file compression options=window_bits=-14; level=32767; strategy=0; max_dict_bytes=0; zstd_max_train_bytes=0; enabled=0; ; creation time=0; time stamp of earliest key=0; file creation time=0;</span>
</span></span><span class="line"><span class="cl">E0817 08:03:28.611912   <span class="m">169</span> StorageHttpIngestHandler.cpp:63<span class="o">]</span> SSTFile ingest successfully
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>题图版权：<a href="https://unsplash.com/photos/n6B49lTx7NM" target="_blank" rel="noopener noreferrer">Pietro Jeng</a></p>
</blockquote>
<h2 id="附录" class="headerLink">
    <a href="#%e9%99%84%e5%bd%95" class="header-mark"></a>7 附录</h2><h3 id="附录一" class="headerLink">
    <a href="#%e9%99%84%e5%bd%95%e4%b8%80" class="header-mark"></a>7.1 附录一</h3><p><code>docker-compose.yaml</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span><span class="lnt">133
</span><span class="lnt">134
</span><span class="lnt">135
</span><span class="lnt">136
</span><span class="lnt">137
</span><span class="lnt">138
</span><span class="lnt">139
</span><span class="lnt">140
</span><span class="lnt">141
</span><span class="lnt">142
</span><span class="lnt">143
</span><span class="lnt">144
</span><span class="lnt">145
</span><span class="lnt">146
</span><span class="lnt">147
</span><span class="lnt">148
</span><span class="lnt">149
</span><span class="lnt">150
</span><span class="lnt">151
</span><span class="lnt">152
</span><span class="lnt">153
</span><span class="lnt">154
</span><span class="lnt">155
</span><span class="lnt">156
</span><span class="lnt">157
</span><span class="lnt">158
</span><span class="lnt">159
</span><span class="lnt">160
</span><span class="lnt">161
</span><span class="lnt">162
</span><span class="lnt">163
</span><span class="lnt">164
</span><span class="lnt">165
</span><span class="lnt">166
</span><span class="lnt">167
</span><span class="lnt">168
</span><span class="lnt">169
</span><span class="lnt">170
</span><span class="lnt">171
</span><span class="lnt">172
</span><span class="lnt">173
</span><span class="lnt">174
</span><span class="lnt">175
</span><span class="lnt">176
</span><span class="lnt">177
</span><span class="lnt">178
</span><span class="lnt">179
</span><span class="lnt">180
</span><span class="lnt">181
</span><span class="lnt">182
</span><span class="lnt">183
</span><span class="lnt">184
</span><span class="lnt">185
</span><span class="lnt">186
</span><span class="lnt">187
</span><span class="lnt">188
</span><span class="lnt">189
</span><span class="lnt">190
</span><span class="lnt">191
</span><span class="lnt">192
</span><span class="lnt">193
</span><span class="lnt">194
</span><span class="lnt">195
</span><span class="lnt">196
</span><span class="lnt">197
</span><span class="lnt">198
</span><span class="lnt">199
</span><span class="lnt">200
</span><span class="lnt">201
</span><span class="lnt">202
</span><span class="lnt">203
</span><span class="lnt">204
</span><span class="lnt">205
</span><span class="lnt">206
</span><span class="lnt">207
</span><span class="lnt">208
</span><span class="lnt">209
</span><span class="lnt">210
</span><span class="lnt">211
</span><span class="lnt">212
</span><span class="lnt">213
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-diff" data-lang="diff"><span class="line"><span class="cl"><span class="gh">diff --git a/docker-compose.yaml b/docker-compose.yaml
</span></span></span><span class="line"><span class="cl"><span class="gh">index 48854de..cfeaedb 100644
</span></span></span><span class="line"><span class="cl"><span class="gh"></span><span class="gd">--- a/docker-compose.yaml
</span></span></span><span class="line"><span class="cl"><span class="gd"></span><span class="gi">+++ b/docker-compose.yaml
</span></span></span><span class="line"><span class="cl"><span class="gi"></span><span class="gu">@@ -6,11 +6,13 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       USER: root
</span></span><span class="line"><span class="cl">       TZ:   &#34;${TZ}&#34;
</span></span><span class="line"><span class="cl">     command:
</span></span><span class="line"><span class="cl"><span class="gd">-      - --meta_server_addrs=metad0:9559,metad1:9559,metad2:9559
</span></span></span><span class="line"><span class="cl"><span class="gd"></span><span class="gi">+      - --meta_server_addrs=metad0:9559
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>       - --local_ip=metad0
</span></span><span class="line"><span class="cl">       - --ws_ip=metad0
</span></span><span class="line"><span class="cl">       - --port=9559
</span></span><span class="line"><span class="cl">       - --ws_http_port=19559
</span></span><span class="line"><span class="cl"><span class="gi">+      - --ws_storage_http_port=19779
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>       - --data_path=/data/meta
</span></span><span class="line"><span class="cl">       - --log_dir=/logs
</span></span><span class="line"><span class="cl">       - --v=0
</span></span><span class="line"><span class="cl"><span class="gu">@@ -34,81 +36,14 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>     cap_add:
</span></span><span class="line"><span class="cl">       - SYS_PTRACE
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="gd">-  metad1:
</span></span></span><span class="line"><span class="cl"><span class="gd">-    image: vesoft/nebula-metad:v2.0.0
</span></span></span><span class="line"><span class="cl"><span class="gd">-    environment:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      USER: root
</span></span></span><span class="line"><span class="cl"><span class="gd">-      TZ:   &#34;${TZ}&#34;
</span></span></span><span class="line"><span class="cl"><span class="gd">-    command:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --meta_server_addrs=metad0:9559,metad1:9559,metad2:9559
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --local_ip=metad1
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --ws_ip=metad1
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --port=9559
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --ws_http_port=19559
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --data_path=/data/meta
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --log_dir=/logs
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --v=0
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --minloglevel=0
</span></span></span><span class="line"><span class="cl"><span class="gd">-    healthcheck:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      test: [&#34;CMD&#34;, &#34;curl&#34;, &#34;-sf&#34;, &#34;http://metad1:19559/status&#34;]
</span></span></span><span class="line"><span class="cl"><span class="gd">-      interval: 30s
</span></span></span><span class="line"><span class="cl"><span class="gd">-      timeout: 10s
</span></span></span><span class="line"><span class="cl"><span class="gd">-      retries: 3
</span></span></span><span class="line"><span class="cl"><span class="gd">-      start_period: 20s
</span></span></span><span class="line"><span class="cl"><span class="gd">-    ports:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - 9559
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - 19559
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - 19560
</span></span></span><span class="line"><span class="cl"><span class="gd">-    volumes:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - ./data/meta1:/data/meta
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - ./logs/meta1:/logs
</span></span></span><span class="line"><span class="cl"><span class="gd">-    networks:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - nebula-net
</span></span></span><span class="line"><span class="cl"><span class="gd">-    restart: on-failure
</span></span></span><span class="line"><span class="cl"><span class="gd">-    cap_add:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - SYS_PTRACE
</span></span></span><span class="line"><span class="cl"><span class="gd">-
</span></span></span><span class="line"><span class="cl"><span class="gd">-  metad2:
</span></span></span><span class="line"><span class="cl"><span class="gd">-    image: vesoft/nebula-metad:v2.0.0
</span></span></span><span class="line"><span class="cl"><span class="gd">-    environment:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      USER: root
</span></span></span><span class="line"><span class="cl"><span class="gd">-      TZ:   &#34;${TZ}&#34;
</span></span></span><span class="line"><span class="cl"><span class="gd">-    command:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --meta_server_addrs=metad0:9559,metad1:9559,metad2:9559
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --local_ip=metad2
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --ws_ip=metad2
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --port=9559
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --ws_http_port=19559
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --data_path=/data/meta
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --log_dir=/logs
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --v=0
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - --minloglevel=0
</span></span></span><span class="line"><span class="cl"><span class="gd">-    healthcheck:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      test: [&#34;CMD&#34;, &#34;curl&#34;, &#34;-sf&#34;, &#34;http://metad2:19559/status&#34;]
</span></span></span><span class="line"><span class="cl"><span class="gd">-      interval: 30s
</span></span></span><span class="line"><span class="cl"><span class="gd">-      timeout: 10s
</span></span></span><span class="line"><span class="cl"><span class="gd">-      retries: 3
</span></span></span><span class="line"><span class="cl"><span class="gd">-      start_period: 20s
</span></span></span><span class="line"><span class="cl"><span class="gd">-    ports:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - 9559
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - 19559
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - 19560
</span></span></span><span class="line"><span class="cl"><span class="gd">-    volumes:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - ./data/meta2:/data/meta
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - ./logs/meta2:/logs
</span></span></span><span class="line"><span class="cl"><span class="gd">-    networks:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - nebula-net
</span></span></span><span class="line"><span class="cl"><span class="gd">-    restart: on-failure
</span></span></span><span class="line"><span class="cl"><span class="gd">-    cap_add:
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - SYS_PTRACE
</span></span></span><span class="line"><span class="cl"><span class="gd">-
</span></span></span><span class="line"><span class="cl"><span class="gd"></span>   storaged0:
</span></span><span class="line"><span class="cl">     image: vesoft/nebula-storaged:v2.0.0
</span></span><span class="line"><span class="cl">     environment:
</span></span><span class="line"><span class="cl">       USER: root
</span></span><span class="line"><span class="cl">       TZ:   &#34;${TZ}&#34;
</span></span><span class="line"><span class="cl">     command:
</span></span><span class="line"><span class="cl"><span class="gd">-      - --meta_server_addrs=metad0:9559,metad1:9559,metad2:9559
</span></span></span><span class="line"><span class="cl"><span class="gd"></span><span class="gi">+      - --meta_server_addrs=metad0:9559
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>       - --local_ip=storaged0
</span></span><span class="line"><span class="cl">       - --ws_ip=storaged0
</span></span><span class="line"><span class="cl">       - --port=9779
</span></span><span class="line"><span class="cl"><span class="gu">@@ -119,8 +54,8 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       - --minloglevel=0
</span></span><span class="line"><span class="cl">     depends_on:
</span></span><span class="line"><span class="cl">       - metad0
</span></span><span class="line"><span class="cl"><span class="gd">-      - metad1
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - metad2
</span></span></span><span class="line"><span class="cl"><span class="gd"></span>     healthcheck:
</span></span><span class="line"><span class="cl">       test: [&#34;CMD&#34;, &#34;curl&#34;, &#34;-sf&#34;, &#34;http://storaged0:19779/status&#34;]
</span></span><span class="line"><span class="cl">       interval: 30s
</span></span><span class="line"><span class="cl"><span class="gu">@@ -146,7 +81,7 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       USER: root
</span></span><span class="line"><span class="cl">       TZ:   &#34;${TZ}&#34;
</span></span><span class="line"><span class="cl">     command:
</span></span><span class="line"><span class="cl"><span class="gd">-      - --meta_server_addrs=metad0:9559,metad1:9559,metad2:9559
</span></span></span><span class="line"><span class="cl"><span class="gd"></span><span class="gi">+      - --meta_server_addrs=metad0:9559
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>       - --local_ip=storaged1
</span></span><span class="line"><span class="cl">       - --ws_ip=storaged1
</span></span><span class="line"><span class="cl">       - --port=9779
</span></span><span class="line"><span class="cl"><span class="gu">@@ -157,8 +92,8 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       - --minloglevel=0
</span></span><span class="line"><span class="cl">     depends_on:
</span></span><span class="line"><span class="cl">       - metad0
</span></span><span class="line"><span class="cl"><span class="gd">-      - metad1
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - metad2
</span></span></span><span class="line"><span class="cl"><span class="gd"></span>     healthcheck:
</span></span><span class="line"><span class="cl">       test: [&#34;CMD&#34;, &#34;curl&#34;, &#34;-sf&#34;, &#34;http://storaged1:19779/status&#34;]
</span></span><span class="line"><span class="cl">       interval: 30s
</span></span><span class="line"><span class="cl"><span class="gu">@@ -184,7 +119,7 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       USER: root
</span></span><span class="line"><span class="cl">       TZ:   &#34;${TZ}&#34;
</span></span><span class="line"><span class="cl">     command:
</span></span><span class="line"><span class="cl"><span class="gd">-      - --meta_server_addrs=metad0:9559,metad1:9559,metad2:9559
</span></span></span><span class="line"><span class="cl"><span class="gd"></span><span class="gi">+      - --meta_server_addrs=metad0:9559
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>       - --local_ip=storaged2
</span></span><span class="line"><span class="cl">       - --ws_ip=storaged2
</span></span><span class="line"><span class="cl">       - --port=9779
</span></span><span class="line"><span class="cl"><span class="gu">@@ -195,8 +130,8 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       - --minloglevel=0
</span></span><span class="line"><span class="cl">     depends_on:
</span></span><span class="line"><span class="cl">       - metad0
</span></span><span class="line"><span class="cl"><span class="gd">-      - metad1
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - metad2
</span></span></span><span class="line"><span class="cl"><span class="gd"></span>     healthcheck:
</span></span><span class="line"><span class="cl">       test: [&#34;CMD&#34;, &#34;curl&#34;, &#34;-sf&#34;, &#34;http://storaged2:19779/status&#34;]
</span></span><span class="line"><span class="cl">       interval: 30s
</span></span><span class="line"><span class="cl"><span class="gu">@@ -222,17 +157,19 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       USER: root
</span></span><span class="line"><span class="cl">       TZ:   &#34;${TZ}&#34;
</span></span><span class="line"><span class="cl">     command:
</span></span><span class="line"><span class="cl"><span class="gd">-      - --meta_server_addrs=metad0:9559,metad1:9559,metad2:9559
</span></span></span><span class="line"><span class="cl"><span class="gd"></span><span class="gi">+      - --meta_server_addrs=metad0:9559
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>       - --port=9669
</span></span><span class="line"><span class="cl">       - --ws_ip=graphd
</span></span><span class="line"><span class="cl">       - --ws_http_port=19669
</span></span><span class="line"><span class="cl"><span class="gi">+      - --ws_meta_http_port=19559
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>       - --log_dir=/logs
</span></span><span class="line"><span class="cl">       - --v=0
</span></span><span class="line"><span class="cl">       - --minloglevel=0
</span></span><span class="line"><span class="cl">     depends_on:
</span></span><span class="line"><span class="cl">       - metad0
</span></span><span class="line"><span class="cl"><span class="gd">-      - metad1
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - metad2
</span></span></span><span class="line"><span class="cl"><span class="gd"></span>     healthcheck:
</span></span><span class="line"><span class="cl">       test: [&#34;CMD&#34;, &#34;curl&#34;, &#34;-sf&#34;, &#34;http://graphd:19669/status&#34;]
</span></span><span class="line"><span class="cl">       interval: 30s
</span></span><span class="line"><span class="cl"><span class="gu">@@ -257,17 +194,19 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       USER: root
</span></span><span class="line"><span class="cl">       TZ:   &#34;${TZ}&#34;
</span></span><span class="line"><span class="cl">     command:
</span></span><span class="line"><span class="cl"><span class="gd">-      - --meta_server_addrs=metad0:9559,metad1:9559,metad2:9559
</span></span></span><span class="line"><span class="cl"><span class="gd"></span><span class="gi">+      - --meta_server_addrs=metad0:9559
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>       - --port=9669
</span></span><span class="line"><span class="cl">       - --ws_ip=graphd1
</span></span><span class="line"><span class="cl">       - --ws_http_port=19669
</span></span><span class="line"><span class="cl"><span class="gi">+      - --ws_meta_http_port=19559
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>       - --log_dir=/logs
</span></span><span class="line"><span class="cl">       - --v=0
</span></span><span class="line"><span class="cl">       - --minloglevel=0
</span></span><span class="line"><span class="cl">     depends_on:
</span></span><span class="line"><span class="cl">       - metad0
</span></span><span class="line"><span class="cl"><span class="gd">-      - metad1
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - metad2
</span></span></span><span class="line"><span class="cl"><span class="gd"></span>     healthcheck:
</span></span><span class="line"><span class="cl">       test: [&#34;CMD&#34;, &#34;curl&#34;, &#34;-sf&#34;, &#34;http://graphd1:19669/status&#34;]
</span></span><span class="line"><span class="cl">       interval: 30s
</span></span><span class="line"><span class="cl"><span class="gu">@@ -292,17 +231,21 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       USER: root
</span></span><span class="line"><span class="cl">       TZ:   &#34;${TZ}&#34;
</span></span><span class="line"><span class="cl">     command:
</span></span><span class="line"><span class="cl"><span class="gd">-      - --meta_server_addrs=metad0:9559,metad1:9559,metad2:9559
</span></span></span><span class="line"><span class="cl"><span class="gd"></span><span class="gi">+      - --meta_server_addrs=metad0:9559
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>       - --port=9669
</span></span><span class="line"><span class="cl">       - --ws_ip=graphd2
</span></span><span class="line"><span class="cl">       - --ws_http_port=19669
</span></span><span class="line"><span class="cl"><span class="gi">+      - --ws_meta_http_port=19559
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>       - --log_dir=/logs
</span></span><span class="line"><span class="cl">       - --v=0
</span></span><span class="line"><span class="cl">       - --minloglevel=0
</span></span><span class="line"><span class="cl"><span class="gi">+      - --storage_client_timeout_ms=60000
</span></span></span><span class="line"><span class="cl"><span class="gi">+      - --local_config=true
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>     depends_on:
</span></span><span class="line"><span class="cl">       - metad0
</span></span><span class="line"><span class="cl"><span class="gd">-      - metad1
</span></span></span><span class="line"><span class="cl"><span class="gd">-      - metad2
</span></span></span><span class="line"><span class="cl"><span class="gd"></span>     healthcheck:
</span></span><span class="line"><span class="cl">       test: [&#34;CMD&#34;, &#34;curl&#34;, &#34;-sf&#34;, &#34;http://graphd2:19669/status&#34;]
</span></span><span class="line"><span class="cl">       interval: 30s
</span></span><span class="line"><span class="cl"><span class="gu">@@ -323,3 +266,4 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>
</span></span><span class="line"><span class="cl"> networks:
</span></span><span class="line"><span class="cl">   nebula-net:
</span></span><span class="line"><span class="cl"><span class="gi">+    external: true
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="附录二" class="headerLink">
    <a href="#%e9%99%84%e5%bd%95%e4%ba%8c" class="header-mark"></a>7.2 附录二</h3><p><a href="https://github.com/big-data-europe/docker-hadoop" target="_blank" rel="noopener noreferrer">https://github.com/big-data-europe/docker-hadoop</a> 的 <code>docker-compose.yml</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-diff" data-lang="diff"><span class="line"><span class="cl"><span class="gh">diff --git a/docker-compose.yml b/docker-compose.yml
</span></span></span><span class="line"><span class="cl"><span class="gh">index ed40dc6..66ff1f4 100644
</span></span></span><span class="line"><span class="cl"><span class="gh"></span><span class="gd">--- a/docker-compose.yml
</span></span></span><span class="line"><span class="cl"><span class="gd"></span><span class="gi">+++ b/docker-compose.yml
</span></span></span><span class="line"><span class="cl"><span class="gi"></span><span class="gu">@@ -14,6 +14,8 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       - CLUSTER_NAME=test
</span></span><span class="line"><span class="cl">     env_file:
</span></span><span class="line"><span class="cl">       - ./hadoop.env
</span></span><span class="line"><span class="cl"><span class="gi">+    networks:
</span></span></span><span class="line"><span class="cl"><span class="gi">+      - nebula-net
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>
</span></span><span class="line"><span class="cl">   datanode:
</span></span><span class="line"><span class="cl">     image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
</span></span><span class="line"><span class="cl"><span class="gu">@@ -25,6 +27,8 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       SERVICE_PRECONDITION: &#34;namenode:9870&#34;
</span></span><span class="line"><span class="cl">     env_file:
</span></span><span class="line"><span class="cl">       - ./hadoop.env
</span></span><span class="line"><span class="cl"><span class="gi">+    networks:
</span></span></span><span class="line"><span class="cl"><span class="gi">+      - nebula-net
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>
</span></span><span class="line"><span class="cl">   resourcemanager:
</span></span><span class="line"><span class="cl">     image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
</span></span><span class="line"><span class="cl"><span class="gu">@@ -34,6 +38,8 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       SERVICE_PRECONDITION: &#34;namenode:9000 namenode:9870 datanode:9864&#34;
</span></span><span class="line"><span class="cl">     env_file:
</span></span><span class="line"><span class="cl">       - ./hadoop.env
</span></span><span class="line"><span class="cl"><span class="gi">+    networks:
</span></span></span><span class="line"><span class="cl"><span class="gi">+      - nebula-net
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>
</span></span><span class="line"><span class="cl">   nodemanager1:
</span></span><span class="line"><span class="cl">     image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
</span></span><span class="line"><span class="cl"><span class="gu">@@ -43,6 +49,8 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       SERVICE_PRECONDITION: &#34;namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088&#34;
</span></span><span class="line"><span class="cl">     env_file:
</span></span><span class="line"><span class="cl">       - ./hadoop.env
</span></span><span class="line"><span class="cl"><span class="gi">+    networks:
</span></span></span><span class="line"><span class="cl"><span class="gi">+      - nebula-net
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>
</span></span><span class="line"><span class="cl">   historyserver:
</span></span><span class="line"><span class="cl">     image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
</span></span><span class="line"><span class="cl"><span class="gu">@@ -54,8 +62,14 @@ services:
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>       - hadoop_historyserver:/hadoop/yarn/timeline
</span></span><span class="line"><span class="cl">     env_file:
</span></span><span class="line"><span class="cl">       - ./hadoop.env
</span></span><span class="line"><span class="cl"><span class="gi">+    networks:
</span></span></span><span class="line"><span class="cl"><span class="gi">+      - nebula-net
</span></span></span><span class="line"><span class="cl"><span class="gi"></span>
</span></span><span class="line"><span class="cl"> volumes:
</span></span><span class="line"><span class="cl">   hadoop_namenode:
</span></span><span class="line"><span class="cl">   hadoop_datanode:
</span></span><span class="line"><span class="cl">   hadoop_historyserver:
</span></span><span class="line"><span class="cl"><span class="gi">+
</span></span></span><span class="line"><span class="cl"><span class="gi">+networks:
</span></span></span><span class="line"><span class="cl"><span class="gi">+  nebula-net:
</span></span></span><span class="line"><span class="cl"><span class="gi">+    external: true
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="附录三" class="headerLink">
    <a href="#%e9%99%84%e5%bd%95%e4%b8%89" class="header-mark"></a>7.3 附录三</h3><p><code>nebula-exchange-sst.conf</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span><span class="lnt">89
</span><span class="lnt">90
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-toml" data-lang="toml"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="c"># Spark relation config</span>
</span></span><span class="line"><span class="cl">  <span class="nx">spark</span><span class="err">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">app</span><span class="err">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">name</span><span class="err">:</span> <span class="nx">Nebula</span> <span class="nx">Exchange</span> <span class="mf">2.1</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nx">master</span><span class="err">:</span><span class="nx">local</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nx">driver</span><span class="err">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">cores</span><span class="err">:</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">      <span class="nx">maxResultSize</span><span class="err">:</span> <span class="mi">1</span><span class="nx">G</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nx">executor</span><span class="err">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">memory</span><span class="err">:</span><span class="mi">1</span><span class="nx">G</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nx">cores</span><span class="err">:</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">max</span><span class="err">:</span> <span class="mi">16</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c"># Nebula Graph relation config</span>
</span></span><span class="line"><span class="cl">  <span class="nx">nebula</span><span class="err">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">address</span><span class="err">:</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">graph</span><span class="err">:</span><span class="p">[</span><span class="s2">&#34;192.168.8.128:9669&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">      <span class="nx">meta</span><span class="err">:</span><span class="p">[</span><span class="s2">&#34;192.168.8.128:49377&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="nx">user</span><span class="err">:</span> <span class="nx">root</span>
</span></span><span class="line"><span class="cl">    <span class="nx">pswd</span><span class="err">:</span> <span class="nx">nebula</span>
</span></span><span class="line"><span class="cl">    <span class="nx">space</span><span class="err">:</span> <span class="nx">sst</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># parameters for SST import, not required</span>
</span></span><span class="line"><span class="cl">    <span class="nx">path</span><span class="err">:</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">local</span><span class="err">:</span><span class="s2">&#34;/tmp&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="nx">remote</span><span class="err">:</span><span class="s2">&#34;/sst&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="nx">hdfs</span><span class="p">.</span><span class="nx">namenode</span><span class="err">:</span> <span class="s2">&#34;hdfs://192.168.8.128:9000&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># nebula client connection parameters</span>
</span></span><span class="line"><span class="cl">    <span class="nx">connection</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="c"># socket connect &amp; execute timeout, unit: millisecond</span>
</span></span><span class="line"><span class="cl">      <span class="nx">timeout</span><span class="err">:</span> <span class="mi">30000</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nx">error</span><span class="err">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="c"># max number of failures, if the number of failures is bigger than max, then exit the application.</span>
</span></span><span class="line"><span class="cl">      <span class="nx">max</span><span class="err">:</span> <span class="mi">32</span>
</span></span><span class="line"><span class="cl">      <span class="c"># failed import job will be recorded in output path</span>
</span></span><span class="line"><span class="cl">      <span class="nx">output</span><span class="err">:</span> <span class="err">/</span><span class="nx">tmp</span><span class="err">/</span><span class="nx">errors</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># use google&#39;s RateLimiter to limit the requests send to NebulaGraph</span>
</span></span><span class="line"><span class="cl">    <span class="nx">rate</span><span class="err">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="c"># the stable throughput of RateLimiter</span>
</span></span><span class="line"><span class="cl">      <span class="nx">limit</span><span class="err">:</span> <span class="mi">1024</span>
</span></span><span class="line"><span class="cl">      <span class="c"># Acquires a permit from RateLimiter, unit: MILLISECONDS</span>
</span></span><span class="line"><span class="cl">      <span class="c"># if it can&#39;t be obtained within the specified timeout, then give up the request.</span>
</span></span><span class="line"><span class="cl">      <span class="nx">timeout</span><span class="err">:</span> <span class="mi">1000</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c"># Processing tags</span>
</span></span><span class="line"><span class="cl">  <span class="c"># There are tag config examples for different dataSources.</span>
</span></span><span class="line"><span class="cl">  <span class="nx">tags</span><span class="err">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># HDFS csv</span>
</span></span><span class="line"><span class="cl">    <span class="c"># Import mode is sst, just change type.sink to client if you want to use client import mode.</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">name</span><span class="err">:</span> <span class="nx">player</span>
</span></span><span class="line"><span class="cl">      <span class="nx">type</span><span class="err">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">source</span><span class="err">:</span> <span class="nx">csv</span>
</span></span><span class="line"><span class="cl">        <span class="nx">sink</span><span class="err">:</span> <span class="nx">sst</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="nx">path</span><span class="err">:</span> <span class="s2">&#34;file:///root/player.csv&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="c"># if your csv file has no header, then use _c0,_c1,_c2,.. to indicate fields</span>
</span></span><span class="line"><span class="cl">      <span class="nx">fields</span><span class="err">:</span> <span class="p">[</span><span class="nx">_c1</span><span class="p">,</span> <span class="nx">_c2</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">      <span class="nx">nebula</span><span class="p">.</span><span class="nx">fields</span><span class="err">:</span> <span class="p">[</span><span class="nx">name</span><span class="p">,</span> <span class="nx">age</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">      <span class="nx">vertex</span><span class="err">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">field</span><span class="err">:</span><span class="nx">_c0</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="nx">separator</span><span class="err">:</span> <span class="s2">&#34;,&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="nx">header</span><span class="err">:</span> <span class="kc">false</span>
</span></span><span class="line"><span class="cl">      <span class="nx">batch</span><span class="err">:</span> <span class="mi">256</span>
</span></span><span class="line"><span class="cl">      <span class="nx">partition</span><span class="err">:</span> <span class="mi">32</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item></channel>
</rss>
