<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>nebula-up - Tag - siwei.io</title>
        <link>https://siwei.io/en/tags/nebula-up/</link>
        <description>nebula-up - Tag - siwei.io</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>weyl.gu@gmail.com (Wey Gu)</managingEditor>
            <webMaster>weyl.gu@gmail.com (Wey Gu)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 26 Apr 2021 11:11:04 &#43;0800</lastBuildDate><atom:link href="https://siwei.io/en/tags/nebula-up/" rel="self" type="application/rss+xml" /><item>
    <title>Nebula-Up, oneliner installer for Nebula Graph Playground</title>
    <link>https://siwei.io/en/nebula-up/</link>
    <pubDate>Mon, 26 Apr 2021 11:11:04 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/en/nebula-up/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/en/nebula-up/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p>Update: the All-in-one mode is introduced! Check <a href="#all-in-one-mode" rel="">here</a> and try it!</p>
</blockquote>
<p><a href="https://asciinema.org/a/407151" title="Nebula Up Demo" target="_blank" rel="noopener noreferrer"><a class="lightgallery" href="/en/nebula-up/nebula-up-demo.svg" title="nebula-up demo" data-thumbnail="/en/nebula-up/nebula-up-demo.svg">
        
    </a></a></p>
<p><code>Nebula-Up</code> is PoC utility to enable developer to bootstrap an nebula-graph cluster with nebula-graph-studio(Web UI) + nebula-graph-console(Command UI) ready out of box in an oneliner run. All required packages will handled with <code>nebula-up</code> as well, including Docker on Linux(Ubuntu/CentOS), Docker Desktop on macOS(including both Intel and M1 chip based), and Docker Desktop Windows.</p>
<p>Also, it&rsquo;s optimized to leverage China Repo Mirrors(docker, brew, gitee, etc&hellip;) in case needed enable a smooth deployment for both Mainland China users and others.</p>
<p>macOS and Linux with Shell:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">curl -fsSL nebula-up.siwei.io/install.sh <span class="p">|</span> bash
</span></span></code></pre></td></tr></table>
</div>
</div><p><a class="lightgallery" href="/en/nebula-up/nebula-up-demo-shell.png" title="nebula-up-demo-shell" data-thumbnail="/en/nebula-up/nebula-up-demo-shell.png">
        
    </a></p>
<p>Note: you could specify the version of Nebula Graph like:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">curl -fsSL nebula-up.siwei.io/install.sh <span class="p">|</span> bash -s -- v2.6
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="all-in-one-mode" class="headerLink">
    <a href="#all-in-one-mode" class="header-mark"></a>1 All-in-one mode</h2><p>With all-in-one mode, you could play with many Nebula Tools in one command, too:</p>
<p><a class="lightgallery" href="/en/nebula-up/nebula-up-all-in-one.svg" title="/en/nebula-up/nebula-up-all-in-one.svg" data-thumbnail="/en/nebula-up/nebula-up-all-in-one.svg">
        
    </a></p>
<p>Supported tools:</p>
<ul>
<li><i class="far fa-check-square fa-fw"></i> Nebula Dashboard</li>
<li><i class="far fa-check-square fa-fw"></i> Nebula Graph Studio</li>
<li><i class="far fa-check-square fa-fw"></i> Nebula Graph Console</li>
<li><i class="far fa-check-square fa-fw"></i> Nebula BR(backup &amp; restore)</li>
<li><i class="far fa-check-square fa-fw"></i> Nebula Graph Spark utils
<ul>
<li><i class="far fa-check-square fa-fw"></i> Nebula Graph Spark Connector/PySpark</li>
<li><i class="far fa-check-square fa-fw"></i> Nebula Graph Algorithm</li>
<li><i class="far fa-check-square fa-fw"></i> Nebula Graph Exchange</li>
</ul>
</li>
<li><i class="far fa-square fa-fw"></i> Nebula Graph Importer</li>
<li><i class="far fa-square fa-fw"></i> Nebula Graph Fulltext Search</li>
<li><i class="far fa-square fa-fw"></i> Nebula Bench</li>
</ul>
<h3 id="install-all-in-one" class="headerLink">
    <a href="#install-all-in-one" class="header-mark"></a>1.1 Install all in one</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Install Nebula Core with all-in-one mode</span>
</span></span><span class="line"><span class="cl">curl -fsSL nebula-up.siwei.io/all-in-one.sh <span class="p">|</span> bash
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="install-nebula-core-and-one-of-the-coponent" class="headerLink">
    <a href="#install-nebula-core-and-one-of-the-coponent" class="header-mark"></a>1.2 Install Nebula Core and One of the coponent:</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Install Core with Backup and Restore with MinIO</span>
</span></span><span class="line"><span class="cl">curl -fsSL nebula-up.siwei.io/all-in-one.sh <span class="p">|</span> bash -s -- v3 br
</span></span><span class="line"><span class="cl"><span class="c1"># Install Core with Spark Connector, Nebula Algorithm, Nebula Exchange</span>
</span></span><span class="line"><span class="cl">curl -fsSL nebula-up.siwei.io/all-in-one.sh <span class="p">|</span> bash -s -- v3 spark
</span></span><span class="line"><span class="cl"><span class="c1"># Install Core with Dashboard</span>
</span></span><span class="line"><span class="cl">curl -fsSL nebula-up.siwei.io/all-in-one.sh <span class="p">|</span> bash -s -- v3 dashboard
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="how-to-play-with-all-in-one-mode" class="headerLink">
    <a href="#how-to-play-with-all-in-one-mode" class="header-mark"></a>1.3 How to play with all-in-one mode:</h3><h4 id="console-and-basketballplayer-dataset-loading" class="headerLink">
    <a href="#console-and-basketballplayer-dataset-loading" class="header-mark"></a>1.3.1 Console and Basketballplayer Dataset Loading</h4><p>Then you could call Nebula Console like:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Connect to nebula with console</span>
</span></span><span class="line"><span class="cl">~/.nebula-up/console.sh
</span></span><span class="line"><span class="cl"><span class="c1"># Execute queryies like</span>
</span></span><span class="line"><span class="cl">~/.nebula-up/console.sh -e <span class="s2">&#34;SHOW HOSTS&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Load the sample dataset</span>
</span></span><span class="line"><span class="cl">~/.nebula-up/load-basketballplayer-dataset.sh
</span></span><span class="line"><span class="cl"><span class="c1"># Make a Graph Query the sample dataset</span>
</span></span><span class="line"><span class="cl">~/.nebula-up/console.sh -e <span class="s1">&#39;USE basketballplayer; FIND ALL PATH FROM &#34;player100&#34; TO &#34;team204&#34; OVER * WHERE follow.degree is EMPTY or follow.degree &gt;=0 YIELD path AS p;&#39;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="monitor-the-whole-cluster-with-nebula-dashboard" class="headerLink">
    <a href="#monitor-the-whole-cluster-with-nebula-dashboard" class="header-mark"></a>1.3.2 Monitor the whole cluster with Nebula Dashboard</h4><p>Visit http://127.0.0.1:7003 with user: <code>root</code>, password: <code>nebula</code>.</p>
<blockquote>
<p>Note, thanks to the sponsorship of Microsoft, we have a demo site of Nebula-UP on Azure: you could visit the dashboard here: <a href="http://nebula-demo.siwei.io:7003" target="_blank" rel="noopener noreferrer">http://nebula-demo.siwei.io:7003</a> .</p>
</blockquote>
<h4 id="access-nebula-graph-studio" class="headerLink">
    <a href="#access-nebula-graph-studio" class="header-mark"></a>1.3.3 Access Nebula Graph Studio</h4><p>Visit http://127.0.0.1:7001 with user: <code>root</code>, password: <code>nebula</code>, host: <code>graphd:9669</code>(for non-all-in-one case, this should be <code>&lt;host-ip&gt;:9669</code>).</p>
<blockquote>
<p>Note, thanks to the sponsorship of Microsoft, we have a demo site of Nebula-UP on Azure: you could visit the studio here: <a href="http://nebula-demo.siwei.io:7001" target="_blank" rel="noopener noreferrer">http://nebula-demo.siwei.io:7001</a> .</p>
</blockquote>
<h4 id="query-data-with-nebula-spark-connector-in-pyspark-shell" class="headerLink">
    <a href="#query-data-with-nebula-spark-connector-in-pyspark-shell" class="header-mark"></a>1.3.4 Query Data with Nebula Spark Connector in PySpark Shell</h4><p>Or play in PySpark like:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">~/.nebula-up/nebula-pyspark.sh
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># call Nebula Spark Connector Reader</span>
</span></span><span class="line"><span class="cl"><span class="nv">df</span> <span class="o">=</span> spark.read.format<span class="o">(</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;com.vesoft.nebula.connector.NebulaDataSource&#34;</span><span class="o">)</span>.option<span class="o">(</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;type&#34;</span>, <span class="s2">&#34;vertex&#34;</span><span class="o">)</span>.option<span class="o">(</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;spaceName&#34;</span>, <span class="s2">&#34;basketballplayer&#34;</span><span class="o">)</span>.option<span class="o">(</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;label&#34;</span>, <span class="s2">&#34;player&#34;</span><span class="o">)</span>.option<span class="o">(</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;returnCols&#34;</span>, <span class="s2">&#34;name,age&#34;</span><span class="o">)</span>.option<span class="o">(</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;metaAddress&#34;</span>, <span class="s2">&#34;metad0:9559&#34;</span><span class="o">)</span>.option<span class="o">(</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;partitionNumber&#34;</span>, 1<span class="o">)</span>.load<span class="o">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># show the dataframe with limit 2</span>
</span></span><span class="line"><span class="cl">df.show<span class="o">(</span><span class="nv">n</span><span class="o">=</span>2<span class="o">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>The output may look like:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">      <span class="n">____</span>              <span class="n">__</span>
</span></span><span class="line"><span class="cl">     <span class="o">/</span> <span class="n">__</span><span class="o">/</span><span class="n">__</span>  <span class="n">___</span> <span class="n">_____</span><span class="o">/</span> <span class="o">/</span><span class="n">__</span>
</span></span><span class="line"><span class="cl">    <span class="n">_</span>\ \<span class="o">/</span> <span class="n">_</span> \<span class="o">/</span> <span class="n">_</span> <span class="err">`</span><span class="o">/</span> <span class="n">__</span><span class="o">/</span>  <span class="s1">&#39;_/</span>
</span></span><span class="line"><span class="cl">   <span class="o">/</span><span class="n">__</span> <span class="o">/</span> <span class="o">.</span><span class="n">__</span><span class="o">/</span>\<span class="n">_</span><span class="p">,</span><span class="n">_</span><span class="o">/</span><span class="n">_</span><span class="o">/</span> <span class="o">/</span><span class="n">_</span><span class="o">/</span>\<span class="n">_</span>\   <span class="n">version</span> <span class="mf">2.4.5</span>
</span></span><span class="line"><span class="cl">      <span class="o">/</span><span class="n">_</span><span class="o">/</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Using</span> <span class="n">Python</span> <span class="n">version</span> <span class="mf">2.7.16</span> <span class="p">(</span><span class="n">default</span><span class="p">,</span> <span class="n">Jan</span> <span class="mi">14</span> <span class="mi">2020</span> <span class="mi">07</span><span class="p">:</span><span class="mi">22</span><span class="p">:</span><span class="mi">06</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">SparkSession</span> <span class="n">available</span> <span class="k">as</span> <span class="s1">&#39;spark&#39;</span><span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="o">&gt;&gt;&gt;</span> <span class="n">df</span> <span class="o">=</span> <span class="n">spark</span><span class="o">.</span><span class="n">read</span><span class="o">.</span><span class="n">format</span><span class="p">(</span>
</span></span><span class="line"><span class="cl"><span class="o">...</span>   <span class="s2">&#34;com.vesoft.nebula.connector.NebulaDataSource&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">option</span><span class="p">(</span>
</span></span><span class="line"><span class="cl"><span class="o">...</span>     <span class="s2">&#34;type&#34;</span><span class="p">,</span> <span class="s2">&#34;vertex&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">option</span><span class="p">(</span>
</span></span><span class="line"><span class="cl"><span class="o">...</span>     <span class="s2">&#34;spaceName&#34;</span><span class="p">,</span> <span class="s2">&#34;basketballplayer&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">option</span><span class="p">(</span>
</span></span><span class="line"><span class="cl"><span class="o">...</span>     <span class="s2">&#34;label&#34;</span><span class="p">,</span> <span class="s2">&#34;player&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">option</span><span class="p">(</span>
</span></span><span class="line"><span class="cl"><span class="o">...</span>     <span class="s2">&#34;returnCols&#34;</span><span class="p">,</span> <span class="s2">&#34;name,age&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">option</span><span class="p">(</span>
</span></span><span class="line"><span class="cl"><span class="o">...</span>     <span class="s2">&#34;metaAddress&#34;</span><span class="p">,</span> <span class="s2">&#34;metad0:9559&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">option</span><span class="p">(</span>
</span></span><span class="line"><span class="cl"><span class="o">...</span>     <span class="s2">&#34;partitionNumber&#34;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">load</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="o">.</span><span class="n">show</span><span class="p">(</span><span class="n">n</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="o">+---------+--------------+---+</span>
</span></span><span class="line"><span class="cl"><span class="o">|</span><span class="n">_vertexId</span><span class="o">|</span>          <span class="n">name</span><span class="o">|</span><span class="n">age</span><span class="o">|</span>
</span></span><span class="line"><span class="cl"><span class="o">+---------+--------------+---+</span>
</span></span><span class="line"><span class="cl"><span class="o">|</span><span class="n">player105</span><span class="o">|</span>   <span class="n">Danny</span> <span class="n">Green</span><span class="o">|</span> <span class="mi">31</span><span class="o">|</span>
</span></span><span class="line"><span class="cl"><span class="o">|</span><span class="n">player109</span><span class="o">|</span><span class="n">Tiago</span> <span class="n">Splitter</span><span class="o">|</span> <span class="mi">34</span><span class="o">|</span>
</span></span><span class="line"><span class="cl"><span class="o">+---------+--------------+---+</span>
</span></span><span class="line"><span class="cl"><span class="n">only</span> <span class="n">showing</span> <span class="n">top</span> <span class="mi">2</span> <span class="n">rows</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="run-nebula-exchange" class="headerLink">
    <a href="#run-nebula-exchange" class="header-mark"></a>1.3.5 Run Nebula Exchange</h4><p>Or run an example Nebula Exchange job to import data from CSV file:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">~/.nebula-up/nebula-exchange-example.sh
</span></span></code></pre></td></tr></table>
</div>
</div><p>You could check the example configuration file in <code>~/.nebula-up/nebula-up/spark/exchange.conf</code></p>
<h4 id="run-nebula-graph-algorithm" class="headerLink">
    <a href="#run-nebula-graph-algorithm" class="header-mark"></a>1.3.6 Run Nebula Graph Algorithm</h4><blockquote>
<p>Reference: <a href="https://github.com/wey-gu/nebula-livejournal" target="_blank" rel="noopener noreferrer">https://github.com/wey-gu/nebula-livejournal</a></p>
</blockquote>
<p>Load LiveJournal dataset with Nebula Importer:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">~/.nebula-up/load-LiveJournal-dataset.sh
</span></span></code></pre></td></tr></table>
</div>
</div><p>Run Nebula Algorithm like:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">~/.nebula-up/nebula-algo-pagerank-example.sh
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="try-backup-and-restore-with-minio-as-storage" class="headerLink">
    <a href="#try-backup-and-restore-with-minio-as-storage" class="header-mark"></a>1.3.7 Try Backup and Restore with MinIO as Storage</h4><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Create a full backup to MinIO(Be sure to run load-basketballplayer-dataset.sh before doing so)</span>
</span></span><span class="line"><span class="cl">~/.nebula-up/nebula-br-backup-full.sh
</span></span><span class="line"><span class="cl"><span class="c1"># Show all backups</span>
</span></span><span class="line"><span class="cl">~/.nebula-up/nebula-br-show.sh
</span></span><span class="line"><span class="cl"><span class="c1"># Restore to a backup named BACKUP_2022_05_08_11_38_08</span>
</span></span><span class="line"><span class="cl">~/.nebula-up/nebula-br-restore-full.sh BACKUP_2022_05_08_11_38_08
</span></span></code></pre></td></tr></table>
</div>
</div><p>Note, you could also browser files in MinIO with from http://127.0.0.1:9001 with user: <code>minioadmin</code>, password: <code>minioadmin</code>.</p>
<blockquote>
<p>Note, thanks to the sponsorship of Microsoft, we have a demo site of Nebula-UP on Azure: you could visit the MinIO site here: <a href="http://nebula-demo.siwei.io:9001" target="_blank" rel="noopener noreferrer">http://nebula-demo.siwei.io:9001</a> .</p>
</blockquote>
<hr>
<p><del>Windows with PowerShell</del>(Working In Progress):</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="nb">iwr nebula-up</span><span class="p">.</span><span class="py">siwei</span><span class="p">.</span><span class="n">io</span><span class="p">/</span><span class="n">install</span><span class="p">.</span><span class="py">ps1</span> <span class="n">-useb</span> <span class="p">|</span> <span class="nb">iex
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>TBD:</p>
<ul>
<li><i class="far fa-square fa-fw"></i> Finished Windows(Docker Desktop instead of the WSL 1&amp;2 in initial phase) part, leveraging chocolatey package manager as homebrew was used in macOS</li>
<li><i class="far fa-square fa-fw"></i> Fully optimized for CN users, for now, git/apt/yum repo were not optimised, newly installed docker repo, brew repo were automatically optimised for CN internet access</li>
<li><i class="far fa-square fa-fw"></i> Packaging similar content into homebrew/chocolatey?</li>
<li><i class="far fa-square fa-fw"></i> CI/UT</li>
</ul>]]></description>
</item></channel>
</rss>
