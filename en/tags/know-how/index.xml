<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Know How - Tag - siwei.io</title>
        <link>https://siwei.io/en/tags/know-how/</link>
        <description>Know How - Tag - siwei.io</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>weyl.gu@gmail.com (Wey Gu)</managingEditor>
            <webMaster>weyl.gu@gmail.com (Wey Gu)</webMaster><lastBuildDate>Sat, 18 Sep 2021 13:53:20 &#43;0800</lastBuildDate><atom:link href="https://siwei.io/en/tags/know-how/" rel="self" type="application/rss+xml" /><item>
    <title>Nebula Siwi: A Dialog System With Graph Database Backed Knowledge Graph</title>
    <link>https://siwei.io/en/nebula-siwi/</link>
    <pubDate>Sat, 18 Sep 2021 13:53:20 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/en/nebula-siwi/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/en/nebula-siwi/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p>a PoC of Dialog System With Graph Database Backed Knowledge Graph.</p>
</blockquote>
<p>Related GitHub Repo: <a href="https://github.com/wey-gu/nebula-siwi/" target="_blank" rel="noopener noreferrer">https://github.com/wey-gu/nebula-siwi/</a></p>
<blockquote>
<p>I created the Katacoda Interactive Env for this project 👉🏻 <a href="https://siwei.io/cources/" target="_blank" rel="noopener noreferrer">https://siwei.io/cources/</a></p>
</blockquote>
<blockquote>
<p>Now you can play with the data on Nebula Playground: <a href="https://nebula-graph.io/demo/" target="_blank" rel="noopener noreferrer">https://nebula-graph.io/demo/</a></p>
</blockquote>
<h1 id="siwi-the-voice-assistant" class="headerLink">
    <a href="#siwi-the-voice-assistant" class="header-mark"></a>Siwi the voice assistant</h1><p>Siwi (/ˈsɪwi/) is a PoC of Dialog System With Graph Database Backed Knowledge Graph.</p>
<p>For now, it&rsquo;s a demo for task-driven(not general purpose) dialog bots with KG(Knowledge Graph) leveraging Nebula Graph with the minimal/sample dataset from <a href="https://docs.nebula-graph.io/2.0.1/3.ngql-guide/1.nGQL-overview/1.overview/#basketballplayer" target="_blank" rel="noopener noreferrer">Nebula Graph Manual</a>/ <a href="https://docs.nebula-graph.com.cn/2.0.1/3.ngql-guide/1.nGQL-overview/1.overview/#basketballplayer" target="_blank" rel="noopener noreferrer">NG中文手册</a>.</p>
<blockquote>
<p>Tips: Now you can play with the graph online without installing yourself!</p>
<p><a href="https://playground.nebula-graph.io" target="_blank" rel="noopener noreferrer">Nebula Playground</a> | <a href="https://playground.nebula-graph.com.cn" target="_blank" rel="noopener noreferrer">Nebula Playground - China Mainland</a></p>
</blockquote>
<p>Supported queries:</p>
<p><code>relation</code>:</p>
<ul>
<li>What is the relationship between Yao Ming and Lakers?</li>
<li>How does Yao Ming and Lakers connected?</li>
</ul>
<p><code>serving</code>:</p>
<ul>
<li>Which team had Yao Ming served?</li>
</ul>
<p><code>friendship</code>:</p>
<ul>
<li>Whom does Tim Duncan follow?</li>
<li>Who are Yao Ming&rsquo;s friends?</li>
</ul>
<h2 id="deploy-and-try" class="headerLink">
    <a href="#deploy-and-try" class="header-mark"></a>1 Deploy and Try</h2><p>TBD (leveraging docker and nebula-up)</p>
<h2 id="how-does-it-work" class="headerLink">
    <a href="#how-does-it-work" class="header-mark"></a>2 How does it work?</h2><p>This is one of the most naive pipeline for a specific domain/ single purpose chat bot built on a Knowledge Graph.</p>
<h3 id="backend" class="headerLink">
    <a href="#backend" class="header-mark"></a>2.1 Backend</h3><p><a class="lightgallery" href="./backend-demo.webp" title="backend-demo" data-thumbnail="./backend-demo.webp">
        
    </a></p>
<p>The Backend(Siwi API) is a Flask based API server:</p>
<ul>
<li>
<p>Flask API server takes questions in HTTP POST, and calls the bot API.</p>
</li>
<li>
<p>In bot API part there are classfier(Symentic Parsing, Intent Matching, Slot Filling), and question actors(Call corresponding actions to query Knowledge Graph with intents and slots).</p>
</li>
<li>
<p>Knowledge Graph is built on an Open-Source Graph Database: <a href="https://github.com/vesoft-inc/nebula-graph" target="_blank" rel="noopener noreferrer">Nebula Graph</a></p>
</li>
</ul>
<h3 id="frontend" class="headerLink">
    <a href="#frontend" class="header-mark"></a>2.2 Frontend</h3><p><a class="lightgallery" href="./demo.webp" title="demo" data-thumbnail="./demo.webp">
        
    </a></p>
<p>The Frontend is a VueJS Single Page Applicaiton(SPA):</p>
<ul>
<li>I reused a Vue Bot UI to showcase a chat window in this human-agent interaction, typing is supported.</li>
<li>In addtion, leverating Chrome&rsquo;s <a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API/Using_the_Web_Speech_API" target="_blank" rel="noopener noreferrer">Web Speech API</a>, a button to listen to human voice is introduced</li>
</ul>
<h3 id="a-query-flow" class="headerLink">
    <a href="#a-query-flow" class="header-mark"></a>2.3 A Query Flow</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">┌────────────────┬──────────────────────────────────────┐
</span></span><span class="line"><span class="cl">│                │                                      │
</span></span><span class="line"><span class="cl">│                │  Speech                              │
</span></span><span class="line"><span class="cl">│     ┌──────────▼──────────┐                           │
</span></span><span class="line"><span class="cl">│     │            Frontend │   Siwi, /ˈsɪwi/           │
</span></span><span class="line"><span class="cl">│     │ Web_Speech_API      │   A PoC of                │
</span></span><span class="line"><span class="cl">│     │                     │   Dialog System           │
</span></span><span class="line"><span class="cl">│     │ Vue.JS              │   With Graph Database     │
</span></span><span class="line"><span class="cl">│     │                     │   Backed Knowledge Graph  │
</span></span><span class="line"><span class="cl">│     └──────────┬──────────┘                           │
</span></span><span class="line"><span class="cl">│                │  Sentence                            │
</span></span><span class="line"><span class="cl">│                │                                      │
</span></span><span class="line"><span class="cl">│   ┌────────────┼──────────────────────────────┐       │
</span></span><span class="line"><span class="cl">│   │            │                              │       │
</span></span><span class="line"><span class="cl">│   │            │              Backend         │       │
</span></span><span class="line"><span class="cl">│   │ ┌──────────▼──────────┐                   │       │
</span></span><span class="line"><span class="cl">│   │ │ Web API, Flask      │   ./app/          │       │
</span></span><span class="line"><span class="cl">│   │ └──────────┬──────────┘                   │       │
</span></span><span class="line"><span class="cl">│   │            │  Sentence    ./bot/          │       │
</span></span><span class="line"><span class="cl">│   │ ┌──────────▼──────────┐                   │       │
</span></span><span class="line"><span class="cl">│   │ │                     │                   │       │
</span></span><span class="line"><span class="cl">│   │ │ Intent matching,    │   ./bot/classifier│       │
</span></span><span class="line"><span class="cl">│   │ │ Symentic Processing │                   │       │
</span></span><span class="line"><span class="cl">│   │ │                     │                   │       │
</span></span><span class="line"><span class="cl">│   │ └──────────┬──────────┘                   │       │
</span></span><span class="line"><span class="cl">│   │            │  Intent, Entities            │       │
</span></span><span class="line"><span class="cl">│   │ ┌──────────▼──────────┐                   │       │
</span></span><span class="line"><span class="cl">│   │ │                     │                   │       │
</span></span><span class="line"><span class="cl">│   │ │ Intent Actor        │   ./bot/actions   │       │
</span></span><span class="line"><span class="cl">│   │ │                     │                   │       │
</span></span><span class="line"><span class="cl">│   └─┴──────────┬──────────┴───────────────────┘       │
</span></span><span class="line"><span class="cl">│                │  Graph Query                         │
</span></span><span class="line"><span class="cl">│     ┌──────────▼──────────┐                           │
</span></span><span class="line"><span class="cl">│     │                     │                           │
</span></span><span class="line"><span class="cl">│     │ Graph Database      │    Nebula Graph           │
</span></span><span class="line"><span class="cl">│     │                     │                           │
</span></span><span class="line"><span class="cl">│     └─────────────────────┘                           │
</span></span><span class="line"><span class="cl">│                                                       │
</span></span><span class="line"><span class="cl">│                                                       │
</span></span><span class="line"><span class="cl">│                                                       │
</span></span><span class="line"><span class="cl">└───────────────────────────────────────────────────────┘
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="source-code-tree" class="headerLink">
    <a href="#source-code-tree" class="header-mark"></a>2.4 Source Code Tree</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">.
</span></span><span class="line"><span class="cl">├── README.md
</span></span><span class="line"><span class="cl">├── src
</span></span><span class="line"><span class="cl">│   ├── siwi                        <span class="c1"># Siwi-API Backend</span>
</span></span><span class="line"><span class="cl">│   │   ├── app                     <span class="c1"># Web Server, take HTTP requests and calls Bot API</span>
</span></span><span class="line"><span class="cl">│   │   └── bot                     <span class="c1"># Bot API</span>
</span></span><span class="line"><span class="cl">│   │       ├── actions             <span class="c1"># Take Intent, Slots, Query Knowledge Graph here</span>
</span></span><span class="line"><span class="cl">│   │       ├── bot                 <span class="c1"># Entrypoint of the Bot API</span>
</span></span><span class="line"><span class="cl">│   │       ├── classifier          <span class="c1"># Symentic Parsing, Intent Matching, Slot Filling</span>
</span></span><span class="line"><span class="cl">│   │       └── <span class="nb">test</span>                <span class="c1"># Example Data Source as equivalent/mocked module</span>
</span></span><span class="line"><span class="cl">│   └── siwi_frontend               <span class="c1"># Browser End</span>
</span></span><span class="line"><span class="cl">│       ├── README.md
</span></span><span class="line"><span class="cl">│       ├── package.json
</span></span><span class="line"><span class="cl">│       └── src
</span></span><span class="line"><span class="cl">│           ├── App.vue             <span class="c1"># Listening to user and pass Questions to Siwi-API</span>
</span></span><span class="line"><span class="cl">│           └── main.js
</span></span><span class="line"><span class="cl">└── wsgi.py
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="manually-run-components" class="headerLink">
    <a href="#manually-run-components" class="header-mark"></a>3 Manually Run Components</h2><h3 id="backend-1" class="headerLink">
    <a href="#backend-1" class="header-mark"></a>3.1 Backend</h3><p>Install and run.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Install siwi backend</span>
</span></span><span class="line"><span class="cl">python3 -m build
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Configure Nebula Graph Endpoint</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">NG_ENDPOINTS</span><span class="o">=</span>127.0.0.1:9669
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Run Backend API server</span>
</span></span><span class="line"><span class="cl">gunicorn --bind :5000 wsgi --workers <span class="m">1</span> --threads <span class="m">1</span> --timeout <span class="m">60</span>
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>For OpenFunction/ KNative</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker build -t weygu/siwi-api .
</span></span><span class="line"><span class="cl">docker run --rm --name siwi-api <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>     --env<span class="o">=</span><span class="nv">PORT</span><span class="o">=</span><span class="m">5000</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>     --env<span class="o">=</span><span class="nv">NG_ENDPOINTS</span><span class="o">=</span>127.0.0.1:9669 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>     --net<span class="o">=</span>host <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>     weygu/siwi-api
</span></span></code></pre></td></tr></table>
</div>
</div><p>Try it out Web API:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl --header <span class="s2">&#34;Content-Type: application/json&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>       --request POST <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>       --data <span class="s1">&#39;{&#34;question&#34;: &#34;What is the relationship between Yao Ming and Lakers?&#34;}&#39;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>       http://192.168.8.128:5000/query <span class="p">|</span> jq
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;answer&#34;</span>: <span class="s2">&#34;There are at least 23 relations between Yao Ming and Lakers, one relation path is: Yao Ming follows Shaquille O&#39;Neal serves Lakers.&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Call Bot Python API:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">nebula2.gclient.net</span> <span class="kn">import</span> <span class="n">ConnectionPool</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">nebula2.Config</span> <span class="kn">import</span> <span class="n">Config</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># define a config</span>
</span></span><span class="line"><span class="cl"><span class="n">config</span> <span class="o">=</span> <span class="n">Config</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">config</span><span class="o">.</span><span class="n">max_connection_pool_size</span> <span class="o">=</span> <span class="mi">10</span>
</span></span><span class="line"><span class="cl"><span class="c1"># init connection pool</span>
</span></span><span class="line"><span class="cl"><span class="n">connection_pool</span> <span class="o">=</span> <span class="n">ConnectionPool</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="c1"># if the given servers are ok, return true, else return false</span>
</span></span><span class="line"><span class="cl"><span class="n">ok</span> <span class="o">=</span> <span class="n">connection_pool</span><span class="o">.</span><span class="n">init</span><span class="p">([(</span><span class="s1">&#39;127.0.0.1&#39;</span><span class="p">,</span> <span class="mi">9669</span><span class="p">)],</span> <span class="n">config</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># import siwi bot</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">siwi.bot</span> <span class="kn">import</span> <span class="n">bot</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># instantiate a bot</span>
</span></span><span class="line"><span class="cl"><span class="n">b</span> <span class="o">=</span> <span class="n">bot</span><span class="o">.</span><span class="n">SiwiBot</span><span class="p">(</span><span class="n">connection_pool</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># make the question query</span>
</span></span><span class="line"><span class="cl"><span class="n">b</span><span class="o">.</span><span class="n">query</span><span class="p">(</span><span class="s2">&#34;Which team had Jonathon Simmons served?&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then a response will be like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">In</span> <span class="p">[</span><span class="mi">4</span><span class="p">]:</span> <span class="n">b</span><span class="o">.</span><span class="n">query</span><span class="p">(</span><span class="s2">&#34;Which team had Jonathon Simmons serv</span>
</span></span><span class="line"><span class="cl">   <span class="o">...</span><span class="p">:</span> <span class="n">ed</span><span class="err">?</span><span class="s2">&#34;)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">DEBUG</span><span class="p">]</span> <span class="n">ServeAction</span> <span class="n">intent</span><span class="p">:</span> <span class="p">{</span><span class="s1">&#39;entities&#39;</span><span class="p">:</span> <span class="p">{</span><span class="s1">&#39;Jonathon Simmons&#39;</span><span class="p">:</span> <span class="s1">&#39;player&#39;</span><span class="p">},</span> <span class="s1">&#39;intents&#39;</span><span class="p">:</span> <span class="p">(</span><span class="s1">&#39;serve&#39;</span><span class="p">,)}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="n">DEBUG</span><span class="p">]</span> <span class="n">query</span> <span class="k">for</span> <span class="n">RelationshipAction</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="n">USE</span> <span class="n">basketballplayer</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">MATCH</span> <span class="n">p</span><span class="o">=</span><span class="p">(</span><span class="n">v</span><span class="p">)</span><span class="o">-</span><span class="p">[</span><span class="n">e</span><span class="p">:</span><span class="n">serve</span><span class="o">*</span><span class="mi">1</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">(</span><span class="n">v1</span><span class="p">)</span> <span class="n">WHERE</span> <span class="nb">id</span><span class="p">(</span><span class="n">v</span><span class="p">)</span> <span class="o">==</span> <span class="s2">&#34;player112&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">RETURN</span> <span class="n">p</span> <span class="n">LIMIT</span> <span class="mi">100</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="mi">2021</span><span class="o">-</span><span class="mi">07</span><span class="o">-</span><span class="mi">02</span> <span class="mi">02</span><span class="p">:</span><span class="mi">59</span><span class="p">:</span><span class="mi">36</span><span class="p">,</span><span class="mi">392</span><span class="p">]:</span><span class="n">Get</span> <span class="n">connection</span> <span class="n">to</span> <span class="p">(</span><span class="s1">&#39;127.0.0.1&#39;</span><span class="p">,</span> <span class="mi">9669</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Out</span><span class="p">[</span><span class="mi">4</span><span class="p">]:</span> <span class="s1">&#39;Jonathon Simmons had served 3 teams. Spurs from 2015 to 2015; 76ers from 2019 to 2019; Magic from 2017 to 2017; &#39;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="frontend-1" class="headerLink">
    <a href="#frontend-1" class="header-mark"></a>3.2 Frontend</h3><p>Referring to <a href="https://github.com/wey-gu/nebula-siwi/tree/main/src/siwi_frontend" target="_blank" rel="noopener noreferrer">siwi_frontend</a></p>
<h2 id="further-work" class="headerLink">
    <a href="#further-work" class="header-mark"></a>4 Further work</h2><ul>
<li><i class="far fa-square fa-fw"></i> Use <a href="https://github.com/swar/nba_api" target="_blank" rel="noopener noreferrer">NBA-API</a> to fallback undefined pattern questions</li>
<li><i class="far fa-square fa-fw"></i> Wrap and manage sessions instead of get and release session per request, this is somehow costly actually.</li>
<li><i class="far fa-square fa-fw"></i> Use NLP methods to implement proper Symentic Parsing, Intent Matching, Slot Filling</li>
<li><i class="far fa-square fa-fw"></i> Build Graph to help with Intent Matching, especially for a general purpose bot</li>
<li><i class="far fa-square fa-fw"></i> Use larger Dataset i.e. from <a href="https://www.kaggle.com/wyattowalsh/basketball" target="_blank" rel="noopener noreferrer">wyattowalsh/basketball</a></li>
</ul>
<h2 id="thanks-to-upstream-projects-" class="headerLink">
    <a href="#thanks-to-upstream-projects-" class="header-mark"></a>5 Thanks to Upstream Projects ❤️</h2><h3 id="backend-2" class="headerLink">
    <a href="#backend-2" class="header-mark"></a>5.1 Backend</h3><ul>
<li>I learnt a lot from the <a href="https://github.com/liuhuanyong/QASystemOnMedicalKG" target="_blank" rel="noopener noreferrer">KGQA on MedicalKG</a> created by <a href="https://liuhuanyong.github.io" target="_blank" rel="noopener noreferrer">Huanyong Liu</a></li>
<li><a href="https://github.com/pallets/flask" target="_blank" rel="noopener noreferrer">Flask</a></li>
<li><a href="https://github.com/WojciechMula/pyahocorasick" target="_blank" rel="noopener noreferrer">pyahocorasick</a> created by <a href="http://0x80.pl/" target="_blank" rel="noopener noreferrer">Wojciech Muła</a></li>
<li><a href="https://pyyaml.org/" target="_blank" rel="noopener noreferrer">PyYaml</a></li>
</ul>
<h3 id="frontend-2" class="headerLink">
    <a href="#frontend-2" class="header-mark"></a>5.2 Frontend</h3><ul>
<li><a href="https://vuejs.org" target="_blank" rel="noopener noreferrer">VueJS</a> for frontend framework</li>
<li><a href="https://github.com/juzser/vue-bot-ui" target="_blank" rel="noopener noreferrer">Vue Bot UI</a>, as a lovely bot UI in vue</li>
<li><a href="https://github.com/Drackokacka/vue-web-speech" target="_blank" rel="noopener noreferrer">Vue Web Speech</a>, for speech API vue wrapper</li>
<li><a href="https://github.com/axios/axios" target="_blank" rel="noopener noreferrer">Axios</a> for browser http client</li>
<li><a href="https://en.wikipedia.org/wiki/Solarized_%28color_scheme%29" target="_blank" rel="noopener noreferrer">Solarized</a> for color scheme</li>
<li><a href="https://github.com/alvarosaburido/vitesome" target="_blank" rel="noopener noreferrer">Vitesome</a> for landing page design</li>
</ul>
<blockquote>
<p>Image credit goes to <a href="https://unsplash.com/photos/0E_vhMVqL9g" target="_blank" rel="noopener noreferrer">https://unsplash.com/photos/0E_vhMVqL9g</a></p>
</blockquote>]]></description>
</item><item>
    <title>Nebula Holdshare Dataset: A demo of Shareholding Breakthrough with Distributed open-source Graph Database: Nebula Graph.</title>
    <link>https://siwei.io/en/nebula-holdshare-dataset/</link>
    <pubDate>Sat, 28 Aug 2021 13:54:03 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/en/nebula-holdshare-dataset/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/en/nebula-holdshare-dataset/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p>A demo of Shareholding Breakthrough with Distributed open-source Graph Database: Nebula Graph. 图数据库应用示例：股权关系穿透</p>
</blockquote>
<p>Related GitHub Repo: <a href="https://github.com/wey-gu/nebula-shareholding-example" target="_blank" rel="noopener noreferrer">https://github.com/wey-gu/nebula-shareholding-example</a></p>
<blockquote>
<p>更新：在这个数据集生成的工作基础上，我又做了一个全栈示例项目 👉🏻 <a href="https://siwei.io/corp-rel-graph/" target="_blank" rel="noopener noreferrer">https://siwei.io/corp-rel-graph/</a></p>
</blockquote>
<blockquote>
<p>I created the Katacoda Interactive Env for this project 👉🏻 <a href="https://siwei.io/cources/" target="_blank" rel="noopener noreferrer">https://siwei.io/cources/</a></p>
</blockquote>
<blockquote>
<p>Now you can play with the data on Nebula Playground: <a href="https://nebula-graph.io/demo/" target="_blank" rel="noopener noreferrer">https://nebula-graph.io/demo/</a></p>
</blockquote>
<p>This is a demo of Shareholding Relationship Analysis with Distributed open-source Graph Database: Nebula Graph.</p>
<h2 id="data" class="headerLink">
    <a href="#data" class="header-mark"></a>1 Data</h2><h3 id="data-modeling" class="headerLink">
    <a href="#data-modeling" class="header-mark"></a>1.1 Data Modeling</h3><p><a class="lightgallery" href="./modeling.webp" title="modeling" data-thumbnail="./modeling.webp">
        
    </a></p>
<p>There are various kinds of relationships when we checking companies&rsquo; shareholding breakthrough, here let&rsquo;s simplify it with only two kind of entities: person and corp, and with following relationship types.</p>
<ul>
<li><code>person</code> can hold a <code>corp</code> in <code>{share} %</code></li>
<li><code>person</code> can be relative with another <code>person</code></li>
<li><code>corp</code> can hold another <code>corp</code> in <code>{share} %</code></li>
<li><code>corp</code> can be a branch of another <code>corp</code></li>
<li><code>person</code> can be as a role of a <code>corp</code></li>
</ul>
<p>Below is the lines to reflect this graph modele in Nebula Graph, it&rsquo;s quite straightforward, right?</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">CREATE</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="n">person</span><span class="p">(</span><span class="n">name</span><span class="w"> </span><span class="n">string</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="n">corp</span><span class="p">(</span><span class="n">name</span><span class="w"> </span><span class="n">string</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="n">role_as</span><span class="p">(</span><span class="k">role</span><span class="w"> </span><span class="n">string</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="n">is_branch_of</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="n">hold_share</span><span class="p">(</span><span class="k">share</span><span class="w"> </span><span class="nb">float</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="n">reletive_with</span><span class="p">(</span><span class="n">degree</span><span class="w"> </span><span class="nb">int</span><span class="p">);</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="data-generation" class="headerLink">
    <a href="#data-generation" class="header-mark"></a>1.2 Data Generation</h3><p>We just randomly generate some data to help with this demo, you can call <code>data_generator.py</code> directly to generate or reuse what&rsquo;s already done under <code>data_sample</code> folder.</p>
<p>The generated data are records to be fit in above data model from below <code>.csv</code> files.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ pip install <span class="nv">Faker</span><span class="o">==</span>2.0.5 <span class="nv">pydbgen</span><span class="o">==</span>1.0.5
</span></span><span class="line"><span class="cl">$ python3 data_generator.py
</span></span><span class="line"><span class="cl">$ ls -l data
</span></span><span class="line"><span class="cl">total <span class="m">1688</span>
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> weyl  staff   <span class="m">23941</span> Jul <span class="m">14</span> 13:28 corp.csv
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> weyl  staff    <span class="m">1277</span> Jul <span class="m">14</span> 13:26 corp_rel.csv
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> weyl  staff    <span class="m">3048</span> Jul <span class="m">14</span> 13:26 corp_share.csv
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> weyl  staff  <span class="m">211661</span> Jul <span class="m">14</span> 13:26 person.csv
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> weyl  staff  <span class="m">179770</span> Jul <span class="m">14</span> 13:26 person_corp_role.csv
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> weyl  staff  <span class="m">322965</span> Jul <span class="m">14</span> 13:26 person_corp_share.csv
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> weyl  staff   <span class="m">17689</span> Jul <span class="m">14</span> 13:26 person_rel.csv
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="data-import" class="headerLink">
    <a href="#data-import" class="header-mark"></a>1.3 Data Import</h3><p>With those data in <code>.csv</code> files, we can easily import them into a Nebula Graph Cluster with the help of <a href="https://github.com/vesoft-inc/nebula-importer" target="_blank" rel="noopener noreferrer">Nebula-Importer</a>. <code>nebula-importer.yaml</code> in this repo describes rules and configurations on how this import will be done by the importer.</p>
<p>For Nebula Graph Database, plesae refer to <a href="https://docs.nebula-graph.io/" target="_blank" rel="noopener noreferrer">Doc</a> , <a href="https://docs.nebula-graph.com.cn/" target="_blank" rel="noopener noreferrer">Doc-CN</a> to deploy on any Linux Servers, for study and test, you can run it via Docker following the Quick Start Chapter of the documentation.</p>
<p>For Nebula-Importer, if you already have Docker env, you can run it as the following without installing anything. Or, if you prefer to install it, it&rsquo;s quite easy as it&rsquo;s written in Golang and you can run its single file binary quite easily, go check both Documentation and Nebula-Importer Repo: <a href="https://github.com/vesoft-inc/nebula-importer" target="_blank" rel="noopener noreferrer">https://github.com/vesoft-inc/nebula-importer</a>.</p>
<blockquote>
<p>Let&rsquo;s start! Below is the commands I used to import our data into a Nebula Graph Database.</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># put generated data &amp; nebula-importor.yaml to nebula-importer server</span>
</span></span><span class="line"><span class="cl">$ scp -r data nebula_graph_host:~
</span></span><span class="line"><span class="cl">$ scp nebula-importer.yaml data nebula_graph_host:~/data
</span></span><span class="line"><span class="cl">$ ssh nebula_graph_host
</span></span><span class="line"><span class="cl">$ ls -l <span class="si">${</span><span class="nv">HOME</span><span class="si">}</span>/data
</span></span><span class="line"><span class="cl">total <span class="m">756</span>
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> wei.gu wei.gu  <span class="m">23941</span> Jul <span class="m">14</span> 05:44 corp.csv
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> wei.gu wei.gu   <span class="m">1277</span> Jul <span class="m">14</span> 05:44 corp_rel.csv
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> wei.gu wei.gu   <span class="m">3048</span> Jul <span class="m">14</span> 05:44 corp_share.csv
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> wei.gu wei.gu   <span class="m">3893</span> Jul <span class="m">14</span> 05:44 nebula-importer.yaml
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> wei.gu wei.gu <span class="m">211661</span> Jul <span class="m">14</span> 05:44 person.csv
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> wei.gu wei.gu <span class="m">179770</span> Jul <span class="m">14</span> 05:44 person_corp_role.csv
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> wei.gu wei.gu <span class="m">322965</span> Jul <span class="m">14</span> 05:44 person_corp_share.csv
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> wei.gu wei.gu  <span class="m">17689</span> Jul <span class="m">14</span> 05:44 person_rel.csv
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># import data into our nebula graph database</span>
</span></span><span class="line"><span class="cl">$ docker run --rm -ti <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --network<span class="o">=</span>nebula-docker-compose_nebula-net <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -v <span class="si">${</span><span class="nv">HOME</span><span class="si">}</span>/data/nebula-importer.yaml:/root/nebula-importer.yaml <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -v <span class="si">${</span><span class="nv">HOME</span><span class="si">}</span>/data:/root <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    vesoft/nebula-importer:v2 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --config /root/nebula-importer.yaml
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">2021/07/14 05:49:32 --- START OF NEBULA IMPORTER ---
</span></span><span class="line"><span class="cl">2021/07/14 05:49:32 <span class="o">[</span>WARN<span class="o">]</span> config.go:491: Not <span class="nb">set</span> files<span class="o">[</span>0<span class="o">]</span>.schema.vertex.vid.Type, reset to default value <span class="sb">`</span>string<span class="err">&#39;</span>
</span></span><span class="line"><span class="cl">...
</span></span><span class="line"><span class="cl">2021/07/14 05:49:43 <span class="o">[</span>INFO<span class="o">]</span> reader.go:180: Total lines of file<span class="o">(</span>/root/person_corp_role.csv<span class="o">)</span> is: 5000, error lines: <span class="m">1287</span>
</span></span><span class="line"><span class="cl">2021/07/14 05:49:43 <span class="o">[</span>INFO<span class="o">]</span> statsmgr.go:61: Done<span class="o">(</span>/root/person_corp_role.csv<span class="o">)</span>: Time<span class="o">(</span>11.39s<span class="o">)</span>, Finished<span class="o">(</span>12523<span class="o">)</span>, Failed<span class="o">(</span>0<span class="o">)</span>, Latency AVG<span class="o">(</span>1514us<span class="o">)</span>, Batches Req AVG<span class="o">(</span>1824us<span class="o">)</span>, Rows AVG<span class="o">(</span>1099.43/s<span class="o">)</span>
</span></span><span class="line"><span class="cl">2021/07/14 05:49:47 <span class="o">[</span>INFO<span class="o">]</span> statsmgr.go:61: Tick: Time<span class="o">(</span>15.00s<span class="o">)</span>, Finished<span class="o">(</span>25807<span class="o">)</span>, Failed<span class="o">(</span>0<span class="o">)</span>, Latency AVG<span class="o">(</span>1500us<span class="o">)</span>, Batches Req AVG<span class="o">(</span>1805us<span class="o">)</span>, Rows AVG<span class="o">(</span>1720.46/s<span class="o">)</span>
</span></span><span class="line"><span class="cl">2021/07/14 05:49:48 <span class="o">[</span>INFO<span class="o">]</span> reader.go:180: Total lines of file<span class="o">(</span>/root/person.csv<span class="o">)</span> is: 10000, error lines: <span class="m">0</span>
</span></span><span class="line"><span class="cl">2021/07/14 05:49:48 <span class="o">[</span>INFO<span class="o">]</span> statsmgr.go:61: Done<span class="o">(</span>/root/person.csv<span class="o">)</span>: Time<span class="o">(</span>16.10s<span class="o">)</span>, Finished<span class="o">(</span>29731<span class="o">)</span>, Failed<span class="o">(</span>0<span class="o">)</span>, Latency AVG<span class="o">(</span>1505us<span class="o">)</span>, Batches Req AVG<span class="o">(</span>1810us<span class="o">)</span>, Rows AVG<span class="o">(</span>1847.17/s<span class="o">)</span>
</span></span><span class="line"><span class="cl">2021/07/14 05:49:50 <span class="o">[</span>INFO<span class="o">]</span> reader.go:180: Total lines of file<span class="o">(</span>/root/person_corp_share.csv<span class="o">)</span> is: 20000, error lines: <span class="m">0</span>
</span></span><span class="line"><span class="cl">2021/07/14 05:49:50 <span class="o">[</span>INFO<span class="o">]</span> statsmgr.go:61: Done<span class="o">(</span>/root/person_corp_share.csv<span class="o">)</span>: Time<span class="o">(</span>17.74s<span class="o">)</span>, Finished<span class="o">(</span>36013<span class="o">)</span>, Failed<span class="o">(</span>0<span class="o">)</span>, Latency AVG<span class="o">(</span>1531us<span class="o">)</span>, Batches Req AVG<span class="o">(</span>1844us<span class="o">)</span>, Rows AVG<span class="o">(</span>2030.29/s<span class="o">)</span>
</span></span><span class="line"><span class="cl">2021/07/14 05:49:50 Finish import data, consume time: 18.25s
</span></span><span class="line"><span class="cl">2021/07/14 05:49:51 --- END OF NEBULA IMPORTER ---
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="corporation-sharehold-relationship-breakthrough" class="headerLink">
    <a href="#corporation-sharehold-relationship-breakthrough" class="header-mark"></a>2 Corporation sharehold relationship breakthrough</h2><h4 id="query-in-ngql" class="headerLink">
    <a href="#query-in-ngql" class="header-mark"></a>2.0.1 Query in nGQL</h4><p>We can query from corp: <code>c_132</code> over <code>*</code>(all relationships) in <code>BIDIRECT</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">GO</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="k">TO</span><span class="w"> </span><span class="mi">3</span><span class="w"> </span><span class="n">STEPS</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="s2">&#34;c_132&#34;</span><span class="w"> </span><span class="n">over</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">BIDIRECT</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>Below are lines I call this query in <a href="https://github.com/vesoft-inc/nebula-console" target="_blank" rel="noopener noreferrer">nebula-console</a>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">/ <span class="c1"># nebula-console  -addr 192.168.8.128 -port 9669 -user user -password password</span>
</span></span><span class="line"><span class="cl">2021/07/14 07:07:41 <span class="o">[</span>INFO<span class="o">]</span> connection pool is initialized successfully
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Welcome to Nebula Graph!
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">(</span>user@nebula<span class="o">)</span> <span class="o">[(</span>none<span class="o">)]</span>&gt; show spaces
</span></span><span class="line"><span class="cl">+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> Name               <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> <span class="s2">&#34;basketballplayer&#34;</span> <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> <span class="s2">&#34;shareholding&#34;</span>     <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------------+
</span></span><span class="line"><span class="cl">Got <span class="m">2</span> rows <span class="o">(</span><span class="nb">time</span> spent 3851/4595 us<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Wed, <span class="m">14</span> Jul <span class="m">2021</span> 07:07:57 UTC
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">(</span>user@nebula<span class="o">)</span> <span class="o">[(</span>none<span class="o">)]</span>&gt; use shareholding
</span></span><span class="line"><span class="cl">Execution succeeded <span class="o">(</span><span class="nb">time</span> spent 1822/2342 us<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Wed, <span class="m">14</span> Jul <span class="m">2021</span> 07:08:02 UTC
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">(</span>user@nebula<span class="o">)</span> <span class="o">[</span>shareholding<span class="o">]</span>&gt; GO <span class="m">1</span> TO <span class="m">3</span> STEPS FROM <span class="s2">&#34;c_132&#34;</span> over * BIDIRECT
</span></span><span class="line"><span class="cl">+--------------+-------------------+-----------------+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> role_as._dst <span class="p">|</span> is_branch_of._dst <span class="p">|</span> hold_share._dst <span class="p">|</span> reletive_with._dst <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------+-------------------+-----------------+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> <span class="s2">&#34;p_2024&#34;</span>     <span class="p">|</span>                   <span class="p">|</span>                 <span class="p">|</span>                    <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------+-------------------+-----------------+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> <span class="s2">&#34;p_4000&#34;</span>     <span class="p">|</span>                   <span class="p">|</span>                 <span class="p">|</span>                    <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------+-------------------+-----------------+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span>              <span class="p">|</span>                   <span class="p">|</span> <span class="s2">&#34;c_245&#34;</span>         <span class="p">|</span>                    <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------+-------------------+-----------------+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span>              <span class="p">|</span>                   <span class="p">|</span> <span class="s2">&#34;p_1039&#34;</span>        <span class="p">|</span>                    <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------+-------------------+-----------------+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span>              <span class="p">|</span>                   <span class="p">|</span> <span class="s2">&#34;p_1399&#34;</span>        <span class="p">|</span>                    <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------+-------------------+-----------------+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span>              <span class="p">|</span>                   <span class="p">|</span> <span class="s2">&#34;p_1767&#34;</span>        <span class="p">|</span>                    <span class="p">|</span>
</span></span><span class="line"><span class="cl">...
</span></span><span class="line"><span class="cl">+--------------+-------------------+-----------------+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span>              <span class="p">|</span>                   <span class="p">|</span> <span class="s2">&#34;c_132&#34;</span>         <span class="p">|</span>                    <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------+-------------------+-----------------+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span>              <span class="p">|</span>                   <span class="p">|</span> <span class="s2">&#34;c_245&#34;</span>         <span class="p">|</span>                    <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------+-------------------+-----------------+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span>              <span class="p">|</span>                   <span class="p">|</span> <span class="s2">&#34;c_25&#34;</span>          <span class="p">|</span>                    <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------+-------------------+-----------------+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span>              <span class="p">|</span>                   <span class="p">|</span> <span class="s2">&#34;c_649&#34;</span>         <span class="p">|</span>                    <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------+-------------------+-----------------+--------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span>              <span class="p">|</span>                   <span class="p">|</span> <span class="s2">&#34;c_753&#34;</span>         <span class="p">|</span>                    <span class="p">|</span>
</span></span><span class="line"><span class="cl">+--------------+-------------------+-----------------+--------------------+
</span></span><span class="line"><span class="cl">Got <span class="m">1519</span> rows <span class="o">(</span><span class="nb">time</span> spent 12190/14702 us<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Wed, <span class="m">14</span> Jul <span class="m">2021</span> 07:08:06 UTC
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="in-a-visual-way" class="headerLink">
    <a href="#in-a-visual-way" class="header-mark"></a>2.0.2 In a Visual Way</h4><p>Of course, we can also be done in a visual way:</p>
<p>Step 1, login from Nebula Graph Studio, explore with one VID: <code>c_132</code>:</p>
<p><a class="lightgallery" href="./studio_explore_0.webp" title="studio_explore_0" data-thumbnail="./studio_explore_0.webp">
        
    </a></p>
<p>Step2, click this explored vertex dot, then you can explore from select vertices by selecting:</p>
<ul>
<li>Edge Type</li>
<li>Direction</li>
<li>Steps</li>
<li>Query Limit(Optional)</li>
</ul>
<blockquote>
<p>note, you can click the 👁️ icon to add options to show fields of the graph,</p>
</blockquote>
<p><a class="lightgallery" href="./studio_explore_1.webp" title="studio_explore_1" data-thumbnail="./studio_explore_1.webp">
        
    </a></p>
<p>Step3, after click Expand, you will see all quried relations with <code>c_132</code> the <code>Chambers LLC</code>.</p>
<p><a class="lightgallery" href="./studio_explore_2.webp" title="studio_explore_2" data-thumbnail="./studio_explore_2.webp">
        
    </a></p>
<h2 id="thanks-to-upstream-projects-" class="headerLink">
    <a href="#thanks-to-upstream-projects-" class="header-mark"></a>3 Thanks to Upstream Projects ❤️</h2><ul>
<li>Python Faker <a href="https://github.com/joke2k/faker/" target="_blank" rel="noopener noreferrer">https://github.com/joke2k/faker/</a></li>
<li>pydbgen <a href="https://github.com/tirthajyoti/pydbgen" target="_blank" rel="noopener noreferrer">https://github.com/tirthajyoti/pydbgen</a></li>
<li>Nebula Graph <a href="https://github.com/vesoft-inc/nebula-graph" target="_blank" rel="noopener noreferrer">https://github.com/vesoft-inc/nebula-graph</a></li>
</ul>
<h3 id="tips" class="headerLink">
    <a href="#tips" class="header-mark"></a>3.1 Tips:</h3><ul>
<li>You can deploy nebula graph in one line with:
<ul>
<li><a href="https://siwei.io/nebula-up/" target="_blank" rel="noopener noreferrer">Nebula-UP</a>, it helps install a nebula graph with Docker</li>
<li><a href="https://siwei.io/nebula-operator-kind/" target="_blank" rel="noopener noreferrer">Nebula-operator-KIND</a> , it helps setup all dependencies of Nebula-K8s-Operator including a K8s in Docker, PV Provider and then install a Nebula Graph with Nebula-Operator in K8s.</li>
</ul>
</li>
</ul>
<blockquote>
<p>Image Credit goes to <a href="https://unsplash.com/photos/3fPXt37X6UQ" target="_blank" rel="noopener noreferrer">https://unsplash.com/photos/3fPXt37X6UQ</a></p>
</blockquote>]]></description>
</item></channel>
</rss>
