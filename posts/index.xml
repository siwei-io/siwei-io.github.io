<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - siwei.io</title>
        <link>https://siwei.io/posts/</link>
        <description>所有文章 | siwei.io</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>weyl.gu@gmail.com (Wey Gu)</managingEditor>
            <webMaster>weyl.gu@gmail.com (Wey Gu)</webMaster><lastBuildDate>Mon, 28 Feb 2022 19:18:59 &#43;0800</lastBuildDate><atom:link href="https://siwei.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>图数据库体操：用 Nebula Graph 搭成语图谱解汉兜</title>
    <link>https://siwei.io/resolve-wordle/</link>
    <pubDate>Mon, 28 Feb 2022 19:18:59 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/resolve-wordle/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p>我发现用 Nebula Graph 的图查询解 Antfu 的汉兜（最好的中文成语版 wordle 👉🏻 handle.antfu.me）特别有意思，很适合每天写图库语句的体操练习，本文揭示如何用知识图谱<del>作弊</del>解汉兜😁</p>
</blockquote>
<h2 id="什么是汉兜" class="headerLink">
    <a href="#%e4%bb%80%e4%b9%88%e6%98%af%e6%b1%89%e5%85%9c" class="header-mark"></a>1 什么是汉兜？</h2><p>汉兜（https://handle.antfu.me）是由 Vue/Vite 核心团队的 Antfu 的又一个非常酷的作品，一个非常精致的汉字版的 Wordle，他是是一个每日挑战的填字游戏的中文成语版。</p>
<p>每天，汉兜会发起一个猜成语挑战，人们要在十次内才对它才能获胜，每一步之后都会收到相应的文字、声母、韵母、声调的匹配情况的提示，其中：绿色表示这个因素存在并且位置匹配、橘色表示这个元素存在但是位置不对，详细的规则可见如下的网页截图：</p>
<p></p>
<p>汉兜的乐趣就我们在于在有限的尝试过程中，在大脑中搜寻可能的答案，不断去逼近真理，任何试图作弊、讨巧去泄漏结果的行为都是很无趣、倒胃口的（比如从开源的汉兜代码里窃取信息），这个过程就像在做大脑的体操。</p>
<p>说到大脑的成语词汇量体操，我突然想到，为什么我们不能在大脑之外造一个汉语成语知识图谱，然后基于这个图谱去做图数据库查询语法体操呢？</p>
<h2 id="构造解决汉兜的成语知识图谱" class="headerLink">
    <a href="#%e6%9e%84%e9%80%a0%e8%a7%a3%e5%86%b3%e6%b1%89%e5%85%9c%e7%9a%84%e6%88%90%e8%af%ad%e7%9f%a5%e8%af%86%e5%9b%be%e8%b0%b1" class="header-mark"></a>2 构造解决汉兜的成语知识图谱</h2><h3 id="什么是知识图谱" class="headerLink">
    <a href="#%e4%bb%80%e4%b9%88%e6%98%af%e7%9f%a5%e8%af%86%e5%9b%be%e8%b0%b1" class="header-mark"></a>2.1 什么是知识图谱？</h3><p>简单来说，知识图谱是一个连接实体之间关联关系的网络，它最初由 Google 提出并用来满足搜索引擎中基于知识推理才可获得（而不是网页倒排索引）的搜索问题，比如：”姚明妻子的年龄？“、”火箭队得过几次总冠军？“</p>
<p>这里边，我们关注的条件。到 2022 年的现在，知识图谱已经被广泛应用在推荐系统、问答系统、安全风控等等更多搜索之外的领域。</p>
<h3 id="为什么需要用知识图谱解决汉兜" class="headerLink">
    <a href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e9%9c%80%e8%a6%81%e7%94%a8%e7%9f%a5%e8%af%86%e5%9b%be%e8%b0%b1%e8%a7%a3%e5%86%b3%e6%b1%89%e5%85%9c" class="header-mark"></a>2.2 为什么需要用知识图谱解决汉兜？</h3><p><del>原因就是：because I can</del></p>
<p>实际上，我们在大脑中解决字谜游戏的过程像极了图谱网络中的信息搜寻的过程，汉兜的解谜反馈提示条件天然适合被用图谱的语义来进行表达。在本文后边，你们会发现解谜条件翻译成图语义是非常非常自然的，这个问题就像是一个天然的为图谱而存在的练习一样，我相信这和知识图谱的结构和人脑中的知识结构非常接近有很大的关系。</p>
<h3 id="如何构建面向汉兜解谜的知识图谱" class="headerLink">
    <a href="#%e5%a6%82%e4%bd%95%e6%9e%84%e5%bb%ba%e9%9d%a2%e5%90%91%e6%b1%89%e5%85%9c%e8%a7%a3%e8%b0%9c%e7%9a%84%e7%9f%a5%e8%af%86%e5%9b%be%e8%b0%b1" class="header-mark"></a>2.3 如何构建面向汉兜解谜的知识图谱？</h3><p>知识图谱是由实体（顶点）和关系（边）组成的，用图数据库管理系统（Graph Database MS）可以很方便进行知识的入库、更改、查询、甚至可视化探索。</p>
<p>在本文里，我将利用开源的分布式图数据库 Nebula Graph 开实践这个过程，具体图谱系统的搭建我都会放在文末。</p>
<p>在本章，我们只讨论图谱的建模：如何面向汉兜的解谜去设计“实体”与“关系”。</p>
<h4 id="图建模" class="headerLink">
    <a href="#%e5%9b%be%e5%bb%ba%e6%a8%a1" class="header-mark"></a>2.3.1 图建模</h4><h5 id="最初的想法" class="headerLink">
    <a href="#%e6%9c%80%e5%88%9d%e7%9a%84%e6%83%b3%e6%b3%95" class="header-mark"></a>2.3.1.1 最初的想法</h5><p>首先，一定存在的实体是：</p>
<ul>
<li>成语</li>
<li>汉字</li>
</ul>
<p>成语-[包含]-&gt;汉字，每个汉字-[读作]-&gt;读音。</p>
<p>其次，因为解谜过程中涉及到了声母、韵母以及声调的条件，考虑到图谱本身的量级非常小（千级别），而且字的读音是一对多的关系，我把读音和声母（包涵声母-initial和韵母-final）也作为实体，他们之间的关系则是顺理成章了：</p>
<p></p>
<h5 id="最终的版本" class="headerLink">
    <a href="#%e6%9c%80%e7%bb%88%e7%9a%84%e7%89%88%e6%9c%ac" class="header-mark"></a>2.3.1.2 最终的版本</h5><p>然而，我在后边基于图谱进行查询的时候发现最初的建模会使得(成语)&ndash;&gt;(字)&ndash;&gt;(读音)查询过程中丢失了这个字特定的读法的条件，所以我最终的建模是：</p>
<p></p>
<p>这样，纯文字的条件只涉及了<code>(成语)--&gt;(字)</code> 这一跳，而读音、声母、声调的条件则是另一条关系路径，既没有最初版本条件的冗余，又可以在一个路径模式匹配里带上两种条件（后边的例子里会涉及这样的表达）。</p>
<h4 id="构建成语知识图谱" class="headerLink">
    <a href="#%e6%9e%84%e5%bb%ba%e6%88%90%e8%af%ad%e7%9f%a5%e8%af%86%e5%9b%be%e8%b0%b1" class="header-mark"></a>2.3.2 构建成语知识图谱</h4><p>有了建模、这么简单的图谱的构建就剩下了数据的收集、清洗和入库。</p>
<p>对于所有成语数据和他们的读音，我一方面直接抽取了汉兜代码内部的<a href="https://github.com/antfu/handle/" target="_blank" rel="noopener noreffer">数据</a>、另一方面利用 <a href="https://pypinyin.readthedocs.io/" target="_blank" rel="noopener noreffer">PyPinyin</a> 这个开源的 Python 库将汉兜数据中没有读音的数据获得读音，同时，我也用到了 PyPinyin 里的很多方便的函数比如获取一个拼音的声母、韵母。</p>
<p>构建工具的代码在这里：https://github.com/wey-gu/chinese-graph</p>
<p>更多信息我也放在文末的附录之中。</p>
<h2 id="开始知识图谱查询体操" class="headerLink">
    <a href="#%e5%bc%80%e5%a7%8b%e7%9f%a5%e8%af%86%e5%9b%be%e8%b0%b1%e6%9f%a5%e8%af%a2%e4%bd%93%e6%93%8d" class="header-mark"></a>3 开始知识图谱查询体操</h2><p>至此，我假设咱们都已经有了我帮大家搭建的成语<del>作弊</del>知识图谱了，开始我们的图谱查询体操吧！</p>
<p>首先，打开汉兜 👉🏻 <a href="https://handle.antfu.me/" target="_blank" rel="noopener noreffer">https://handle.antfu.me/</a></p>
<p>假设我们想从一个成语开始，如果你没有想法的话可以试试这个：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-GraphQL" data-lang="GraphQL"><span class="c"># 匹配成语中的一个结果</span><span class="w">
</span><span class="w"></span><span class="py">MATCH</span><span class="w"> </span><span class="p">(</span><span class="py">x</span><span class="p">:</span><span class="nc">idiom</span><span class="p">)</span><span class="w"> </span><span class="py">RETURN</span><span class="w"> </span><span class="py">x</span><span class="w"> </span><span class="py">LIMIT</span><span class="w"> </span><span class="py">1</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="c"># 返回结果</span><span class="w">
</span><span class="w"></span><span class="p">(</span><span class="s">&#34;爱憎分明&#34;</span><span class="w"> </span><span class="p">:</span><span class="nc">idiom</span><span class="p">{</span><span class="py">pinyin</span><span class="p">:</span><span class="w"> </span><span class="s">&#34;[&#39;ai4&#39;, &#39;zeng1&#39;, &#39;fen1&#39;, &#39;ming2&#39;]&#34;</span><span class="p">})</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div><p>然后我们把它填到汉兜之中，获得第一次尝试的提示条件：</p>
<p></p>
<p>我们运气不错，得到了三个位置上的条件！</p>
<ul>
<li>有一个非第一个位置的字，拼音是 4 声，韵母是 ai，但不是爱（爱）</li>
<li>有一个一声的字，不在第二个位置（憎）</li>
<li>有一个字韵母是 ing，不在第四个位置（明）</li>
<li>第四个字是二声（明）</li>
</ul>
<p>下面，我们开始图数据库语句体操！</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-GraphQL" data-lang="GraphQL"><span class="c"># 有一个非第一个位置的字，拼音是 4 声，韵母是 ai，但不是爱</span><span class="w">
</span><span class="w"></span><span class="py">MATCH</span><span class="w"> </span><span class="p">(</span><span class="py">char0</span><span class="p">:</span><span class="nc">character</span><span class="p">)</span><span class="err">&lt;-</span><span class="p">[</span><span class="py">with_char_0</span><span class="p">:</span><span class="nc">with_character</span><span class="p">]</span><span class="err">-</span><span class="p">(</span><span class="py">x</span><span class="p">:</span><span class="nc">idiom</span><span class="p">)</span><span class="err">-</span><span class="p">[</span><span class="py">with_pinyin_0</span><span class="p">:</span><span class="nc">with_pinyin</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">pinyin_0</span><span class="p">:</span><span class="nc">character_pinyin</span><span class="p">)</span><span class="err">-</span><span class="p">[:</span><span class="nc">with_pinyin_part</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">final_part_0</span><span class="p">:</span><span class="nc">pinyin_part</span><span class="p">{</span><span class="py">part_type</span><span class="p">:</span><span class="w"> </span><span class="s">&#34;final&#34;</span><span class="p">})</span><span class="w">
</span><span class="w"></span><span class="nc">WHERE</span><span class="w"> </span><span class="py">id</span><span class="p">(</span><span class="py">final_part_0</span><span class="p">)</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="s">&#34;ai&#34;</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">pinyin_0</span><span class="err">.</span><span class="py">character_pinyin</span><span class="err">.</span><span class="py">tone</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="py">4</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">with_pinyin_0</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="py">0</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">with_char_0</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="py">0</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">id</span><span class="p">(</span><span class="py">char0</span><span class="p">)</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="sc">&#34;爱&#34;</span><span class="w">
</span><span class="w"></span><span class="c"># 有一个一声的字，不在第二个位置</span><span class="w">
</span><span class="w"></span><span class="py">MATCH</span><span class="w"> </span><span class="p">(</span><span class="py">x</span><span class="p">:</span><span class="nc">idiom</span><span class="p">)</span><span class="w"> </span><span class="err">-</span><span class="p">[</span><span class="py">with_pinyin_1</span><span class="p">:</span><span class="nc">with_pinyin</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">pinyin_1</span><span class="p">:</span><span class="nc">character_pinyin</span><span class="p">)</span><span class="w">
</span><span class="w"></span><span class="py">WHERE</span><span class="w"> </span><span class="py">pinyin_1</span><span class="err">.</span><span class="py">character_pinyin</span><span class="err">.</span><span class="py">tone</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="py">1</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">with_pinyin_1</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="py">1</span><span class="w">
</span><span class="w"></span><span class="c"># 有一个字韵母是 ing，不在第四个位置</span><span class="w">
</span><span class="w"></span><span class="py">MATCH</span><span class="w"> </span><span class="p">(</span><span class="py">x</span><span class="p">:</span><span class="nc">idiom</span><span class="p">)</span><span class="w"> </span><span class="err">-</span><span class="p">[</span><span class="py">with_pinyin_2</span><span class="p">:</span><span class="nc">with_pinyin</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(:</span><span class="nc">character_pinyin</span><span class="p">)</span><span class="err">-</span><span class="p">[:</span><span class="nc">with_pinyin_part</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">final_part_2</span><span class="p">:</span><span class="nc">pinyin_part</span><span class="p">{</span><span class="py">part_type</span><span class="p">:</span><span class="w"> </span><span class="s">&#34;final&#34;</span><span class="p">})</span><span class="w">
</span><span class="w"></span><span class="nc">WHERE</span><span class="w"> </span><span class="py">id</span><span class="p">(</span><span class="py">final_part_2</span><span class="p">)</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="s">&#34;ing&#34;</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">with_pinyin_2</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="py">3</span><span class="w">
</span><span class="w"></span><span class="c"># 第四个字是二声</span><span class="w">
</span><span class="w"></span><span class="py">MATCH</span><span class="w"> </span><span class="p">(</span><span class="py">x</span><span class="p">:</span><span class="nc">idiom</span><span class="p">)</span><span class="w"> </span><span class="err">-</span><span class="p">[</span><span class="py">with_pinyin_3</span><span class="p">:</span><span class="nc">with_pinyin</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">pinyin_3</span><span class="p">:</span><span class="nc">character_pinyin</span><span class="p">)</span><span class="w">
</span><span class="w"></span><span class="py">WHERE</span><span class="w"> </span><span class="py">pinyin_3</span><span class="err">.</span><span class="py">character_pinyin</span><span class="err">.</span><span class="py">tone</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="py">2</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">with_pinyin_3</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="py">3</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="py">RETURN</span><span class="w"> </span><span class="py">x</span><span class="p">,</span><span class="w"> </span><span class="py">count</span><span class="p">(</span><span class="py">x</span><span class="p">)</span><span class="w"> </span><span class="py">as</span><span class="w"> </span><span class="py">c</span><span class="w"> </span><span class="py">ORDER</span><span class="w"> </span><span class="py">BY</span><span class="w"> </span><span class="py">c</span><span class="w"> </span><span class="py">DESC</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div><p>在图数据库之中运行，得到了 7 个答案：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="err">(</span><span class="s2">&#34;惊愚骇俗&#34;</span> <span class="err">:idiom</span><span class="p">{</span><span class="err">pinyin:</span> <span class="nt">&#34;[&#39;jing1&#39;, &#39;yu2&#39;, &#39;hai4&#39;, &#39;su2&#39;]&#34;</span><span class="p">}</span><span class="err">)</span>
<span class="err">(</span><span class="s2">&#34;惊世骇俗&#34;</span> <span class="err">:idiom</span><span class="p">{</span><span class="err">pinyin:</span> <span class="nt">&#34;[&#39;jing1&#39;, &#39;shi4&#39;, &#39;hai4&#39;, &#39;su2&#39;]&#34;</span><span class="p">}</span><span class="err">)</span>
<span class="err">(</span><span class="s2">&#34;惊见骇闻&#34;</span> <span class="err">:idiom</span><span class="p">{</span><span class="err">pinyin:</span> <span class="nt">&#34;[&#39;jing1&#39;, &#39;jian4&#39;, &#39;hai4&#39;, &#39;wen2&#39;]&#34;</span><span class="p">}</span><span class="err">)</span>
<span class="err">(</span><span class="s2">&#34;沽名卖直&#34;</span> <span class="err">:idiom</span><span class="p">{</span><span class="err">pinyin:</span> <span class="nt">&#34;[&#39;gu1&#39;, &#39;ming2&#39;, &#39;mai4&#39;, &#39;zhi2&#39;]&#34;</span><span class="p">}</span><span class="err">)</span>
<span class="err">(</span><span class="s2">&#34;惊心骇神&#34;</span> <span class="err">:idiom</span><span class="p">{</span><span class="err">pinyin:</span> <span class="nt">&#34;[&#39;jing1&#39;, &#39;xin1&#39;, &#39;hai4&#39;, &#39;shen2&#39;]&#34;</span><span class="p">}</span><span class="err">)</span>
<span class="err">(</span><span class="s2">&#34;荆棘载途&#34;</span> <span class="err">:idiom</span><span class="p">{</span><span class="err">pinyin:</span> <span class="nt">&#34;[&#39;jing1&#39;, &#39;ji2&#39;, &#39;zai4&#39;, &#39;tu2&#39;]&#34;</span><span class="p">}</span><span class="err">)</span>
<span class="err">(</span><span class="s2">&#34;出卖灵魂&#34;</span> <span class="err">:idiom</span><span class="p">{</span><span class="err">pinyin:</span> <span class="nt">&#34;[&#39;chu1&#39;, &#39;mai4&#39;, &#39;ling2&#39;, &#39;hun2&#39;]&#34;</span><span class="p">}</span><span class="err">)</span>
</code></pre></td></tr></table>
</div>
</div><p>看起来 <code>惊世骇俗</code> 比较主流，试试！</p>
<p></p>
<p>我们很幸运，借助于成语<del>作弊</del>知识图谱，居然一次就找到了答案，当然这实际上得益于第一次随机选取的词带来的限制条件的个数，不过在大部分情况下，两次尝试获得最终答案的可能性还是非常大的！</p>
<blockquote>
<p>注，这中间很长的253分钟是因为我在查询中发现之前代码里构造的图谱有点 bug，是“披枷带锁”这个词引起的读音图谱的错误数据，还好后来被修复了。</p>
<p>大家知道“披枷带锁”的正确读音么？😭</p>
</blockquote>
<p>接下来，我给大家详细解释一下这个语句的意思。</p>
<h3 id="语句的含义" class="headerLink">
    <a href="#%e8%af%ad%e5%8f%a5%e7%9a%84%e5%90%ab%e4%b9%89" class="header-mark"></a>3.1 语句的含义</h3><p>我们从第一个字的条件开始，这是一个既有声音、又有字形信息的条件。</p>
<ul>
<li>声音信息：存在一个韵母为 <code>ai4</code> 的发音，位置不在第一个字</li>
<li>文字信息：这个韵母为 <code>ai4</code> 的字，不是<code>爱</code>字</li>
</ul>
<p>对于声音信息条件，转换为图模式匹配为：(成语)-一个字发音-(拼音) -包含声母-(韵母) WHERE 拼音韵母为 <code>ai4</code> AND 位置不是第一个。</p>
<p>因为建模的时候，属性名称我用的是英文（其实中文也是支持的），实际上的语句为：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-GraphQL" data-lang="GraphQL"><span class="c"># 有一个非第一个位置的字，拼音是 4 声，韵母是 ai</span><span class="w">
</span><span class="w"></span><span class="py">MATCH</span><span class="w"> </span><span class="p">(</span><span class="py">x</span><span class="p">:</span><span class="nc">idiom</span><span class="p">)</span><span class="err">-</span><span class="p">[</span><span class="py">with_pinyin_0</span><span class="p">:</span><span class="nc">with_pinyin</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">pinyin_0</span><span class="p">:</span><span class="nc">character_pinyin</span><span class="p">)</span><span class="err">-</span><span class="p">[:</span><span class="nc">with_pinyin_part</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">final_part_0</span><span class="p">:</span><span class="nc">pinyin_part</span><span class="p">{</span><span class="py">part_type</span><span class="p">:</span><span class="w"> </span><span class="s">&#34;final&#34;</span><span class="p">})</span><span class="w">
</span><span class="w"></span><span class="nc">WHERE</span><span class="w"> </span><span class="py">id</span><span class="p">(</span><span class="py">final_part_0</span><span class="p">)</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="s">&#34;ai&#34;</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">pinyin_0</span><span class="err">.</span><span class="py">character_pinyin</span><span class="err">.</span><span class="py">tone</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="py">4</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">with_pinyin_0</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="py">0</span><span class="w">
</span><span class="w"></span><span class="c"># ...</span><span class="w">
</span><span class="w"></span><span class="py">RETURN</span><span class="w"> </span><span class="py">x</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div><p>类似的，表示非第一个位置的字，不是<code>爱</code> 的表达是：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-GraphQL" data-lang="GraphQL"><span class="c"># 有一个非第一个位置的字，拼音是 4 声，韵母是 ai，但不是爱</span><span class="w">
</span><span class="w"></span><span class="py">MATCH</span><span class="w"> </span><span class="p">(</span><span class="py">char0</span><span class="p">:</span><span class="nc">character</span><span class="p">)</span><span class="err">&lt;-</span><span class="p">[</span><span class="py">with_char_0</span><span class="p">:</span><span class="nc">with_character</span><span class="p">]</span><span class="err">-</span><span class="p">(</span><span class="py">x</span><span class="p">:</span><span class="nc">idiom</span><span class="p">)</span><span class="w">
</span><span class="w"></span><span class="py">WHERE</span><span class="w"> </span><span class="py">with_char_0</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="py">0</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">id</span><span class="p">(</span><span class="py">char0</span><span class="p">)</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="sc">&#34;爱&#34;</span><span class="w">
</span><span class="w"></span><span class="c"># ...</span><span class="w">
</span><span class="w"></span><span class="py">RETURN</span><span class="w"> </span><span class="py">x</span><span class="p">,</span><span class="w"> </span><span class="py">count</span><span class="p">(</span><span class="py">x</span><span class="p">)</span><span class="w"> </span><span class="py">as</span><span class="w"> </span><span class="py">c</span><span class="w"> </span><span class="py">ORDER</span><span class="w"> </span><span class="py">BY</span><span class="w"> </span><span class="py">c</span><span class="w"> </span><span class="py">DESC</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div><p>而因为这两个条件最终描述的是同一个字，所以它们是可以被写在一个路径下的：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-GraphQL" data-lang="GraphQL"><span class="c"># 有一个非第一个位置的字，拼音是 4 声，韵母是 ai，但不是爱</span><span class="w">
</span><span class="w"></span><span class="py">MATCH</span><span class="w"> </span><span class="p">(</span><span class="py">char0</span><span class="p">:</span><span class="nc">character</span><span class="p">)</span><span class="err">&lt;-</span><span class="p">[</span><span class="py">with_char_0</span><span class="p">:</span><span class="nc">with_character</span><span class="p">]</span><span class="err">-</span><span class="p">(</span><span class="py">x</span><span class="p">:</span><span class="nc">idiom</span><span class="p">)</span><span class="err">-</span><span class="p">[</span><span class="py">with_pinyin_0</span><span class="p">:</span><span class="nc">with_pinyin</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">pinyin_0</span><span class="p">:</span><span class="nc">character_pinyin</span><span class="p">)</span><span class="err">-</span><span class="p">[:</span><span class="nc">with_pinyin_part</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">final_part_0</span><span class="p">:</span><span class="nc">pinyin_part</span><span class="p">{</span><span class="py">part_type</span><span class="p">:</span><span class="w"> </span><span class="s">&#34;final&#34;</span><span class="p">})</span><span class="w">
</span><span class="w"></span><span class="nc">WHERE</span><span class="w"> </span><span class="py">id</span><span class="p">(</span><span class="py">final_part_0</span><span class="p">)</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="s">&#34;ai&#34;</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">pinyin_0</span><span class="err">.</span><span class="py">character_pinyin</span><span class="err">.</span><span class="py">tone</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="py">4</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">with_pinyin_0</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="py">0</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">with_char_0</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="py">0</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">id</span><span class="p">(</span><span class="py">char0</span><span class="p">)</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="sc">&#34;爱&#34;</span><span class="w">
</span><span class="w"></span><span class="c"># ...</span><span class="w">
</span><span class="w"></span><span class="py">RETURN</span><span class="w"> </span><span class="py">x</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div><p>更多的 <code>MATCH</code> 语法和例子细节，请大家参考文档：</p>
<ul>
<li>MATCH <a href="https://docs.nebula-graph.com.cn/3.0.0/3.ngql-guide/7.general-query-statements/2.match/" target="_blank" rel="noopener noreffer">https://docs.nebula-graph.com.cn/3.0.0/3.ngql-guide/7.general-query-statements/2.match/</a></li>
<li>图模式 <a href="https://docs.nebula-graph.com.cn/3.0.0/3.ngql-guide/1.nGQL-overview/3.graph-patterns/" target="_blank" rel="noopener noreffer">https://docs.nebula-graph.com.cn/3.0.0/3.ngql-guide/1.nGQL-overview/3.graph-patterns/</a></li>
<li>nGQL 命令 cheatsheet <a href="https://docs.nebula-graph.com.cn/3.0.0/2.quick-start/6.cheatsheet-for-ngql-command/" target="_blank" rel="noopener noreffer">https://docs.nebula-graph.com.cn/3.0.0/2.quick-start/6.cheatsheet-for-ngql-command/</a></li>
</ul>
<h2 id="可视化展示线索" class="headerLink">
    <a href="#%e5%8f%af%e8%a7%86%e5%8c%96%e5%b1%95%e7%a4%ba%e7%ba%bf%e7%b4%a2" class="header-mark"></a>4 可视化展示线索</h2><p>我们把每一个条件的匹配路径作为输出，利用 Nebula Graph 的可视化能力，可以得到：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-GraphQL" data-lang="GraphQL"><span class="c"># 有一个非第一个位置的字，拼音是 4 声，韵母是 ai，但不是爱</span><span class="w">
</span><span class="w"></span><span class="py">MATCH</span><span class="w"> </span><span class="py">p0</span><span class="p">=(</span><span class="py">char0</span><span class="p">:</span><span class="nc">character</span><span class="p">)</span><span class="err">&lt;-</span><span class="p">[</span><span class="py">with_char_0</span><span class="p">:</span><span class="nc">with_character</span><span class="p">]</span><span class="err">-</span><span class="p">(</span><span class="py">x</span><span class="p">:</span><span class="nc">idiom</span><span class="p">)</span><span class="err">-</span><span class="p">[</span><span class="py">with_pinyin_0</span><span class="p">:</span><span class="nc">with_pinyin</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">pinyin_0</span><span class="p">:</span><span class="nc">character_pinyin</span><span class="p">)</span><span class="err">-</span><span class="p">[:</span><span class="nc">with_pinyin_part</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">final_part_0</span><span class="p">:</span><span class="nc">pinyin_part</span><span class="p">{</span><span class="py">part_type</span><span class="p">:</span><span class="w"> </span><span class="s">&#34;final&#34;</span><span class="p">})</span><span class="w">
</span><span class="w"></span><span class="nc">WHERE</span><span class="w"> </span><span class="py">id</span><span class="p">(</span><span class="py">final_part_0</span><span class="p">)</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="s">&#34;ai&#34;</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">pinyin_0</span><span class="err">.</span><span class="py">character_pinyin</span><span class="err">.</span><span class="py">tone</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="py">4</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">with_pinyin_0</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="py">0</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">with_char_0</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="py">0</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">id</span><span class="p">(</span><span class="py">char0</span><span class="p">)</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="sc">&#34;爱&#34;</span><span class="w">
</span><span class="w"></span><span class="c"># 有一个一声的字，不在第二个位置</span><span class="w">
</span><span class="w"></span><span class="py">MATCH</span><span class="w"> </span><span class="py">p1</span><span class="p">=(</span><span class="py">x</span><span class="p">:</span><span class="nc">idiom</span><span class="p">)</span><span class="w"> </span><span class="err">-</span><span class="p">[</span><span class="py">with_pinyin_1</span><span class="p">:</span><span class="nc">with_pinyin</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">pinyin_1</span><span class="p">:</span><span class="nc">character_pinyin</span><span class="p">)</span><span class="w">
</span><span class="w"></span><span class="py">WHERE</span><span class="w"> </span><span class="py">pinyin_1</span><span class="err">.</span><span class="py">character_pinyin</span><span class="err">.</span><span class="py">tone</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="py">1</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">with_pinyin_1</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="py">1</span><span class="w">
</span><span class="w"></span><span class="c"># 有一个字韵母是 ing，不在第四个位置</span><span class="w">
</span><span class="w"></span><span class="py">MATCH</span><span class="w"> </span><span class="py">p2</span><span class="p">=(</span><span class="py">x</span><span class="p">:</span><span class="nc">idiom</span><span class="p">)</span><span class="w"> </span><span class="err">-</span><span class="p">[</span><span class="py">with_pinyin_2</span><span class="p">:</span><span class="nc">with_pinyin</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(:</span><span class="nc">character_pinyin</span><span class="p">)</span><span class="err">-</span><span class="p">[:</span><span class="nc">with_pinyin_part</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">final_part_2</span><span class="p">:</span><span class="nc">pinyin_part</span><span class="p">{</span><span class="py">part_type</span><span class="p">:</span><span class="w"> </span><span class="s">&#34;final&#34;</span><span class="p">})</span><span class="w">
</span><span class="w"></span><span class="nc">WHERE</span><span class="w"> </span><span class="py">id</span><span class="p">(</span><span class="py">final_part_2</span><span class="p">)</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="s">&#34;ing&#34;</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">with_pinyin_2</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="py">3</span><span class="w">
</span><span class="w"></span><span class="c"># 第四个字是二声</span><span class="w">
</span><span class="w"></span><span class="py">MATCH</span><span class="w"> </span><span class="py">p3</span><span class="p">=(</span><span class="py">x</span><span class="p">:</span><span class="nc">idiom</span><span class="p">)</span><span class="w"> </span><span class="err">-</span><span class="p">[</span><span class="py">with_pinyin_3</span><span class="p">:</span><span class="nc">with_pinyin</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">pinyin_3</span><span class="p">:</span><span class="nc">character_pinyin</span><span class="p">)</span><span class="w">
</span><span class="w"></span><span class="py">WHERE</span><span class="w"> </span><span class="py">pinyin_3</span><span class="err">.</span><span class="py">character_pinyin</span><span class="err">.</span><span class="py">tone</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="py">2</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">with_pinyin_3</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="py">3</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="py">RETURN</span><span class="w"> </span><span class="py">p0</span><span class="p">,</span><span class="py">p1</span><span class="p">,</span><span class="py">p2</span><span class="p">,</span><span class="py">p3</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div><p>在可视化工具的 Console 控制台里执行上边的语句之后，选择导入图探索，就可以看到</p>
<p></p>
<h2 id="下一步" class="headerLink">
    <a href="#%e4%b8%8b%e4%b8%80%e6%ad%a5" class="header-mark"></a>5 下一步</h2><p>如果大家是从本文第一次了解到 Nebula Graph 图数据库，那么大家可以下一步从 <a href="https://github.com/vesoft-inc/nebula" target="_blank" rel="noopener noreffer">Nebula Graph</a> 项目和 Nebula Graph 社区的官方 Bilibili 站点 👉🏻 <a href="https://space.bilibili.com/472621355" target="_blank" rel="noopener noreffer">https://space.bilibili.com/472621355</a> 了解更多有意思的入门知识。</p>
<p>另外，<a href="https://nebula-graph.com.cn/demo/" target="_blank" rel="noopener noreffer">这里</a>是 Nebula Graph 的官方线上试玩环境，大家可以照着<a href="https://docs.nebula-graph.com.cn/" target="_blank" rel="noopener noreffer">文档</a>，利用试玩环境尝鲜。</p>
<p>后边，Nebula Graph 会开展每天的汉兜 nGQL 体操活动，敬请关注哈！</p>
<p>Happy Graphing!</p>
<h2 id="附录搭建成语知识图谱" class="headerLink">
    <a href="#%e9%99%84%e5%bd%95%e6%90%ad%e5%bb%ba%e6%88%90%e8%af%ad%e7%9f%a5%e8%af%86%e5%9b%be%e8%b0%b1" class="header-mark"></a>6 附录：搭建成语知识图谱</h2><h3 id="收集生成图谱数据" class="headerLink">
    <a href="#%e6%94%b6%e9%9b%86%e7%94%9f%e6%88%90%e5%9b%be%e8%b0%b1%e6%95%b0%e6%8d%ae" class="header-mark"></a>6.1 收集、生成图谱数据</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ python3 graph_data_generator.py
</code></pre></td></tr></table>
</div>
</div><h3 id="导入数据到-nebula-graph-图数据库" class="headerLink">
    <a href="#%e5%af%bc%e5%85%a5%e6%95%b0%e6%8d%ae%e5%88%b0-nebula-graph-%e5%9b%be%e6%95%b0%e6%8d%ae%e5%ba%93" class="header-mark"></a>6.2 导入数据到 Nebula Graph 图数据库</h3><h4 id="部署图数据库" class="headerLink">
    <a href="#%e9%83%a8%e7%bd%b2%e5%9b%be%e6%95%b0%e6%8d%ae%e5%ba%93" class="header-mark"></a>6.2.1 部署图数据库</h4><blockquote>
<p>借助于 Nebula-Up <a href="https://github.com/wey-gu/nebula-up/" target="_blank" rel="noopener noreffer">https://github.com/wey-gu/nebula-up/</a> ，一行就可以了。</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ curl -fsSL nebula-up.siwei.io/install.sh <span class="p">|</span> bash -s -- v3.0.0
</code></pre></td></tr></table>
</div>
</div><p>部署成功的话，会看到这样的结果：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">┌────────────────────────────────────────┐
│ 🌌 Nebula-Graph Playground is Up now!  │
├────────────────────────────────────────┤
│                                        │
│ 🎉 Congrats! Your Nebula is Up now!    │
│    $ <span class="nb">cd</span> ~/.nebula-up                   │
│                                        │
│ 🌏 You can access it from browser:     │
│      http://127.0.0.1:7001             │
│      http://&lt;other_interface&gt;:7001     │
│                                        │
│ 🔥 Or access via Nebula Console:       │
│    $ ~/.nebula-up/console.sh           │
│                                        │
│    To remove the playground:           │
│    $ ~/.nebula-up/uninstall.sh         │
│                                        │
│ 🚀 Have Fun!                           │
│                                        │
└────────────────────────────────────────┘
</code></pre></td></tr></table>
</div>
</div><h4 id="图谱入库" class="headerLink">
    <a href="#%e5%9b%be%e8%b0%b1%e5%85%a5%e5%ba%93" class="header-mark"></a>6.2.2 图谱入库</h4><blockquote>
<p>借助于 Nebula-Importer <a href="https://github.com/vesoft-inc/nebula-importer/" target="_blank" rel="noopener noreffer">https://github.com/vesoft-inc/nebula-importer/</a> ，一行就可以了。</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker run --rm -ti <span class="se">\
</span><span class="se"></span>    --network<span class="o">=</span>nebula-docker-compose_nebula-net <span class="se">\
</span><span class="se"></span>    -v <span class="si">${</span><span class="nv">PWD</span><span class="si">}</span>/importer_conf.yaml:/root/importer_conf.yaml <span class="se">\
</span><span class="se"></span>    -v <span class="si">${</span><span class="nv">PWD</span><span class="si">}</span>/output:/root <span class="se">\
</span><span class="se"></span>    vesoft/nebula-importer:v3.0.0 <span class="se">\
</span><span class="se"></span>    --config /root/importer_conf.yaml
</code></pre></td></tr></table>
</div>
</div><p>大概一两分钟数据就导入成功了，命令也会正常退出。</p>
<blockquote>
<p>连到图数据库的 console</p>
</blockquote>
<p>进入 Console 的容器执行下边的命令：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ~/.nebula-up/console.sh

<span class="c1"># nebula-console -addr graphd -port 9669 -user root -p nebula</span>
</code></pre></td></tr></table>
</div>
</div><p>检查一下导入的数据：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[(</span><span class="k">none</span><span class="p">)]</span><span class="o">&gt;</span><span class="w"> </span><span class="k">show</span><span class="w"> </span><span class="n">spaces</span><span class="w">
</span><span class="w"></span><span class="o">+</span><span class="c1">--------------------+
</span><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="n">Name</span><span class="w">               </span><span class="o">|</span><span class="w">
</span><span class="w"></span><span class="o">+</span><span class="c1">--------------------+
</span><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;chinese_idiom&#34;</span><span class="w">    </span><span class="o">|</span><span class="w">
</span><span class="w"></span><span class="o">+</span><span class="c1">--------------------+
</span><span class="c1"></span><span class="w">
</span><span class="w"></span><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[(</span><span class="k">none</span><span class="p">)]</span><span class="o">&gt;</span><span class="w"> </span><span class="n">use</span><span class="w"> </span><span class="n">chinese_idiom</span><span class="w">
</span><span class="w"></span><span class="n">Execution</span><span class="w"> </span><span class="n">succeeded</span><span class="w"> </span><span class="p">(</span><span class="n">time</span><span class="w"> </span><span class="n">spent</span><span class="w"> </span><span class="mi">1510</span><span class="o">/</span><span class="mi">2329</span><span class="w"> </span><span class="n">us</span><span class="p">)</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="n">Fri</span><span class="p">,</span><span class="w"> </span><span class="mi">25</span><span class="w"> </span><span class="n">Feb</span><span class="w"> </span><span class="mi">2022</span><span class="w"> </span><span class="mi">08</span><span class="p">:</span><span class="mi">53</span><span class="p">:</span><span class="mi">11</span><span class="w"> </span><span class="n">UTC</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[</span><span class="n">chinese_idiom</span><span class="p">]</span><span class="o">&gt;</span><span class="w"> </span><span class="k">match</span><span class="w"> </span><span class="n">p</span><span class="o">=</span><span class="p">(</span><span class="err">成语</span><span class="p">:</span><span class="n">idiom</span><span class="p">)</span><span class="w"> </span><span class="k">return</span><span class="w"> </span><span class="n">p</span><span class="w"> </span><span class="k">limit</span><span class="w"> </span><span class="mi">2</span><span class="w">
</span><span class="w"></span><span class="o">+</span><span class="c1">------------------------------------------------------------------+
</span><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="n">p</span><span class="w">                                                                </span><span class="o">|</span><span class="w">
</span><span class="w"></span><span class="o">+</span><span class="c1">------------------------------------------------------------------+
</span><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="o">&lt;</span><span class="p">(</span><span class="s2">&#34;一丁不识&#34;</span><span class="w"> </span><span class="p">:</span><span class="n">idiom</span><span class="err">{</span><span class="n">pinyin</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;[&#39;yi1&#39;, &#39;ding1&#39;, &#39;bu4&#39;, &#39;shi2&#39;]&#34;</span><span class="err">}</span><span class="p">)</span><span class="o">&gt;</span><span class="w"> </span><span class="o">|</span><span class="w">
</span><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="o">&lt;</span><span class="p">(</span><span class="s2">&#34;一丝不挂&#34;</span><span class="w"> </span><span class="p">:</span><span class="n">idiom</span><span class="err">{</span><span class="n">pinyin</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;[&#39;yi1&#39;, &#39;si1&#39;, &#39;bu4&#39;, &#39;gua4&#39;]&#34;</span><span class="err">}</span><span class="p">)</span><span class="o">&gt;</span><span class="w">   </span><span class="o">|</span><span class="w">
</span><span class="w"></span><span class="o">+</span><span class="c1">------------------------------------------------------------------+
</span><span class="c1"></span><span class="w">
</span><span class="w"></span><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[</span><span class="n">chinese_idiom</span><span class="p">]</span><span class="o">&gt;</span><span class="w"> </span><span class="n">SUBMIT</span><span class="w"> </span><span class="n">JOB</span><span class="w"> </span><span class="n">STATS</span><span class="w">
</span><span class="w"></span><span class="o">+</span><span class="c1">------------+
</span><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="k">New</span><span class="w"> </span><span class="n">Job</span><span class="w"> </span><span class="n">Id</span><span class="w"> </span><span class="o">|</span><span class="w">
</span><span class="w"></span><span class="o">+</span><span class="c1">------------+
</span><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="mi">11</span><span class="w">         </span><span class="o">|</span><span class="w">
</span><span class="w"></span><span class="o">+</span><span class="c1">------------+
</span><span class="c1"></span><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[</span><span class="n">chinese_idiom</span><span class="p">]</span><span class="o">&gt;</span><span class="w"> </span><span class="k">SHOW</span><span class="w"> </span><span class="n">STATS</span><span class="w">
</span><span class="w"></span><span class="o">+</span><span class="c1">---------+--------------------+--------+
</span><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="k">Type</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="n">Name</span><span class="w">               </span><span class="o">|</span><span class="w"> </span><span class="k">Count</span><span class="w">  </span><span class="o">|</span><span class="w">
</span><span class="w"></span><span class="o">+</span><span class="c1">---------+--------------------+--------+
</span><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Tag&#34;</span><span class="w">   </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;character&#34;</span><span class="w">        </span><span class="o">|</span><span class="w"> </span><span class="mi">4847</span><span class="w">   </span><span class="o">|</span><span class="w">
</span><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Tag&#34;</span><span class="w">   </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;character_pinyin&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">1336</span><span class="w">   </span><span class="o">|</span><span class="w">
</span><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Tag&#34;</span><span class="w">   </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;idiom&#34;</span><span class="w">            </span><span class="o">|</span><span class="w"> </span><span class="mi">29503</span><span class="w">  </span><span class="o">|</span><span class="w">
</span><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Tag&#34;</span><span class="w">   </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;pinyin_part&#34;</span><span class="w">      </span><span class="o">|</span><span class="w"> </span><span class="mi">57</span><span class="w">     </span><span class="o">|</span><span class="w">
</span><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Edge&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;with_character&#34;</span><span class="w">   </span><span class="o">|</span><span class="w"> </span><span class="mi">116090</span><span class="w"> </span><span class="o">|</span><span class="w">
</span><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Edge&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;with_pinyin&#34;</span><span class="w">      </span><span class="o">|</span><span class="w"> </span><span class="mi">5943</span><span class="w">   </span><span class="o">|</span><span class="w">
</span><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Edge&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;with_pinyin_part&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">3290</span><span class="w">   </span><span class="o">|</span><span class="w">
</span><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Space&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;vertices&#34;</span><span class="w">         </span><span class="o">|</span><span class="w"> </span><span class="mi">35739</span><span class="w">  </span><span class="o">|</span><span class="w">
</span><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Space&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;edges&#34;</span><span class="w">            </span><span class="o">|</span><span class="w"> </span><span class="mi">125323</span><span class="w"> </span><span class="o">|</span><span class="w">
</span><span class="w"></span><span class="o">+</span><span class="c1">---------+--------------------+--------+
</span></code></pre></td></tr></table>
</div>
</div><h2 id="附录图建模的-schema-ngql" class="headerLink">
    <a href="#%e9%99%84%e5%bd%95%e5%9b%be%e5%bb%ba%e6%a8%a1%e7%9a%84-schema-ngql" class="header-mark"></a>7 附录：图建模的 Schema nGQL</h2><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="k">CREATE</span><span class="w"> </span><span class="k">SPACE</span><span class="w"> </span><span class="k">IF</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">EXISTS</span><span class="w"> </span><span class="n">chinese_idiom</span><span class="p">(</span><span class="n">partition_num</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span><span class="w"> </span><span class="n">replica_factor</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="n">vid_type</span><span class="o">=</span><span class="n">FIXED_STRING</span><span class="p">(</span><span class="mi">24</span><span class="p">));</span><span class="w">
</span><span class="w"></span><span class="n">USE</span><span class="w"> </span><span class="n">chinese_idiom</span><span class="p">;</span><span class="w">
</span><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="err">创建点的类型</span><span class="w">
</span><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="n">idiom</span><span class="p">(</span><span class="n">pinyin</span><span class="w"> </span><span class="n">string</span><span class="p">);</span><span class="w"> </span><span class="o">#</span><span class="err">成语</span><span class="w">
</span><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="nb">character</span><span class="p">();</span><span class="w"> </span><span class="o">#</span><span class="err">汉字</span><span class="w">
</span><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="n">character_pinyin</span><span class="p">(</span><span class="n">tone</span><span class="w"> </span><span class="nb">int</span><span class="p">);</span><span class="w"> </span><span class="o">#</span><span class="err">单字的拼音</span><span class="w">
</span><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="n">pinyin_part</span><span class="p">(</span><span class="n">part_type</span><span class="w"> </span><span class="n">string</span><span class="p">);</span><span class="w"> </span><span class="o">#</span><span class="err">拼音的声部</span><span class="w">
</span><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="err">创建边的类型</span><span class="w">
</span><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="n">with_character</span><span class="p">(</span><span class="k">position</span><span class="w"> </span><span class="nb">int</span><span class="p">);</span><span class="w"> </span><span class="o">#</span><span class="err">包含汉字</span><span class="w">
</span><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="n">with_pinyin</span><span class="p">(</span><span class="k">position</span><span class="w"> </span><span class="nb">int</span><span class="p">);</span><span class="w"> </span><span class="o">#</span><span class="err">读作</span><span class="w">
</span><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="n">with_pinyin_part</span><span class="p">(</span><span class="n">part_type</span><span class="w"> </span><span class="n">string</span><span class="p">);</span><span class="w"> </span><span class="o">#</span><span class="err">包含声部</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>Nebula Graph 索引详解</title>
    <link>https://siwei.io/nebula-index-explained/</link>
    <pubDate>Sun, 20 Feb 2022 16:35:53 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/nebula-index-explained/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p><code>index not found</code>?找不到索引？为什么我要创建 Nebula Graph 索引？什么时候要用到 Nebula Graph 原生索引，一文把这些搞清楚。</p>
</blockquote>
<p>Nebula Graph 的索引其实和传统的关系型数据库中的索引很像，但是又有一些容易让人疑惑的区别。刚开始了解 Nebula 的同学会疑惑于：</p>
<ul>
<li>不清楚 Nebula Graph 图数据库中的索引到的是什么概念</li>
<li>我应该什么时候使用 Nebula Graph 索引</li>
<li>Nebula Graph 索引怎么影响到写入性能</li>
</ul>
<p>这篇文章里，我们就把这些问题回答好。</p>
<h2 id="到底-nebula-graph-索引是什么" class="headerLink">
    <a href="#%e5%88%b0%e5%ba%95-nebula-graph-%e7%b4%a2%e5%bc%95%e6%98%af%e4%bb%80%e4%b9%88" class="header-mark"></a>1 到底 Nebula Graph 索引是什么</h2><p>简而言之，Nebula Graph 索引是用来，且只用来针对纯属性条件出发查询场景的</p>
<ul>
<li>图游走（walk）查询中的属性条件过滤不需要它</li>
<li>纯属性条件出发查询（注：非采样情况）必须创建索引</li>
</ul>
<h3 id="纯属性条件出发查询" class="headerLink">
    <a href="#%e7%ba%af%e5%b1%9e%e6%80%a7%e6%9d%a1%e4%bb%b6%e5%87%ba%e5%8f%91%e6%9f%a5%e8%af%a2" class="header-mark"></a>1.1 纯属性条件出发查询</h3><p>我们知道在传统关系型数据库中，索引是对表数据的一个针对特定<strong>列</strong>重排序的副本，它用来<strong>加速特定列过滤条件的读查询</strong>并带来了额外的数据写入（加速而非这样查询的必须前提）。</p>
<p>在 Nebula Graph 图数据库里，索引则是对<strong>点、边特定属性数据</strong>重排序的副本，用来提供<strong>纯属性条件出发查询</strong>（如下边的查询：从只给定了点边属性条件，而非点的 ID 出发去获取图数据）</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="o">####</span><span class="w"> </span><span class="err">必须</span><span class="w"> </span><span class="n">Nebula</span><span class="w"> </span><span class="n">Graph</span><span class="w"> </span><span class="err">索引存在的查询</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="n">query</span><span class="w"> </span><span class="mi">0</span><span class="w"> </span><span class="err">纯属性条件出发查询</span><span class="w">
</span><span class="w"></span><span class="n">LOOKUP</span><span class="w"> </span><span class="k">ON</span><span class="w"> </span><span class="n">tag1</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="n">col1</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="k">AND</span><span class="w"> </span><span class="n">col2</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">&#34;foo&#34;</span><span class="w"> </span><span class="err">\</span><span class="w">
</span><span class="w">    </span><span class="n">YIELD</span><span class="w"> </span><span class="n">tag1</span><span class="p">.</span><span class="n">col1</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="n">col1</span><span class="p">,</span><span class="w"> </span><span class="n">tag1</span><span class="p">.</span><span class="n">col3</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="n">col3</span><span class="p">;</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="n">query</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="err">纯属性条件出发查询</span><span class="w">
</span><span class="w"></span><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">v</span><span class="p">:</span><span class="n">player</span><span class="w"> </span><span class="err">{</span><span class="w"> </span><span class="n">name</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;Tim Duncan&#39;</span><span class="w"> </span><span class="err">}</span><span class="p">)</span><span class="c1">--&gt;(v2:player) \
</span><span class="c1"></span><span class="w">        </span><span class="k">RETURN</span><span class="w"> </span><span class="n">v2</span><span class="p">.</span><span class="n">player</span><span class="p">.</span><span class="n">name</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">Name</span><span class="p">;</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div><p>上边这两个纯属性条件出发查询就是字面意思的”根据给定的属性条件获取点或者边本身“ ，反面的例子则是给定了点的 ID：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="o">####</span><span class="w"> </span><span class="err">不基于索引的查询</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="n">query</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span><span class="w"> </span><span class="err">从给定的点做的游走查询</span><span class="w"> </span><span class="n">vertex</span><span class="w"> </span><span class="n">VID</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;player100&#34;</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="k">GO</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="s2">&#34;player100&#34;</span><span class="w"> </span><span class="n">OVER</span><span class="w"> </span><span class="n">follow</span><span class="w"> </span><span class="n">REVERSELY</span><span class="w"> </span><span class="err">\</span><span class="w">
</span><span class="w">        </span><span class="n">YIELD</span><span class="w"> </span><span class="n">src</span><span class="p">(</span><span class="n">edge</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">id</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="err">\</span><span class="w">
</span><span class="w">    </span><span class="k">GO</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="err">$</span><span class="o">-</span><span class="p">.</span><span class="n">id</span><span class="w"> </span><span class="n">OVER</span><span class="w"> </span><span class="n">serve</span><span class="w"> </span><span class="err">\</span><span class="w">
</span><span class="w">        </span><span class="k">WHERE</span><span class="w"> </span><span class="n">properties</span><span class="p">(</span><span class="err">$</span><span class="o">^</span><span class="p">).</span><span class="n">age</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">20</span><span class="w"> </span><span class="err">\</span><span class="w">
</span><span class="w">        </span><span class="n">YIELD</span><span class="w"> </span><span class="n">properties</span><span class="p">(</span><span class="err">$</span><span class="o">^</span><span class="p">).</span><span class="n">name</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">FriendOf</span><span class="p">,</span><span class="w"> </span><span class="n">properties</span><span class="p">(</span><span class="err">$$</span><span class="p">).</span><span class="n">name</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">Team</span><span class="p">;</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="n">query</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span><span class="w"> </span><span class="err">从给定的点做的游走查询</span><span class="w"> </span><span class="n">vertex</span><span class="w"> </span><span class="n">VID</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;player101&#34;</span><span class="w"> </span><span class="err">或者</span><span class="w"> </span><span class="s2">&#34;player102&#34;</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">v</span><span class="p">:</span><span class="n">player</span><span class="w"> </span><span class="err">{</span><span class="w"> </span><span class="n">name</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;Tim Duncan&#39;</span><span class="w"> </span><span class="err">}</span><span class="p">)</span><span class="c1">--(v2) \
</span><span class="c1"></span><span class="w">        </span><span class="k">WHERE</span><span class="w"> </span><span class="n">id</span><span class="p">(</span><span class="n">v2</span><span class="p">)</span><span class="w"> </span><span class="k">IN</span><span class="w"> </span><span class="p">[</span><span class="s2">&#34;player101&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;player102&#34;</span><span class="p">]</span><span class="w"> </span><span class="err">\</span><span class="w">
</span><span class="w">        </span><span class="k">RETURN</span><span class="w"> </span><span class="n">v2</span><span class="p">.</span><span class="n">player</span><span class="p">.</span><span class="n">name</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">Name</span><span class="p">;</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div><p>我们仔细看前边的 <code>query 1</code> 和 <code>query 3</code>，尽管语句中条件都有针对 tag 为 player 的过滤： <code>{ name: 'Tim Duncan' }</code> ：</p>
<ul>
<li>
<p><code>query 3</code>之中不需要索引，因为它可以：</p>
<ul>
<li>更直接的从已知的 <code>v2</code> 顶点： <code>[&quot;player101&quot;, &quot;player102&quot;]</code></li>
<li>向外扩展、游走（GetNeighbors() 获得边的另一端的点，然后GetVertices() 得到下一跳的 <code>v</code>），根据 v.player.name 过滤掉不要的数据</li>
</ul>
</li>
<li>
<p><code>query 1</code> 则不同，它因为没有任何给定的顶点 ID：</p>
<ul>
<li>只能从属性条件入手，<code>{ name: 'Tim Duncan' }</code>，在按照 name 排序了的索引数据中先找到符合的点：IndexScan() 得到 <code>v</code></li>
<li>然后再从 <code>v</code> 做 GetNeighbors() 获得边的另一端 的 <code>v2</code> ，在通过 GetVertices() 去获得下一跳 <code>v2</code> 中的数据</li>
</ul>
</li>
</ul>
<p>其实，这里的关键就是在于是查询是否存在给定的顶点 ID（Vertex ID），下边两个查询的执行计划里更清晰地比较了他们的区别：</p>
<table>
<thead>
<tr>
<th><code>query 1</code>, 需要基于索引，纯属性条件出发查询</th>
<th><code>query 3</code>, 从已知 VID，不需要索引</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="为什么纯属性条件出发查询里必须要索引呢" class="headerLink">
    <a href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e7%ba%af%e5%b1%9e%e6%80%a7%e6%9d%a1%e4%bb%b6%e5%87%ba%e5%8f%91%e6%9f%a5%e8%af%a2%e9%87%8c%e5%bf%85%e9%a1%bb%e8%a6%81%e7%b4%a2%e5%bc%95%e5%91%a2" class="header-mark"></a>1.2 为什么纯属性条件出发查询里必须要索引呢？</h3><p>因为 Nebula Graph 在存储数据的时候，它的结构是面向分布式与关联关系设计的，类似表结构数据库中无索引的全扫描条件搜索实际上更加昂贵，所以设计上被有意禁止了。</p>
<blockquote>
<p>注: 如果不追求全部数据，只要采样一部分，3.0 里之后是支持不强制索引 LIMIT <n> 的情况的，如下查询（有 LIMIT）不需要索引：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">MATCH (v:player { name: &#39;Tim Duncan&#39; })--&gt;(v2:player) \
        RETURN v2.player.name AS Name LIMIT 3;
</code></pre></td></tr></table>
</div>
</div></blockquote>
<h3 id="为什么只有纯属性条件出发查询" class="headerLink">
    <a href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e5%8f%aa%e6%9c%89%e7%ba%af%e5%b1%9e%e6%80%a7%e6%9d%a1%e4%bb%b6%e5%87%ba%e5%8f%91%e6%9f%a5%e8%af%a2" class="header-mark"></a>1.3 为什么只有纯属性条件出发查询</h3><p>我们比较一下正常的图查询 <strong>graph-queries</strong> 和纯属性条件出发查询 <strong>pure-prop-condition queries</strong>：</p>
<ul>
<li>graph-queries： 如 <code>query 2</code> 、 <code>query 3</code>是沿着边一路找到特定路径条件的扩展游走</li>
<li>pure-prop-condition queries：如 <code>query 0</code> and <code>query 1</code>  是只通过一定属性条件（或者是无限制条件）找到满足的点、边</li>
</ul>
<p>而在 Nebula Graph 里，graph-queries 在扩展的时候，图的原始数据已经按照 VID（点和边都是）排序过了（或者说在数据里已经索引过了），这个排序带来连续存储（物理上临接）使得扩展游走本身就是优化、很快的。</p>
<p>所以：</p>
<blockquote>
<p>Nebula Graph 索引是为了从给定属性条件查点、边的一份属性数据的排序。</p>
</blockquote>
<h2 id="一些-nebula-graph-索引的设计细节" class="headerLink">
    <a href="#%e4%b8%80%e4%ba%9b-nebula-graph-%e7%b4%a2%e5%bc%95%e7%9a%84%e8%ae%be%e8%ae%a1%e7%bb%86%e8%8a%82" class="header-mark"></a>2 一些 Nebula Graph 索引的设计细节</h2><p>为了更好理解索引的限制、代价、能力，咱们来解释更多他的细节</p>
<ul>
<li>
<p>Nebula Graph 索引是在本地（不是分开、中心化）和点数据被一起存储、分片的。</p>
</li>
<li>
<p>它只支持左匹配</p>
<ul>
<li>因为底层是 RocksDB Prefix Scan</li>
</ul>
</li>
<li>
<p>性能代价:</p>
<ul>
<li>写入时候的路径：不只是多一分数据，为了保证一致性，还有昂贵的读操作</li>
<li>读路径：基于规则的优化选择索引，Fan Out 到所有 StorageD</li>
</ul>
</li>
</ul>
<p>这些信息也在我的<a href="https://www.siwei.io/sketch-notes/" target="_blank" rel="noopener noreffer">手绘图和视频</a>里可以看到：</p>
<p></p>
<blockquote>
<p>因为左匹配的设计，在有更复杂的针对纯属性条件出发查询里涉及到通配、REGEXP这样的全文搜索情况，Nebula Graph 提供了全文索引的功能，它是利用 Raft Listener 去异步将数据写到外部 Elasticsearch 集群之中，并在查询的时候去查 ES 去做到的，见<a href="https://docs.nebula-graph.com.cn/3.0.0/4.deployment-and-installation/6.deploy-text-based-index/2.deploy-es/" target="_blank" rel="noopener noreffer">文档</a>。</p>
</blockquote>
<p>在这个手绘图中，我们还可以看出</p>
<ul>
<li>Write path
<ul>
<li>写入索引数据是同步操作的</li>
</ul>
</li>
<li>Read path
<ul>
<li>这部分画了一个 RBO 的例子，查询里的规则假设 col2 相等匹配排在左边的情况下，性能优于 col1 的大小比较匹配，所以选择了第二个索引</li>
<li>选好了索引之后，扫描索引的请求被 fan out 到存储节点上，这其中有些过滤条件比如 top n 是可以下推的</li>
</ul>
</li>
</ul>
<p>结论：</p>
<ul>
<li>因为写入的代价，只有必须用索引的时候采用，如果采样查询能满足读的要求，可以不创建索引而用 LIMIT <n>。</li>
<li>索引有左匹配的限制
<ul>
<li>符合查询的顺序要仔细设计</li>
<li>有时候需要使用全文索引 <a href="https://docs.nebula-graph.com.cn/3.0.0/4.deployment-and-installation/6.deploy-text-based-index/2.deploy-es/" target="_blank" rel="noopener noreffer">full-text index</a>。</li>
</ul>
</li>
</ul>
<h2 id="索引的使用" class="headerLink">
    <a href="#%e7%b4%a2%e5%bc%95%e7%9a%84%e4%bd%bf%e7%94%a8" class="header-mark"></a>3 索引的使用</h2><p>具体要参考<a href="https://docs.nebula-graph.io/3.0.0/3.ngql-guide/14.native-index-statements/" target="_blank" rel="noopener noreffer">索引文档</a>一些要点是：</p>
<ul>
<li>
<p>在 tag 或者 edge type 上针对想要被条件反查点边的属性创建索引</p>
<ul>
<li><code>CREATE INDEX</code></li>
</ul>
</li>
<li>
<p>创建索引之后的索引部分数据会同步写入，但是如果创建索引之前已经有的点边数据对应的索引是需要明确指定去创建的，这是一个异步的 job：</p>
<ul>
<li><code>REBUILD INDEX</code></li>
</ul>
</li>
<li>
<p>触发了异步的 <code>REBUILD INDEX</code> 之后，可以查询状态：</p>
<ul>
<li><code>SHOW INDEX STATUS</code></li>
</ul>
</li>
<li>
<p>利用到索引的查询可以是 LOOKUP，并且常常可以借助管道符在此之上做拓展查询（Graph Query）：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="n">LOOKUP</span><span class="w"> </span><span class="k">ON</span><span class="w"> </span><span class="n">player</span><span class="w"> </span><span class="err">\</span><span class="w">
</span><span class="w">  </span><span class="k">WHERE</span><span class="w"> </span><span class="n">player</span><span class="p">.</span><span class="n">name</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">&#34;Kobe Bryant&#34;</span><span class="err">\</span><span class="w">
</span><span class="w">  </span><span class="n">YIELD</span><span class="w"> </span><span class="n">id</span><span class="p">(</span><span class="n">vertex</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">VertexID</span><span class="p">,</span><span class="w"> </span><span class="n">properties</span><span class="p">(</span><span class="n">vertex</span><span class="p">).</span><span class="n">name</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">name</span><span class="w"> </span><span class="o">|</span><span class="err">\</span><span class="w">
</span><span class="w">  </span><span class="k">GO</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="err">$</span><span class="o">-</span><span class="p">.</span><span class="n">VertexID</span><span class="w"> </span><span class="n">OVER</span><span class="w"> </span><span class="n">serve</span><span class="w"> </span><span class="err">\</span><span class="w">
</span><span class="w">  </span><span class="n">YIELD</span><span class="w"> </span><span class="err">$</span><span class="o">-</span><span class="p">.</span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="n">properties</span><span class="p">(</span><span class="n">edge</span><span class="p">).</span><span class="n">start_year</span><span class="p">,</span><span class="w"> </span><span class="n">properties</span><span class="p">(</span><span class="n">edge</span><span class="p">).</span><span class="n">end_year</span><span class="p">,</span><span class="w"> </span><span class="n">properties</span><span class="p">(</span><span class="err">$$</span><span class="p">).</span><span class="n">name</span><span class="p">;</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>也可以是 MATCH ，这里边 <code>v</code> 是通过索引得到的，而 <code>v2</code> 则是在数据（非索引）部分拓展查询获得的。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">MATCH (v:player{name:&#34;Tim Duncan&#34;})--(v2:player) \
  RETURN v2.player.name AS Name;
</code></pre></td></tr></table>
</div>
</div></li>
</ul>
<h2 id="回顾" class="headerLink">
    <a href="#%e5%9b%9e%e9%a1%be" class="header-mark"></a>4 回顾</h2><ul>
<li>Nebula Graph 索引在只提供属性条件情况下通过对属性的排序副本扫描查点、边</li>
<li>Nebula Graph 索引<strong>不是</strong>用来图拓展查询的</li>
<li>Nebula Graph 索引是左匹配，不是用来做模糊全文搜索的</li>
<li>Nebula Graph 索引在写入时候有性能代价</li>
<li>记得如果创建 Nebula Graph 索引之前已经有相应点边上的数据，要重建索引</li>
</ul>
<p>Happy Graphing!</p>
<p>Feture image credit to <a href="https://unsplash.com/photos/ZiQkhI7417A" target="_blank" rel="noopener noreffer">Alina</a></p>
]]></description>
</item></channel>
</rss>
