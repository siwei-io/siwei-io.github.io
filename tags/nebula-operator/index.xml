<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>nebula-operator - 标签 - siwei.io</title>
        <link>https://siwei.io/tags/nebula-operator/</link>
        <description>nebula-operator - 标签 - siwei.io</description>
        <generator>Hugo -- gohugo.io</generator><managingEditor>weyl.gu@gmail.com (Wey Gu)</managingEditor>
            <webMaster>weyl.gu@gmail.com (Wey Gu)</webMaster><lastBuildDate>Mon, 14 Feb 2022 18:47:53 &#43;0800</lastBuildDate><atom:link href="https://siwei.io/tags/nebula-operator/" rel="self" type="application/rss+xml" /><item>
    <title>为什么我的 Nebula-Spark-Connector、Nebula-Algorithm 连不上 K8s 部署的 Nebula Graph 集群？</title>
    <link>https://siwei.io/nebula-algo-spark-k8s/</link>
    <pubDate>Mon, 14 Feb 2022 18:47:53 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/nebula-algo-spark-k8s/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/nebula-algo-spark-k8s/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p>一文了解 K8s 部署的 Nebula Graph 集群的 Nebula-Algorithm 使用方法。</p>
</blockquote>
<h2 id="步骤" class="headerLink">
    <a href="#%e6%ad%a5%e9%aa%a4" class="header-mark"></a>1 步骤</h2><p>最方便的方法是将 Nebula Algorithm/ Spark 运行在与 Nebula-Operator 相同的网络命名空间里，将 <code>show hosts meta</code> 的 MetaD <code>域名:端口</code> 格式的地址填进配置里就可以了。</p>
<blockquote>
<p>注：需要 2.6.2 或者更新的版本，Spark-Connector/Algorithm 才支持域名形式的 MetaD 地址。</p>
</blockquote>
<ul>
<li>获取 MetaD 地址</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="o">(</span>root@nebula<span class="o">)</span> <span class="o">[(</span>none<span class="o">)]</span>&gt; show hosts meta
+------------------------------------------------------------------+------+----------+--------+--------------+---------+
<span class="p">|</span> Host                                                             <span class="p">|</span> Port <span class="p">|</span> Status   <span class="p">|</span> Role   <span class="p">|</span> Git Info Sha <span class="p">|</span> Version <span class="p">|</span>
+------------------------------------------------------------------+------+----------+--------+--------------+---------+
<span class="p">|</span> <span class="s2">&#34;nebula-metad-0.nebula-metad-headless.default.svc.cluster.local&#34;</span> <span class="p">|</span> <span class="m">9559</span> <span class="p">|</span> <span class="s2">&#34;ONLINE&#34;</span> <span class="p">|</span> <span class="s2">&#34;META&#34;</span> <span class="p">|</span> <span class="s2">&#34;d113f4a&#34;</span>    <span class="p">|</span> <span class="s2">&#34;2.6.2&#34;</span> <span class="p">|</span>
+------------------------------------------------------------------+------+----------+--------+--------------+---------+
Got <span class="m">1</span> rows <span class="o">(</span><span class="nb">time</span> spent 1378/2598 us<span class="o">)</span>

Mon, <span class="m">14</span> Feb <span class="m">2022</span> 08:22:33 UTC
</code></pre></td></tr></table>
</div>
</div><ul>
<li>填写 Algorithm 的配置文件</li>
</ul>
<blockquote>
<p>Ref: <a href="https://github.com/vesoft-inc/nebula-algorithm/blob/master/nebula-algorithm/src/main/resources/application.conf" target="_blank" rel="noopener noreferrer">https://github.com/vesoft-inc/nebula-algorithm/blob/master/nebula-algorithm/src/main/resources/application.conf</a></p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-toml" data-lang="toml"><span class="c"># ...</span>
  <span class="nx">nebula</span><span class="err">:</span> <span class="p">{</span>
    <span class="c"># algo&#39;s data source from Nebula. If data.source is nebula, then this nebula.read config can be valid.</span>
    <span class="nx">read</span><span class="err">:</span> <span class="p">{</span>
        <span class="c"># Nebula metad server address, multiple addresses are split by English comma</span>
        <span class="nx">metaAddress</span><span class="err">:</span> <span class="s2">&#34;nebula-metad-0.nebula-metad-headless.default.svc.cluster.local:9559&#34;</span>
<span class="c">#...</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li>或者是调用 spark-connector 的代码</li>
</ul>
<blockquote>
<p>Ref: <a href="https://github.com/vesoft-inc/nebula-spark-connector" target="_blank" rel="noopener noreferrer">https://github.com/vesoft-inc/nebula-spark-connector</a></p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-scala" data-lang="scala">  <span class="k">val</span> <span class="n">config</span> <span class="k">=</span> <span class="nc">NebulaConnectionConfig</span>
    <span class="o">.</span><span class="n">builder</span><span class="o">()</span>
    <span class="o">.</span><span class="n">withMetaAddress</span><span class="o">(</span><span class="s">&#34;nebula-metad-0.nebula-metad-headless.default.svc.cluster.local:9559&#34;</span><span class="o">)</span>
    <span class="o">.</span><span class="n">withConenctionRetry</span><span class="o">(</span><span class="mi">2</span><span class="o">)</span>
    <span class="o">.</span><span class="n">build</span><span class="o">()</span>
  <span class="k">val</span> <span class="n">nebulaReadVertexConfig</span><span class="k">:</span> <span class="kt">ReadNebulaConfig</span> <span class="o">=</span> <span class="nc">ReadNebulaConfig</span>
    <span class="o">.</span><span class="n">builder</span><span class="o">()</span>
    <span class="o">.</span><span class="n">withSpace</span><span class="o">(</span><span class="s">&#34;foo_bar_space&#34;</span><span class="o">)</span>
    <span class="o">.</span><span class="n">withLabel</span><span class="o">(</span><span class="s">&#34;person&#34;</span><span class="o">)</span>
    <span class="o">.</span><span class="n">withNoColumn</span><span class="o">(</span><span class="kc">false</span><span class="o">)</span>
    <span class="o">.</span><span class="n">withReturnCols</span><span class="o">(</span><span class="nc">List</span><span class="o">(</span><span class="s">&#34;birthday&#34;</span><span class="o">))</span>
    <span class="o">.</span><span class="n">withLimit</span><span class="o">(</span><span class="mi">10</span><span class="o">)</span>
    <span class="o">.</span><span class="n">withPartitionNum</span><span class="o">(</span><span class="mi">10</span><span class="o">)</span>
    <span class="o">.</span><span class="n">build</span><span class="o">()</span>
  <span class="k">val</span> <span class="n">vertex</span> <span class="k">=</span> <span class="n">spark</span><span class="o">.</span><span class="n">read</span><span class="o">.</span><span class="n">nebula</span><span class="o">(</span><span class="n">config</span><span class="o">,</span> <span class="n">nebulaReadVertexConfig</span><span class="o">).</span><span class="n">loadVerticesToDF</span><span class="o">()</span>
</code></pre></td></tr></table>
</div>
</div><p>看起来非常简单，那么，为什么这么简单的过程却值得一篇文章呢？</p>
<h3 id="容易忽略的问题" class="headerLink">
    <a href="#%e5%ae%b9%e6%98%93%e5%bf%bd%e7%95%a5%e7%9a%84%e9%97%ae%e9%a2%98" class="header-mark"></a>1.1 容易忽略的问题</h3><p>这里的问题在于：</p>
<p>a. 它隐含地需要保证 StorageD 的地址能被 spark 环境访问；</p>
<p>b. 但是这些 StorageD 地址是从 MetaD 获取的；</p>
<p>c. Nebula K8s Operator 里，MetaD 中存储的 StorageD 地址（服务发现）的来源是 StorageD 的配置文件，而它是 k8s 的内部地址。</p>
<h3 id="背景知识" class="headerLink">
    <a href="#%e8%83%8c%e6%99%af%e7%9f%a5%e8%af%86" class="header-mark"></a>1.2 背景知识</h3><p><strong>a.</strong> 的理由比较直接，和 nebula 的架构有关：图的数据都存在 Storage Service 之中，通常用语句的查询是透过 Graph Service 来透传，只需要 GraphD 的连接就足够，而 Spark-Connector 使用 Nebula Graph 的场景是扫描全图或者子图，这时候计算存储分离的设计使得我们可以绕过查询、计算层直接高效读取图数据。</p>
<p>那么问题来了，为什么需要、且只需要 MetaD 的地址呢？</p>
<p>这也是和架构有关，Meta Service 里包含了全图的分布数据与分布式的 Storage Service 的各个分片和实例的分布，所以一方面因为只有 Meta 才有全图的信息（需要），另一方面因为从 Meta 可以获得这部分信息（只需要）。到这里 <strong>b.</strong> 的答案也有了。</p>
<ul>
<li>详细的 Nebula Graph 架构信息可以参考博客系列文章：<a href="https://nebula-graph.com.cn/tags/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/" target="_blank" rel="noopener noreferrer">nebula-graph.com.cn/tags/架构设计</a></li>
<li>另外请确保您已经读了架构介绍的文档哦：<a href="https://docs.nebula-graph.com.cn/3.0.0/1.introduction/3.nebula-graph-architecture/1.architecture-overview/" target="_blank" rel="noopener noreferrer">Nebula 架构总览</a></li>
</ul>
<p><figure><a class="lightgallery" href="https://docs-cdn.nebula-graph.com.cn/docs-2.0/1.introduction/2.nebula-graph-architecture/nebula-graph-architecture-1.png" title="https://docs-cdn.nebula-graph.com.cn/docs-2.0/1.introduction/2.nebula-graph-architecture/nebula-graph-architecture-1.png" data-thumbnail="https://docs-cdn.nebula-graph.com.cn/docs-2.0/1.introduction/2.nebula-graph-architecture/nebula-graph-architecture-1.png">
        <img
            
            loading="lazy"
            src="https://docs-cdn.nebula-graph.com.cn/docs-2.0/1.introduction/2.nebula-graph-architecture/nebula-graph-architecture-1.png"
            srcset="https://docs-cdn.nebula-graph.com.cn/docs-2.0/1.introduction/2.nebula-graph-architecture/nebula-graph-architecture-1.png, https://docs-cdn.nebula-graph.com.cn/docs-2.0/1.introduction/2.nebula-graph-architecture/nebula-graph-architecture-1.png 1.5x, https://docs-cdn.nebula-graph.com.cn/docs-2.0/1.introduction/2.nebula-graph-architecture/nebula-graph-architecture-1.png 2x"
            sizes="auto"
            alt="https://docs-cdn.nebula-graph.com.cn/docs-2.0/1.introduction/2.nebula-graph-architecture/nebula-graph-architecture-1.png">
    </a></figure></p>
<p>下面我们看看 <strong>c.</strong></p>
<blockquote>
<p>c. Nebula K8s Operator 里，MetaD 中存储的 StorageD 地址（服务发现）的来源是 StorageD 的配置文件，而它是 k8s 的内部地址。</p>
</blockquote>
<p>这和 Nebula Graph 里的服务发现机制有关：在 Nebula Graph 集群中，Graph Service 和 Storage Service 都是通过心跳将自己的信息上报给 Meta Service 的，而这其中服务自身的地址的来源则来自于他们相应的配置文件中的网络配置。</p>
<ul>
<li>
<p>关于服务自身的地址配置请参考文档：<a href="https://docs.nebula-graph.com.cn/3.0.0/5.configurations-and-logs/1.configurations/4.storage-config/#networking" target="_blank" rel="noopener noreferrer">Storage networking 配置</a></p>
</li>
<li>
<p>关于服务发现详细的信息请参考四王的文章：<a href="https://nebula-graph.com.cn/posts/cluster-communication-heartbeat/" target="_blank" rel="noopener noreferrer">图数据库 Nebula Graph 集群通信：从心跳说起</a>。</p>
</li>
</ul>
<p><figure><a class="lightgallery" href="https://www-cdn.nebula-graph.com.cn/nebula-blog/nebula-graph-metad-storaged-graphd-v-r-family.png" title="metad storaged graphd 通信" data-thumbnail="https://www-cdn.nebula-graph.com.cn/nebula-blog/nebula-graph-metad-storaged-graphd-v-r-family.png">
        <img
            
            loading="lazy"
            src="https://www-cdn.nebula-graph.com.cn/nebula-blog/nebula-graph-metad-storaged-graphd-v-r-family.png"
            srcset="https://www-cdn.nebula-graph.com.cn/nebula-blog/nebula-graph-metad-storaged-graphd-v-r-family.png, https://www-cdn.nebula-graph.com.cn/nebula-blog/nebula-graph-metad-storaged-graphd-v-r-family.png 1.5x, https://www-cdn.nebula-graph.com.cn/nebula-blog/nebula-graph-metad-storaged-graphd-v-r-family.png 2x"
            sizes="auto"
            alt="metad storaged graphd 通信">
    </a></figure></p>
<p>最后，我们知道 Nebula Operator 是一个在 K8s 集群中按照配置，自动创建、维护、扩缩容 Nebula 集群的 K8s 控制面的应用，它需要抽象一部分内部资源相关的配置，这就包括了 GraphD 和 StorageD 实例的实际地址，他们是被配置的地址实际上是 <a href="https://kubernetes.io/zh/docs/concepts/services-networking/service/#headless-services" target="_blank" rel="noopener noreferrer">headless service 地址</a>。</p>
<p>而这些地址（如下）默认是没法被 k8s 外部网络访问的，所以针对 GraphD、MetaD 我们可以方便创建服务将其暴露出来。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[(</span><span class="k">none</span><span class="p">)]</span><span class="o">&gt;</span><span class="w"> </span><span class="k">show</span><span class="w"> </span><span class="n">hosts</span><span class="w"> </span><span class="n">meta</span><span class="w">
</span><span class="w"></span><span class="o">+</span><span class="c1">------------------------------------------------------------------+------+----------+--------+--------------+---------+
</span><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="k">Host</span><span class="w">                                                             </span><span class="o">|</span><span class="w"> </span><span class="n">Port</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Status</span><span class="w">   </span><span class="o">|</span><span class="w"> </span><span class="k">Role</span><span class="w">   </span><span class="o">|</span><span class="w"> </span><span class="n">Git</span><span class="w"> </span><span class="n">Info</span><span class="w"> </span><span class="n">Sha</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">Version</span><span class="w"> </span><span class="o">|</span><span class="w">
</span><span class="w"></span><span class="o">+</span><span class="c1">------------------------------------------------------------------+------+----------+--------+--------------+---------+
</span><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;nebula-metad-0.nebula-metad-headless.default.svc.cluster.local&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">9559</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;ONLINE&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;META&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;d113f4a&#34;</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;2.6.2&#34;</span><span class="w"> </span><span class="o">|</span><span class="w">
</span><span class="w"></span><span class="o">+</span><span class="c1">------------------------------------------------------------------+------+----------+--------+--------------+---------+
</span><span class="c1"></span><span class="n">Got</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="k">rows</span><span class="w"> </span><span class="p">(</span><span class="n">time</span><span class="w"> </span><span class="n">spent</span><span class="w"> </span><span class="mi">1378</span><span class="o">/</span><span class="mi">2598</span><span class="w"> </span><span class="n">us</span><span class="p">)</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="n">Mon</span><span class="p">,</span><span class="w"> </span><span class="mi">14</span><span class="w"> </span><span class="n">Feb</span><span class="w"> </span><span class="mi">2022</span><span class="w"> </span><span class="mi">09</span><span class="p">:</span><span class="mi">22</span><span class="p">:</span><span class="mi">33</span><span class="w"> </span><span class="n">UTC</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[(</span><span class="k">none</span><span class="p">)]</span><span class="o">&gt;</span><span class="w"> </span><span class="k">show</span><span class="w"> </span><span class="n">hosts</span><span class="w"> </span><span class="n">graph</span><span class="w">
</span><span class="w"></span><span class="o">+</span><span class="c1">---------------------------------------------------------------+------+----------+---------+--------------+---------+
</span><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="k">Host</span><span class="w">                                                          </span><span class="o">|</span><span class="w"> </span><span class="n">Port</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Status</span><span class="w">   </span><span class="o">|</span><span class="w"> </span><span class="k">Role</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="n">Git</span><span class="w"> </span><span class="n">Info</span><span class="w"> </span><span class="n">Sha</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">Version</span><span class="w"> </span><span class="o">|</span><span class="w">
</span><span class="w"></span><span class="o">+</span><span class="c1">---------------------------------------------------------------+------+----------+---------+--------------+---------+
</span><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;nebula-graphd-0.nebula-graphd-svc.default.svc.cluster.local&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">9669</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;ONLINE&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;GRAPH&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;d113f4a&#34;</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;2.6.2&#34;</span><span class="w"> </span><span class="o">|</span><span class="w">
</span><span class="w"></span><span class="o">+</span><span class="c1">---------------------------------------------------------------+------+----------+---------+--------------+---------+
</span><span class="c1"></span><span class="n">Got</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="k">rows</span><span class="w"> </span><span class="p">(</span><span class="n">time</span><span class="w"> </span><span class="n">spent</span><span class="w"> </span><span class="mi">2072</span><span class="o">/</span><span class="mi">3403</span><span class="w"> </span><span class="n">us</span><span class="p">)</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="n">Mon</span><span class="p">,</span><span class="w"> </span><span class="mi">14</span><span class="w"> </span><span class="n">Feb</span><span class="w"> </span><span class="mi">2022</span><span class="w"> </span><span class="mi">10</span><span class="p">:</span><span class="mi">03</span><span class="p">:</span><span class="mi">58</span><span class="w"> </span><span class="n">UTC</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[(</span><span class="k">none</span><span class="p">)]</span><span class="o">&gt;</span><span class="w"> </span><span class="k">show</span><span class="w"> </span><span class="n">hosts</span><span class="w"> </span><span class="k">storage</span><span class="w">
</span><span class="w"></span><span class="o">+</span><span class="c1">------------------------------------------------------------------------+------+----------+-----------+--------------+---------+
</span><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="k">Host</span><span class="w">                                                                   </span><span class="o">|</span><span class="w"> </span><span class="n">Port</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Status</span><span class="w">   </span><span class="o">|</span><span class="w"> </span><span class="k">Role</span><span class="w">      </span><span class="o">|</span><span class="w"> </span><span class="n">Git</span><span class="w"> </span><span class="n">Info</span><span class="w"> </span><span class="n">Sha</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">Version</span><span class="w"> </span><span class="o">|</span><span class="w">
</span><span class="w"></span><span class="o">+</span><span class="c1">------------------------------------------------------------------------+------+----------+-----------+--------------+---------+
</span><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;nebula-storaged-0.nebula-storaged-headless.default.svc.cluster.local&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">9779</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;ONLINE&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;STORAGE&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;d113f4a&#34;</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;2.6.2&#34;</span><span class="w"> </span><span class="o">|</span><span class="w">
</span><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;nebula-storaged-1.nebula-storaged-headless.default.svc.cluster.local&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">9779</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;ONLINE&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;STORAGE&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;d113f4a&#34;</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;2.6.2&#34;</span><span class="w"> </span><span class="o">|</span><span class="w">
</span><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;nebula-storaged-2.nebula-storaged-headless.default.svc.cluster.local&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">9779</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;ONLINE&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;STORAGE&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;d113f4a&#34;</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;2.6.2&#34;</span><span class="w"> </span><span class="o">|</span><span class="w">
</span><span class="w"></span><span class="o">+</span><span class="c1">------------------------------------------------------------------------+------+----------+-----------+--------------+---------+
</span><span class="c1"></span><span class="n">Got</span><span class="w"> </span><span class="mi">3</span><span class="w"> </span><span class="k">rows</span><span class="w"> </span><span class="p">(</span><span class="n">time</span><span class="w"> </span><span class="n">spent</span><span class="w"> </span><span class="mi">1603</span><span class="o">/</span><span class="mi">2979</span><span class="w"> </span><span class="n">us</span><span class="p">)</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="n">Mon</span><span class="p">,</span><span class="w"> </span><span class="mi">14</span><span class="w"> </span><span class="n">Feb</span><span class="w"> </span><span class="mi">2022</span><span class="w"> </span><span class="mi">10</span><span class="p">:</span><span class="mi">05</span><span class="p">:</span><span class="mi">24</span><span class="w"> </span><span class="n">UTC</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div><p>然而，因为前边提到的 Spark-Connector 通过 Meta Service 去获取 StorageD 的地址，且这个地址是服务发现而得，所以 Spark-Connector 实际上获取的 StorageD 地址就是上边的这种 headless 的服务地址，没法直接从外部访问。</p>
<p>所以，我们在有条件的情况下，只需要让 Spark 运行在和 Nebula Cluster 相同的 K8s 网络里，一切就迎刃而解了，否则，我们需要：</p>
<ol>
<li>
<p>将 MetaD 和 StorageD 的地址利用 Ingress 等方式将其 L4（TCP）暴露出来。</p>
<p>可以参考 Nebula Operator 的文档：<a href="doc/user/client_service.md" rel="">doc/user/client_service.md</a></p>
</li>
<li>
<p>通过反向代理和DNS让这些 headless 服务能被解析到相应的 StorageD。</p>
<p>参考：TBD</p>
</li>
</ol>
<p>那么，有没有更方便的方式？</p>
<p>非常抱歉的是，目前最方便的方式依然是如文章最开头所介绍：让 Spark 运行在 Nebula Cluster 内部。实际上，我在努力推进 Nebula Spark 社区去支持可以配置的 StorageAddresses 选项，有了它之后，前边提到的 <strong>2.</strong> 就是不必要的了。</p>
<h2 id="bonus一键体验-nebula-algorithm--nebula-operator" class="headerLink">
    <a href="#bonus%e4%b8%80%e9%94%ae%e4%bd%93%e9%aa%8c-nebula-algorithm--nebula-operator" class="header-mark"></a>2 Bonus：一键体验 nebula-algorithm + nebula-operator</h2><p>为了方便在 k8s 上尝鲜 nebula-graph nebula-algorithm 的同学，这里我要再次安利一下我写的一个小工具 <a href="https://github.com/wey-gu/nebula-operator-kind" target="_blank" rel="noopener noreferrer">Neubla-Operator-KinD</a>，它是一个一键在 Docker 环境内部单独部署一个 k8s 集群并在其中部署 Nebula Operator 以及所有依赖（包括 storage provider）并部署一个小 Nebula Cluster 的工具。有点绕，不过可以看下边的步骤哈：</p>
<p>第一步，部署 K8s+Nebula-Operator+Nebula Cluster：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">curl -sL nebula-kind.siwei.io/install.sh <span class="p">|</span> bash
</code></pre></td></tr></table>
</div>
</div><p><figure><a class="lightgallery" href="https://github.com/wey-gu/nebula-operator-kind/raw/main/images/install_success.webp" title="install_success" data-thumbnail="https://github.com/wey-gu/nebula-operator-kind/raw/main/images/install_success.webp">
        <img
            
            loading="lazy"
            src="https://github.com/wey-gu/nebula-operator-kind/raw/main/images/install_success.webp"
            srcset="https://github.com/wey-gu/nebula-operator-kind/raw/main/images/install_success.webp, https://github.com/wey-gu/nebula-operator-kind/raw/main/images/install_success.webp 1.5x, https://github.com/wey-gu/nebula-operator-kind/raw/main/images/install_success.webp 2x"
            sizes="auto"
            alt="install_success">
    </a></figure></p>
<p>第二步，照着工具文档里的 <a href="https://github.com/wey-gu/nebula-operator-kind#whats-next" target="_blank" rel="noopener noreferrer">what&rsquo;s next</a></p>
<p>a. 用 console 连接集群，并加载示例数据集</p>
<p>b. <a href="https://github.com/wey-gu/nebula-operator-kind/blob/main/README.md#try-nebula-algorithm" target="_blank" rel="noopener noreferrer">在这个 k8s 里跑一个图算法</a></p>
<ul>
<li>创建一个 Spark 环境</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">kubectl create -f http://nebula-kind.siwei.io/deployment/spark.yaml
kubectl wait pod --timeout=-1s --for=condition=Ready -l &#39;!job-name&#39;
</code></pre></td></tr></table>
</div>
</div><ul>
<li>等上边的 wait 都 ready 之后，进入 spark 的 pod。</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">kubectl exec -it deploy/spark-deployment -- bash
</code></pre></td></tr></table>
</div>
</div><ul>
<li>下载 nebula-algorithm 比如 <code>2.6.2</code> 这个版本，更多版本请参考 <a href="https://github.com/vesoft-inc/nebula-algorithm/" target="_blank" rel="noopener noreferrer">https://github.com/vesoft-inc/nebula-algorithm/</a>。</li>
</ul>
<blockquote>
<p>注意：</p>
<ul>
<li>官方发布的版本在这里可以获取：https://repo1.maven.org/maven2/com/vesoft/nebula-algorithm/</li>
<li>因为这个问题 <a href="https://github.com/vesoft-inc/nebula-algorithm/issues/42" target="_blank" rel="noopener noreferrer">https://github.com/vesoft-inc/nebula-algorithm/issues/42</a> 只有 <code>2.6.2</code> 或者更新的版本才支持域名访问 MetaD。</li>
</ul>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"># 下载 nebula-algorithm-2.6.2.jar
wget https://repo1.maven.org/maven2/com/vesoft/nebula-algorithm/2.6.2/nebula-algorithm-2.6.2.jar
# 下载 nebula-algorthm 配置文件
wget https://github.com/vesoft-inc/nebula-algorithm/raw/v2.6/nebula-algorithm/src/main/resources/application.conf
</code></pre></td></tr></table>
</div>
</div><ul>
<li>修改Then we could change the config file of nebula-algorithm on meta and graph addresses:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">sed -i &#39;/^        metaAddress/c\        metaAddress: \&#34;nebula-metad-0.nebula-metad-headless.default.svc.cluster.local:9559\&#34;&#39; application.conf
sed -i &#39;/^        graphAddress/c\        graphAddress: \&#34;nebula-graphd-0.nebula-graphd-svc.default.svc.cluster.local:9669\&#34;&#39; application.conf
##### change space
sed -i &#39;/^        space/c\        space: basketballplayer&#39; application.conf
##### read data from nebula graph
sed -i &#39;/^    source/c\    source: nebula&#39; application.conf
##### execute algorithm: labelpropagation
sed -i &#39;/^    executeAlgo/c\    executeAlgo: labelpropagation&#39; application.conf
</code></pre></td></tr></table>
</div>
</div><ul>
<li>执行 LPA 算法在  basketballplayer 图空间</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">/spark/bin/spark-submit --master &#34;local&#34; --conf spark.rpc.askTimeout=6000s \
    --class com.vesoft.nebula.algorithm.Main \
    nebula-algorithm-2.6.2.jar \
    -p application.conf
</code></pre></td></tr></table>
</div>
</div><ul>
<li>结果如下：</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">bash-5.0# ls /tmp/count/
_SUCCESS                                                  part-00000-5475f9f4-66b9-426b-b0c2-704f946e54d3-c000.csv
bash-5.0# head /tmp/count/part-00000-5475f9f4-66b9-426b-b0c2-704f946e54d3-c000.csv
_id,lpa
1100,1104
2200,2200
2201,2201
1101,1104
2202,2202
</code></pre></td></tr></table>
</div>
</div><p>Happy Graphing!</p>
<blockquote>
<p>Picture Credit: <a href="https://unsplash.com/photos/yx20mpDyr2I" target="_blank" rel="noopener noreferrer">Timelab Pro</a></p>
</blockquote>]]></description>
</item><item>
    <title>Nebula Operator Kind，一键单机玩转 Nebula K8s 集群</title>
    <link>https://siwei.io/nebula-operator-kind/</link>
    <pubDate>Wed, 09 Jun 2021 19:27:00 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/nebula-operator-kind/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/nebula-operator-kind/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p>Nebula-Kind，无需依赖，一键安装尝鲜基于 Nebula Operator 的 K8s Nebula Graph Cluster。</p>
<p>注： KIND 是一个 K8s 的 SIG，代表 K8s in Docker。</p>
</blockquote>
<h2 id="nebula-operator-kind-是什么" class="headerLink">
    <a href="#nebula-operator-kind-%e6%98%af%e4%bb%80%e4%b9%88" class="header-mark"></a>1 Nebula-Operator-Kind 是什么</h2><p>Nebula Graph 作为云原生的分布式开源图数据库，有开源的 <a href="https://github.com/vesoft-inc/nebula-operator" target="_blank" rel="noopener noreferrer">K8s Operator</a> 供大家在 K8s 上方便的通过 CRD 去维护、部署 Nebula Graph 集群。</p>
<p>对于手头没有方便的 K8s 环境的同学，如果想尝鲜、学习 Nebula Graph 的 K8s Operator 的话，可能需要耗费一些精力才能搭起来一整套的控制平面的依赖。</p>
<p>作为一个懒人，我做利用 K8s in Docker(<a href="https://kind.sigs.K8s.io/" target="_blank" rel="noopener noreferrer">KIND</a>)，和之前做 <a href="https://github.com/wey-gu/nebula-up" target="_blank" rel="noopener noreferrer">Nebula-Up</a> 的 shell 脚本架子，快速的搞了一个一键安装工具：Nebula-Operator-Kind</p>
<p>它能直接帮我们：</p>
<ul>
<li>安装 Docker</li>
<li>安装 K8s(KIND)</li>
<li>安装 PV Provider</li>
<li>安装 Nebula-Operator 以及依赖</li>
<li>安装 Nebula-Console</li>
<li>配置 nodePort 用以一键直连 Nebula 集群</li>
<li>安装 kubectl 用来体验 Nebula-Operator 的 CRD 配置</li>
</ul>
<h2 id="如何使用" class="headerLink">
    <a href="#%e5%a6%82%e4%bd%95%e4%bd%bf%e7%94%a8" class="header-mark"></a>2 如何使用</h2><p>安装：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">curl -sL nebula-kind.siwei.io/install.sh <span class="p">|</span> bash
</code></pre></td></tr></table>
</div>
</div><p>成功之后：
<figure><a class="lightgallery" href="/nebula-operator-kind/install_success.webp" title="install_success" data-thumbnail="/nebula-operator-kind/install_success.webp">
        <img
            
            loading="lazy"
            src="/nebula-operator-kind/install_success.webp"
            srcset="/nebula-operator-kind/install_success.webp, /nebula-operator-kind/install_success.webp 1.5x, /nebula-operator-kind/install_success.webp 2x"
            sizes="auto"
            alt="install_success" height="987"  width="1392" >
    </a></figure></p>
<p>用 <code>~/.nebula-kind/bin/console</code> 一行连接集群：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">~/.nebula-kind/bin/console -u user -p password --address<span class="o">=</span>127.0.0.1 --port<span class="o">=</span><span class="m">30000</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="详细信息" class="headerLink">
    <a href="#%e8%af%a6%e7%bb%86%e4%bf%a1%e6%81%af" class="header-mark"></a>3 详细信息</h2><p>Repo 的地址是：https://github.com/wey-gu/nebula-operator-kind ，里边有更多的信息，欢迎大家试用、反馈、PR 哈！</p>
<blockquote>
<p>Updated Sept. 2021</p>
</blockquote>
<p>如果在 KubeSphere All-in-one 环境安装：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">curl -sL nebula-kind.siwei.io/install-ks-1.sh <span class="p">|</span> bash
</code></pre></td></tr></table>
</div>
</div><p>如果在 Minikube、其他 K8s 之中安装</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">curl -sL nebula-kind.siwei.io/install-on-k8s.sh <span class="p">|</span> bash
</code></pre></td></tr></table>
</div>
</div><blockquote>
<p>题图版权：<a href="https://unsplash.com/photos/a4Gz2DD4dX0" target="_blank" rel="noopener noreferrer">Maik Hankemann</a></p>
</blockquote>]]></description>
</item></channel>
</rss>
