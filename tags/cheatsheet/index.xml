<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>cheatsheet - 标签 - siwei.io</title>
        <link>https://siwei.io/tags/cheatsheet/</link>
        <description>cheatsheet - 标签 - siwei.io</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>weyl.gu@gmail.com (Wey Gu)</managingEditor>
            <webMaster>weyl.gu@gmail.com (Wey Gu)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 15 Aug 2022 00:24:28 &#43;0800</lastBuildDate><atom:link href="https://siwei.io/tags/cheatsheet/" rel="self" type="application/rss+xml" /><item>
    <title>nGQL 简明教程，第一期</title>
    <link>https://siwei.io/ngql-tutorial/</link>
    <pubDate>Mon, 15 Aug 2022 00:24:28 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/ngql-tutorial/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/ngql-tutorial/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p>本文旨在让新手快速了解 nGQL，掌握方向，之后可以脚踩在地上借助文档写出任何心中的 NebulaGraph 图查询。</p>
</blockquote>
<h2 id="系列教程" class="headerLink">
    <a href="#%e7%b3%bb%e5%88%97%e6%95%99%e7%a8%8b" class="header-mark"></a>1 系列教程</h2><ul>
<li><a href="https://www.siwei.io/ngql-tutorial/" target="_blank" rel="noopener noreferrer">nGQL 简明教程，第一期，快速入门</a>，本文</li>
<li><a href="https://www.siwei.io/ngql-execution-plan/" target="_blank" rel="noopener noreferrer">nGQL 简明教程，第二期，查询计划与调优</a></li>
</ul>
<h2 id="视频" class="headerLink">
    <a href="#%e8%a7%86%e9%a2%91" class="header-mark"></a>2 视频</h2><p>本教程的视频版在<a href="https://bilibili.com/video/BV1PT411P7w8" target="_blank" rel="noopener noreferrer">这里</a>。</p>
<div class="bilibili"><iframe src="//player.bilibili.com/player.html?bvid=BV1PT411P7w8&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe></div>

<h2 id="开始之前" class="headerLink">
    <a href="#%e5%bc%80%e5%a7%8b%e4%b9%8b%e5%89%8d" class="header-mark"></a>3 开始之前</h2><p>本文假设你已经在文档看过<a href="https://docs.nebula-graph.com.cn/3.2.0/2.quick-start/1.quick-start-workflow/" target="_blank" rel="noopener noreferrer">快速入门流程</a>，部署、连接过 NebulaGraph，并且看过了<a href="https://docs.nebula-graph.com.cn/3.2.0/2.quick-start/4.nebula-graph-crud/" target="_blank" rel="noopener noreferrer">常用命令</a>。如果您还没看过这两个文档，强烈建议先快速过一遍。</p>
<h3 id="教程目标" class="headerLink">
    <a href="#%e6%95%99%e7%a8%8b%e7%9b%ae%e6%a0%87" class="header-mark"></a>3.1 教程目标</h3><p>本教程目的在于让新手大概知道了 NebulaGraph 的查询语句后，解决“不知道什么样的查询应该用什么语句”的问题。</p>
<h3 id="ngql-是什么" class="headerLink">
    <a href="#ngql-%e6%98%af%e4%bb%80%e4%b9%88" class="header-mark"></a>3.2 nGQL 是什么</h3><p>我们先强调一下概念：nGQL 是 NebulaGraph Graph Query Language 的缩写，它表示 NebulaGraph 的查询语言，而 nGQL 的语句可以不严谨地分为这几部分：</p>
<ul>
<li>NebulaGraph 独有 DQL 查询语句（Data Query Language）</li>
<li>NebulaGraph OpenCypher DQL</li>
<li>NebulaGraph DML 写语句（Data Mutation Language）</li>
<li>NebulaGraph DDL Schema 语句（Data Definition Language)</li>
<li>NebulaGraph Admin Queries 管理语句</li>
</ul>
<p>这里，作为简明教程一把梭，我们只关注前两个部分，后边的内容会在 Part 2 中介绍。</p>
<h3 id="ngql-速查表-cheatsheet" class="headerLink">
    <a href="#ngql-%e9%80%9f%e6%9f%a5%e8%a1%a8-cheatsheet" class="header-mark"></a>3.3 nGQL 速查表 Cheatsheet</h3><blockquote>
<p>大家可以报错这份单页速查表，一次了解所有 nGQL 的用法。</p>
<p><a href="/ngql-tutorial/ngql-cheatsheet-cn.png" rel="">原始文件链接</a></p>
</blockquote>
<p><figure><a class="lightgallery" href="/ngql-tutorial/ngql-cheatsheet-cn.webp" title="ngql-cheatsheet" data-thumbnail="/ngql-tutorial/ngql-cheatsheet-cn.webp">
        <img
            
            loading="lazy"
            src="/ngql-tutorial/ngql-cheatsheet-cn.webp"
            srcset="/ngql-tutorial/ngql-cheatsheet-cn.webp, /ngql-tutorial/ngql-cheatsheet-cn.webp 1.5x, /ngql-tutorial/ngql-cheatsheet-cn.webp 2x"
            sizes="auto"
            alt="ngql-cheatsheet">
    </a></figure></p>
<h2 id="nebulagraph-独有-dql" class="headerLink">
    <a href="#nebulagraph-%e7%8b%ac%e6%9c%89-dql" class="header-mark"></a>4 NebulaGraph 独有 DQL</h2><p>NebulaGraph 的独有读查询语句的设计非常简洁，对初学者非常友好，结合了管道的概念，做到了只涉及了几个关键词就可以描述大多数图查询模式。</p>
<p>用一句话描述来说，nGQL 的独有 DQL 一共分成四类语句：</p>
<ul>
<li>图拓展：<code>GO</code></li>
<li>索引反查：<code>LOOKUP</code></li>
<li>取属性：<code>FETCH PROP</code></li>
<li>路径与子图：<code>FIND PATH</code> 与 <code>GET SUBGRAPH</code></li>
</ul>
<p>和几个特别的元素</p>
<ul>
<li>
<p>管道：<code>|</code></p>
</li>
<li>
<p>引用属性: <code>$</code> 开头的几个符号，用来描述一些特定的上下文</p>
</li>
</ul>
<h3 id="图拓展-go" class="headerLink">
    <a href="#%e5%9b%be%e6%8b%93%e5%b1%95-go" class="header-mark"></a>4.1 图拓展 GO</h3><p><code>GO</code> 的语义非常直观：从<strong>给定的起点</strong>，向外拓展，按需<strong>返回终点</strong>、起点的信息。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="o">#</span><span class="w"> </span><span class="err">图拓展</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">GO</span><span class="w"> </span><span class="mi">3</span><span class="w"> </span><span class="n">STEPS</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="s2">&#34;player102&#34;</span><span class="w"> </span><span class="n">OVER</span><span class="w"> </span><span class="n">follow</span><span class="w"> </span><span class="n">YIELD</span><span class="w"> </span><span class="n">dst</span><span class="p">(</span><span class="n">edge</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="err">───┬───</span><span class="w">      </span><span class="err">───┬───────</span><span class="w">      </span><span class="err">─┬────</span><span class="w">       </span><span class="err">──┬──────</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">│</span><span class="w">            </span><span class="err">│</span><span class="w">              </span><span class="err">│</span><span class="w">   </span><span class="err">┌─────────┘</span><span class="w">       
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">│</span><span class="w">            </span><span class="err">│</span><span class="w">              </span><span class="err">│</span><span class="w">   </span><span class="err">│</span><span class="w">                 
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">│</span><span class="w">            </span><span class="err">│</span><span class="w">              </span><span class="err">│</span><span class="w">   </span><span class="err">└──</span><span class="w"> </span><span class="err">返回最后一跳边的终点</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">│</span><span class="w">            </span><span class="err">│</span><span class="w">              </span><span class="err">│</span><span class="w">                     
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">│</span><span class="w">            </span><span class="err">│</span><span class="w">              </span><span class="err">└──────</span><span class="w"> </span><span class="err">从</span><span class="w"> </span><span class="n">follow</span><span class="w"> </span><span class="err">这个边</span><span class="p">[</span><span class="err">出方向</span><span class="p">]</span><span class="err">探索</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">│</span><span class="w">            </span><span class="err">│</span><span class="w">                                    
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">│</span><span class="w">            </span><span class="err">└─────────────────────</span><span class="w"> </span><span class="err">起点是</span><span class="w"> </span><span class="s2">&#34;player102&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">│</span><span class="w">                                                 
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">└──────────────────────────────────</span><span class="w"> </span><span class="err">探索</span><span class="w"> </span><span class="mi">3</span><span class="w"> </span><span class="err">步</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>参考 <a href="https://docs.nebula-graph.com.cn/3.2.0/3.ngql-guide/7.general-query-statements/3.go/" target="_blank" rel="noopener noreferrer">GO 语句文档</a>，了解如何：</p>
<ul>
<li>指定反方向拓展、双向拓展</li>
<li>指定可变跳数拓展</li>
<li>基于所有类型边拓展</li>
<li>返回其他信息</li>
</ul>
</blockquote>
<h3 id="lookup-基于索引反查-id" class="headerLink">
    <a href="#lookup-%e5%9f%ba%e4%ba%8e%e7%b4%a2%e5%bc%95%e5%8f%8d%e6%9f%a5-id" class="header-mark"></a>4.2 LOOKUP 基于索引反查 ID</h3><p>和 <code>GO</code> 为从已知的点出发相反，<code>LOOKUP</code> 是一个类似于 SQL 里 <code>SELECT</code> 语义的关键字，它实际的作用也类似与关系型数据库中的扫表。</p>
<p><code>LOOKUP</code> 需要手动明确建立相应 TAG、边类型上索引才能允许相应的查询。</p>
<h4 id="为什么-lookup-需要索引" class="headerLink">
    <a href="#%e4%b8%ba%e4%bb%80%e4%b9%88-lookup-%e9%9c%80%e8%a6%81%e7%b4%a2%e5%bc%95" class="header-mark"></a>4.2.1 为什么 <code>LOOKUP</code> 需要索引？</h4><p>因为 NebulaGraph 中的数据默认是按照邻接表的形式存储，在分布式设计中，扫描一个类型的点、边是非常昂贵的，所以它被默认禁止了。而创建相应的索引类似于增加了类似于表结构数据库的排序数据，可以用来做类似于 <code>SELECT</code> 的查询。</p>
<p>创建索引的代价是什么（增加写入负担）？索引会加速读么（不会，它是提供了 LOOKUP 的可能性，原生图的查询不需要索引加速）？等等更详细的问题请参阅我之前的<a href="https://www.siwei.io/nebula-index-explained/" target="_blank" rel="noopener noreferrer">索引详解文章</a>。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="o">#</span><span class="w"> </span><span class="err">索引反查</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">LOOKUP</span><span class="w"> </span><span class="k">ON</span><span class="w"> </span><span class="n">player</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="n">player</span><span class="p">.</span><span class="n">name</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">&#34;Tony Parker&#34;</span><span class="w"> </span><span class="n">YIELD</span><span class="w"> </span><span class="n">id</span><span class="p">(</span><span class="n">vertex</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="err">──┬───</span><span class="w">  </span><span class="err">──────┬──────────────────────────</span><span class="w">  </span><span class="err">──┬──────</span><span class="w">       
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="err">│</span><span class="w">           </span><span class="err">│</span><span class="w">          </span><span class="err">┌───────────────────┘</span><span class="w">             
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="err">│</span><span class="w">           </span><span class="err">│</span><span class="w">          </span><span class="err">│</span><span class="w">                                 
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="err">│</span><span class="w">           </span><span class="err">│</span><span class="w">          </span><span class="err">└────────────</span><span class="w"> </span><span class="err">返回查到点的</span><span class="w"> </span><span class="n">VID</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="err">│</span><span class="w">           </span><span class="err">│</span><span class="w">                                            
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="err">│</span><span class="w">           </span><span class="err">└───────────────────────</span><span class="w"> </span><span class="err">过滤条件是属性</span><span class="w"> </span><span class="n">name</span><span class="w"> </span><span class="err">的值</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="err">│</span><span class="w">                                                        
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="err">└───────────────────────────────────</span><span class="w"> </span><span class="err">根据点的类别</span><span class="o">/</span><span class="n">TAG</span><span class="w"> </span><span class="n">player</span><span class="w"> </span><span class="err">查询</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>进一步参考 <a href="https://docs.nebula-graph.com.cn/3.2.0/3.ngql-guide/7.general-query-statements/5.lookup/" target="_blank" rel="noopener noreferrer">LOOKUP 语句文档</a>，了解如何：</p>
<ul>
<li>返回属性</li>
<li>根据边的类型查询边</li>
<li>了解 LOOKUP 查询的前提、<a href="https://docs.nebula-graph.com.cn/3.2.0/3.ngql-guide/14.native-index-statements/" target="_blank" rel="noopener noreferrer">索引</a>，<a href="https://www.siwei.io/nebula-index-explained/" target="_blank" rel="noopener noreferrer">索引详解</a></li>
</ul>
</blockquote>
<h3 id="fetch-prop-获取属性" class="headerLink">
    <a href="#fetch-prop-%e8%8e%b7%e5%8f%96%e5%b1%9e%e6%80%a7" class="header-mark"></a>4.3 FETCH PROP 获取属性</h3><p>如字面意思，如果我们知道一个点、边的 ID，想要获取它上边的属性，这时候我们要用 <code>FETCH PROP</code> 而非 <code>LOOKUP</code>。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="o">#</span><span class="w"> </span><span class="err">取属性</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FETCH</span><span class="w"> </span><span class="n">PROP</span><span class="w"> </span><span class="k">ON</span><span class="w"> </span><span class="n">player</span><span class="w"> </span><span class="s2">&#34;player100&#34;</span><span class="w"> </span><span class="n">YIELD</span><span class="w"> </span><span class="n">properties</span><span class="p">(</span><span class="n">vertex</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="err">──┬───</span><span class="w">  </span><span class="err">────┬─────</span><span class="w">       </span><span class="err">─────────┬────────</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="err">│</span><span class="w">         </span><span class="err">│</span><span class="w">         </span><span class="err">┌───────────┘</span><span class="w">         
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="err">│</span><span class="w">         </span><span class="err">│</span><span class="w">         </span><span class="err">│</span><span class="w">                     
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="err">│</span><span class="w">         </span><span class="err">│</span><span class="w">         </span><span class="err">└───────</span><span class="w"> </span><span class="err">返回点的</span><span class="w"> </span><span class="n">player</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="err">下所有属性</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="err">│</span><span class="w">         </span><span class="err">│</span><span class="w">                               
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="err">│</span><span class="w">         </span><span class="err">└─────────────────</span><span class="w"> </span><span class="err">从</span><span class="w"> </span><span class="s2">&#34;player100&#34;</span><span class="w"> </span><span class="err">这个点获取</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="err">│</span><span class="w">                                         
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="err">└───────────────────────────</span><span class="w"> </span><span class="err">获取</span><span class="w"> </span><span class="n">player</span><span class="w"> </span><span class="err">这个</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="err">下的属性</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>进一步参考 <a href="https://docs.nebula-graph.com.cn/3.2.0/3.ngql-guide/7.general-query-statements/4.fetch/" target="_blank" rel="noopener noreferrer">FETCH PROP 语句文档</a>，了解如何：</p>
<ul>
<li>返回某一个属性</li>
<li>获取给定边的属性</li>
</ul>
</blockquote>
<h3 id="路径查找-find-path" class="headerLink">
    <a href="#%e8%b7%af%e5%be%84%e6%9f%a5%e6%89%be-find-path" class="header-mark"></a>4.4 路径查找 FIND PATH</h3><p>如果我们从给定的起点、终点中，找到之间的所有路径，一定要用 <code>FIND PATH</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="o">#</span><span class="w"> </span><span class="err">起点终点间路径</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">FIND</span><span class="w"> </span><span class="n">SHORTEST</span><span class="w"> </span><span class="n">PATH</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="s2">&#34;player102&#34;</span><span class="w"> </span><span class="k">TO</span><span class="w"> </span><span class="s2">&#34;team204&#34;</span><span class="w"> </span><span class="n">OVER</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="err">\</span><span class="w">   
</span></span></span><span class="line"><span class="cl"><span class="w">     </span><span class="err">──┬─────</span><span class="w">            </span><span class="err">───────────┬───────────</span><span class="w"> </span><span class="err">───┬───</span><span class="w">    
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="n">YIELD</span><span class="err">│</span><span class="n">path</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">p</span><span class="p">;</span><span class="w"> </span><span class="err">┌────────────────┘</span><span class="w">               </span><span class="err">│</span><span class="w">       
</span></span></span><span class="line"><span class="cl"><span class="w">       </span><span class="err">│────┬────</span><span class="w">  </span><span class="err">│</span><span class="w">     </span><span class="err">┌──────────────────────────┘</span><span class="w">       
</span></span></span><span class="line"><span class="cl"><span class="w">       </span><span class="err">│</span><span class="w">    </span><span class="err">│</span><span class="w">      </span><span class="err">│</span><span class="w">     </span><span class="err">│</span><span class="w">                                  
</span></span></span><span class="line"><span class="cl"><span class="w">       </span><span class="err">│</span><span class="w">    </span><span class="err">│</span><span class="w">      </span><span class="err">│</span><span class="w">     </span><span class="err">└─────────</span><span class="w"> </span><span class="err">经由所有类型的边出向探索</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">       </span><span class="err">│</span><span class="w">    </span><span class="err">│</span><span class="w">      </span><span class="err">│</span><span class="w">                                        
</span></span></span><span class="line"><span class="cl"><span class="w">       </span><span class="err">│</span><span class="w">    </span><span class="err">│</span><span class="w">      </span><span class="err">└───────────────</span><span class="w"> </span><span class="err">从给定的起点、终点</span><span class="w"> </span><span class="n">VID</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">       </span><span class="err">│</span><span class="w">    </span><span class="err">│</span><span class="w">                                               
</span></span></span><span class="line"><span class="cl"><span class="w">       </span><span class="err">│</span><span class="w">    </span><span class="err">└──────────────────────</span><span class="w"> </span><span class="err">返回路径为</span><span class="w"> </span><span class="n">p</span><span class="w"> </span><span class="err">列</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">       </span><span class="err">│</span><span class="w">                                                    
</span></span></span><span class="line"><span class="cl"><span class="w">       </span><span class="err">└───────────────────────────</span><span class="w"> </span><span class="err">查找最短路径</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>进一步参考 <a href="https://docs.nebula-graph.com.cn/3.2.0/3.ngql-guide/16.subgraph-and-path/2.find-path/" target="_blank" rel="noopener noreferrer">FIND PATH 语句文档</a>，了解如何：</p>
<ul>
<li>返回路径中的属性</li>
<li>设定拓展方向</li>
</ul>
</blockquote>
<h3 id="单点子图-get-subgraph" class="headerLink">
    <a href="#%e5%8d%95%e7%82%b9%e5%ad%90%e5%9b%be-get-subgraph" class="header-mark"></a>4.5 单点子图 GET SUBGRAPH</h3><p>和路径查找类似，但是我们只给定一个起点和拓展部署，用 <code>GET SUBGRAPH</code> 可以帮我们获取同样的 BFS 出去的子图</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="o">#</span><span class="w"> </span><span class="err">单点</span><span class="w"> </span><span class="n">BFS</span><span class="w"> </span><span class="err">子图</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">GET</span><span class="w"> </span><span class="n">SUBGRAPH</span><span class="w"> </span><span class="mi">5</span><span class="w"> </span><span class="n">STEPS</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="s2">&#34;player101&#34;</span><span class="w"> </span><span class="err">\</span><span class="w">           
</span></span></span><span class="line"><span class="cl"><span class="w">             </span><span class="err">───┬───</span><span class="w"> </span><span class="err">─────┬──────────</span><span class="w">             
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="n">YIELD</span><span class="w"> </span><span class="n">VERTICES</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">nodes</span><span class="p">,</span><span class="w"> </span><span class="n">EDGES</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">relationships</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="err">────┬───┼─────────┼───────────────────────</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="err">┌────────┘</span><span class="w">   </span><span class="err">│</span><span class="w">         </span><span class="err">│</span><span class="w">                       
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="err">│</span><span class="w">            </span><span class="err">│</span><span class="w">         </span><span class="err">└───────</span><span class="w"> </span><span class="err">从</span><span class="w"> </span><span class="s2">&#34;player101&#34;</span><span class="w"> </span><span class="err">开始触发</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="err">│</span><span class="w">            </span><span class="err">│</span><span class="w">                                 
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="err">│</span><span class="w">            </span><span class="err">└─────────────────</span><span class="w"> </span><span class="err">获取</span><span class="w"> </span><span class="mi">5</span><span class="w"> </span><span class="err">步的探索</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="err">│</span><span class="w">                                              
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="err">└──────────────────────────────</span><span class="w"> </span><span class="err">返回所有的点、边</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>进一步参考 <a href="https://docs.nebula-graph.com.cn/3.2.0/3.ngql-guide/16.subgraph-and-path/1.get-subgraph/" target="_blank" rel="noopener noreferrer">GET SUBGRAPH 语句文档</a>，了解如何：</p>
<ul>
<li>返回带有属性的点、边</li>
<li>设定拓展方向</li>
</ul>
</blockquote>
<h3 id="利用管道和属性引用符" class="headerLink">
    <a href="#%e5%88%a9%e7%94%a8%e7%ae%a1%e9%81%93%e5%92%8c%e5%b1%9e%e6%80%a7%e5%bc%95%e7%94%a8%e7%ac%a6" class="header-mark"></a>4.6 利用管道和属性引用符</h3><p>NebulaGraph 的管道设计和 Unix-Shell 的设计很像，可以将简单的几种语句结合起来，有强大的表达力。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="o">#</span><span class="w"> </span><span class="err">使用通道</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">GO</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="s2">&#34;player100&#34;</span><span class="w"> </span><span class="n">OVER</span><span class="w"> </span><span class="n">follow</span><span class="w"> </span><span class="n">YIELD</span><span class="w"> </span><span class="n">dst</span><span class="p">(</span><span class="n">edge</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">did</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="err">\</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="err">─────┬────────────────────────────────────────────</span><span class="w"> </span><span class="err">─┬─</span><span class="w">   
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="k">GO</span><span class="w"> </span><span class="k">FROM</span><span class="err">│$</span><span class="o">-</span><span class="p">.</span><span class="n">did</span><span class="w"> </span><span class="n">OVER</span><span class="w"> </span><span class="n">follow</span><span class="w"> </span><span class="n">YIELD</span><span class="w"> </span><span class="n">dst</span><span class="p">(</span><span class="n">edge</span><span class="p">);</span><span class="w">           </span><span class="err">│</span><span class="w">    
</span></span></span><span class="line"><span class="cl"><span class="w">         </span><span class="err">│────┬──</span><span class="w">     </span><span class="err">┌─────────────────────────────────┘</span><span class="w">    
</span></span></span><span class="line"><span class="cl"><span class="w">         </span><span class="err">│</span><span class="w">    </span><span class="err">│</span><span class="w">       </span><span class="err">│</span><span class="w">                                      
</span></span></span><span class="line"><span class="cl"><span class="w">         </span><span class="err">│</span><span class="w">    </span><span class="err">│</span><span class="w">       </span><span class="err">└────────</span><span class="w"> </span><span class="err">管道将左边的</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="err">输出作为右边语句输入</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">         </span><span class="err">│</span><span class="w">    </span><span class="err">│</span><span class="w">                                              
</span></span></span><span class="line"><span class="cl"><span class="w">         </span><span class="err">│</span><span class="w">    </span><span class="err">└────────────────</span><span class="w"> </span><span class="err">从管道左边的</span><span class="w"> </span><span class="n">did</span><span class="w"> </span><span class="err">属性开始探索</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">         </span><span class="err">│</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">         </span><span class="err">└─────────────────────</span><span class="w"> </span><span class="err">第一个查询语句</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>进一步参考 <a href="https://docs.nebula-graph.com.cn/3.2.0/3.ngql-guide/5.operators/5.property-reference/" target="_blank" rel="noopener noreferrer">引用属性文档</a>、<a href="https://docs.nebula-graph.com.cn/3.2.0/3.ngql-guide/5.operators/4.pipe/" target="_blank" rel="noopener noreferrer">管道文档</a>了解：</p>
<ul>
<li>更多属性引用定义</li>
<li>更多例子</li>
<li>结合 LOOKUP, GO, FETCH 的语句</li>
</ul>
</blockquote>
<p>除了以上的几种表达之外，NebulaGraph 独有查询语句还有聚合的表达参考 <a href="https://docs.nebula-graph.com.cn/3.2.0/3.ngql-guide/8.clauses-and-options/group-by/" target="_blank" rel="noopener noreferrer">GROUP-BY</a>，另外在文档里还有一个 <a href="https://docs.nebula-graph.com.cn/3.2.0/2.quick-start/6.cheatsheet-for-ngql-command/" target="_blank" rel="noopener noreferrer">Cheatsheet</a> 供大家查询一些复杂一点查询的例子。</p>
<h3 id="nebulagraph-opencypher-dql" class="headerLink">
    <a href="#nebulagraph-opencypher-dql" class="header-mark"></a>4.7 NebulaGraph OpenCypher DQL</h3><p>从 2.0 起，OpenCypher 的 <code>MATCH</code> 语句也被 NebulaGraph 原生支持了，虽然这里是一个方言（有一些细节差异）。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">MATCH &lt;pattern&gt; [&lt;clause_1&gt;] RETURN &lt;output&gt;  [&lt;clause_2&gt;];
</span></span></code></pre></td></tr></table>
</div>
</div><p>MATCH 的基本表达是以 <code>(v:tag_a)</code> 包裹的点 <code>--&gt;</code> 或者 <code>&lt;-[:edge_type_1]-</code> 表达的边组成的模式，与 <code>RETURN</code> 表达的输出。</p>
<p>如果您从 Cypher 的查询语句入门图数据库，可以从下边几个例子了解到几个 NebulaGraph 里的细节差异：</p>
<ul>
<li>增加了 <code>WHERE id(v) == &quot;foo&quot;</code> 的表达</li>
<li><code>==</code> 表达相等判断而不是 <code>=</code></li>
<li>点的属性表达需要填写 TAG，例如 <code>v3.player.name</code> 而不是 <code>v3.name</code></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">v</span><span class="p">:</span><span class="o">`</span><span class="n">player</span><span class="o">`</span><span class="err">{</span><span class="n">name</span><span class="p">:</span><span class="s2">&#34;Tim Duncan&#34;</span><span class="err">}</span><span class="p">)</span><span class="o">--&gt;</span><span class="p">(</span><span class="n">v2</span><span class="p">)</span><span class="o">&lt;--</span><span class="p">(</span><span class="n">v3</span><span class="p">)</span><span class="w"> </span><span class="err">\</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">RETURN</span><span class="w"> </span><span class="n">v3</span><span class="p">.</span><span class="o">`</span><span class="n">player</span><span class="o">`</span><span class="p">.</span><span class="n">name</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">Name</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">v</span><span class="p">:</span><span class="o">`</span><span class="n">player</span><span class="o">`</span><span class="p">)</span><span class="w"> </span><span class="err">\</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">WHERE</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="p">(</span><span class="n">v</span><span class="p">)</span><span class="o">--</span><span class="p">()</span><span class="w"> </span><span class="err">\</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">RETURN</span><span class="w"> </span><span class="n">v</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">v</span><span class="p">:</span><span class="o">`</span><span class="n">player</span><span class="o">`</span><span class="p">)</span><span class="o">--</span><span class="p">(</span><span class="n">v2</span><span class="p">)</span><span class="w"> </span><span class="err">\</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">WHERE</span><span class="w"> </span><span class="nf">id</span><span class="p">(</span><span class="n">v2</span><span class="p">)</span><span class="w"> </span><span class="k">IN</span><span class="w"> </span><span class="p">[</span><span class="s2">&#34;player101&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;player102&#34;</span><span class="p">]</span><span class="w"> </span><span class="err">\</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">RETURN</span><span class="w"> </span><span class="n">v</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">m</span><span class="p">)</span><span class="o">-</span><span class="p">[]</span><span class="o">-&gt;</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="nf">id</span><span class="p">(</span><span class="n">m</span><span class="p">)</span><span class="o">==</span><span class="s2">&#34;player100&#34;</span><span class="w"> </span><span class="err">\</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">OPTIONAL</span><span class="w"> </span><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="o">-</span><span class="p">[]</span><span class="o">-&gt;</span><span class="p">(</span><span class="n">l</span><span class="p">)</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="nf">id</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="o">==</span><span class="s2">&#34;player125&#34;</span><span class="w"> </span><span class="err">\</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">RETURN</span><span class="w"> </span><span class="nf">id</span><span class="p">(</span><span class="n">m</span><span class="p">),</span><span class="w"> </span><span class="nf">id</span><span class="p">(</span><span class="n">n</span><span class="p">),</span><span class="w"> </span><span class="nf">id</span><span class="p">(</span><span class="n">l</span><span class="p">);</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>进一步参考 <a href="https://docs.nebula-graph.com.cn/3.2.0/3.ngql-guide/7.general-query-statements/2.match/" target="_blank" rel="noopener noreferrer">MATCH 文档</a>了解：</p>
</blockquote>
<ul>
<li>更多例子</li>
<li>可变跳数的 MATCH 表达</li>
<li>多 MATCH</li>
<li>OPTIONAL MATCH</li>
</ul>
<blockquote>
<p>题图版权：DALL·E Open-AI，<a href="/ngql-tutorial/featured-image-raw.webp" rel="">原图</a></p>
<p>The featured image was generated with keywords: learning spells of the nebula magic, with DALL·E Open-AI.</p>
</blockquote>]]></description>
</item></channel>
</rss>
