<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>siwei.io</title>
        <link>https://siwei.io/</link>
        <description>Siwei(思为) builds things and believes in Open Source.</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>weyl.gu@gmail.com (Wey Gu)</managingEditor>
            <webMaster>weyl.gu@gmail.com (Wey Gu)</webMaster><lastBuildDate>Mon, 15 Aug 2022 00:24:28 &#43;0800</lastBuildDate>
            <atom:link href="https://siwei.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>nGQL 简明教程，第一期</title>
    <link>https://siwei.io/ngql-tutorial/</link>
    <pubDate>Mon, 15 Aug 2022 00:24:28 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/ngql-tutorial/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/ngql-tutorial/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p>本文旨在让新手快速了解 nGQL，掌握方向，之后可以脚踩在地上借助文档写出任何心中的 NebulaGraph 图查询。</p>
</blockquote>
<h2 id="视频" class="headerLink">
    <a href="#%e8%a7%86%e9%a2%91" class="header-mark"></a>1 视频</h2><p>本教程的视频版在<a href="https://bilibili.com/video/BV1PT411P7w8" target="_blank" rel="noopener noreffer">这里</a>。</p>
<div class="bilibili"><iframe src="//player.bilibili.com/player.html?bvid=BV1PT411P7w8&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe></div>

<h2 id="开始之前" class="headerLink">
    <a href="#%e5%bc%80%e5%a7%8b%e4%b9%8b%e5%89%8d" class="header-mark"></a>2 开始之前</h2><p>本文假设你已经在文档看过<a href="https://docs.nebula-graph.com.cn/3.2.0/2.quick-start/1.quick-start-workflow/" target="_blank" rel="noopener noreffer">快速入门流程</a>，部署、连接过 NebulaGraph，并且看过了<a href="https://docs.nebula-graph.com.cn/3.2.0/2.quick-start/4.nebula-graph-crud/" target="_blank" rel="noopener noreffer">常用命令</a>。如果您还没看过这两个文档，强烈建议先快速过一遍。</p>
<h3 id="教程目标" class="headerLink">
    <a href="#%e6%95%99%e7%a8%8b%e7%9b%ae%e6%a0%87" class="header-mark"></a>2.1 教程目标</h3><p>本教程目的在于让新手大概知道了 NebulaGraph 的查询语句后，解决“不知道什么样的查询应该用什么语句”的问题。</p>
<h3 id="ngql-是什么" class="headerLink">
    <a href="#ngql-%e6%98%af%e4%bb%80%e4%b9%88" class="header-mark"></a>2.2 nGQL 是什么</h3><p>我们先强调一下概念：nGQL 是 NebulaGraph Graph Query Language 的缩写，它表示 NebulaGraph 的查询语言，而 nGQL 的语句可以不严谨地分为这几部分：</p>
<ul>
<li>NebulaGraph 独有 DQL 查询语句（Data Query Language）</li>
<li>NebulaGraph OpenCypher DQL</li>
<li>NebulaGraph DML 写语句（Data Mutation Language）</li>
<li>NebulaGraph DDL Schema 语句（Data Definition Language)</li>
<li>NebulaGraph Admin Queries 管理语句</li>
</ul>
<p>这里，作为简明教程一把梭，我们只关注前两个部分，后边的内容会在 Part 2 中介绍。</p>
<h3 id="ngql-速查表-cheatsheet" class="headerLink">
    <a href="#ngql-%e9%80%9f%e6%9f%a5%e8%a1%a8-cheatsheet" class="header-mark"></a>2.3 nGQL 速查表 Cheatsheet</h3><blockquote>
<p>大家可以报错这份单页速查表，一次了解所有 nGQL 的用法。</p>
<p><a href="./ngql-cheatsheet-cn.png" rel="">原始文件链接</a></p>
</blockquote>
<p><a class="lightgallery" href="/ngql-tutorial/ngql-cheatsheet-cn.webp" title="ngql-cheatsheet" data-thumbnail="/ngql-tutorial/ngql-cheatsheet-cn.webp">
        
    </a></p>
<h2 id="nebulagraph-独有-dql" class="headerLink">
    <a href="#nebulagraph-%e7%8b%ac%e6%9c%89-dql" class="header-mark"></a>3 NebulaGraph 独有 DQL</h2><p>NebulaGraph 的独有读查询语句的设计非常简介，对初学者非常友好，结合了管道的概念，做到了只涉及了几个关键词就可以描述大多数图查询模式。</p>
<p>用一句话描述来说，nGQL 的独有 DQL 一共分成四类语句：</p>
<ul>
<li>图拓展：<code>GO</code></li>
<li>索引反查：<code>LOOKUP</code></li>
<li>取属性：<code>FETCH PROP</code></li>
<li>路径与子图：<code>FIND PATH</code> 与 <code>GET SUBGRAPH</code></li>
</ul>
<p>和几个特别的元素</p>
<ul>
<li>
<p>管道：<code>|</code></p>
</li>
<li>
<p>引用属性: <code>$</code> 开头的几个符号，用来描述一些特定的上下文</p>
</li>
</ul>
<h3 id="图拓展-go" class="headerLink">
    <a href="#%e5%9b%be%e6%8b%93%e5%b1%95-go" class="header-mark"></a>3.1 图拓展 GO</h3><p><code>GO</code> 的语义非常直观：从<strong>给定的起点</strong>，向外拓展，按需<strong>返回终点</strong>、起点的信息。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="o">#</span><span class="w"> </span><span class="err">图拓展</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">GO</span><span class="w"> </span><span class="mi">3</span><span class="w"> </span><span class="n">STEPS</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="s2">&#34;player102&#34;</span><span class="w"> </span><span class="n">OVER</span><span class="w"> </span><span class="n">follow</span><span class="w"> </span><span class="n">YIELD</span><span class="w"> </span><span class="n">dst</span><span class="p">(</span><span class="n">edge</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="err">───┬───</span><span class="w">      </span><span class="err">───┬───────</span><span class="w">      </span><span class="err">─┬────</span><span class="w">       </span><span class="err">──┬──────</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">│</span><span class="w">            </span><span class="err">│</span><span class="w">              </span><span class="err">│</span><span class="w">   </span><span class="err">┌─────────┘</span><span class="w">       
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">│</span><span class="w">            </span><span class="err">│</span><span class="w">              </span><span class="err">│</span><span class="w">   </span><span class="err">│</span><span class="w">                 
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">│</span><span class="w">            </span><span class="err">│</span><span class="w">              </span><span class="err">│</span><span class="w">   </span><span class="err">└──</span><span class="w"> </span><span class="err">返回最后一跳边的终点</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">│</span><span class="w">            </span><span class="err">│</span><span class="w">              </span><span class="err">│</span><span class="w">                     
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">│</span><span class="w">            </span><span class="err">│</span><span class="w">              </span><span class="err">└──────</span><span class="w"> </span><span class="err">从</span><span class="w"> </span><span class="n">follow</span><span class="w"> </span><span class="err">这个边</span><span class="p">[</span><span class="err">出方向</span><span class="p">]</span><span class="err">探索</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">│</span><span class="w">            </span><span class="err">│</span><span class="w">                                    
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">│</span><span class="w">            </span><span class="err">└─────────────────────</span><span class="w"> </span><span class="err">起点是</span><span class="w"> </span><span class="s2">&#34;player102&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">│</span><span class="w">                                                 
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">└──────────────────────────────────</span><span class="w"> </span><span class="err">探索</span><span class="w"> </span><span class="mi">3</span><span class="w"> </span><span class="err">步</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>参考 <a href="https://docs.nebula-graph.com.cn/3.2.0/3.ngql-guide/7.general-query-statements/3.go/" target="_blank" rel="noopener noreffer">GO 语句文档</a>，了解如何：</p>
<ul>
<li>指定反方向拓展、双向拓展</li>
<li>指定可变跳数拓展</li>
<li>基于所有类型边拓展</li>
<li>返回其他信息</li>
</ul>
</blockquote>
<h3 id="lookup-基于索引反查-id" class="headerLink">
    <a href="#lookup-%e5%9f%ba%e4%ba%8e%e7%b4%a2%e5%bc%95%e5%8f%8d%e6%9f%a5-id" class="header-mark"></a>3.2 LOOKUP 基于索引反查 ID</h3><p>和 <code>GO</code> 为从已知的点出发相反，<code>LOOKUP</code> 是一个类似于 SQL 里 <code>SELECT</code> 语义的关键字，它实际的作用也类似与关系型数据库中的扫表。</p>
<p><code>LOOKUP</code> 需要手动明确建立相应 TAG、边类型上索引才能允许相应的查询。</p>
<h4 id="为什么-lookup-需要索引" class="headerLink">
    <a href="#%e4%b8%ba%e4%bb%80%e4%b9%88-lookup-%e9%9c%80%e8%a6%81%e7%b4%a2%e5%bc%95" class="header-mark"></a>3.2.1 为什么 <code>LOOKUP</code> 需要索引？</h4><p>因为 NebulaGraph 中的数据默认是按照邻接表的形式存储，在分布式设计中，扫描一个类型的点、边是非常昂贵的，所以它被默认禁止了。而创建相应的索引类似于增加了类似于表结构数据库的排序数据，可以用来做类似于 <code>SELECT</code> 的查询。</p>
<p>创建索引的代价是什么（增加写入负担）？索引会加速读么（不会，它是提供了 LOOKUP 的可能性，原生图的查询不需要索引加速）？等等更详细的问题请参阅我之前的<a href="https://www.siwei.io/nebula-index-explained/" target="_blank" rel="noopener noreffer">索引详解文章</a>。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="o">#</span><span class="w"> </span><span class="err">索引反查</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">LOOKUP</span><span class="w"> </span><span class="k">ON</span><span class="w"> </span><span class="n">player</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="n">player</span><span class="p">.</span><span class="n">name</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">&#34;Tony Parker&#34;</span><span class="w"> </span><span class="n">YIELD</span><span class="w"> </span><span class="n">id</span><span class="p">(</span><span class="n">vertex</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="err">──┬───</span><span class="w">  </span><span class="err">──────┬──────────────────────────</span><span class="w">  </span><span class="err">──┬──────</span><span class="w">       
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="err">│</span><span class="w">           </span><span class="err">│</span><span class="w">          </span><span class="err">┌───────────────────┘</span><span class="w">             
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="err">│</span><span class="w">           </span><span class="err">│</span><span class="w">          </span><span class="err">│</span><span class="w">                                 
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="err">│</span><span class="w">           </span><span class="err">│</span><span class="w">          </span><span class="err">└────────────</span><span class="w"> </span><span class="err">返回查到点的</span><span class="w"> </span><span class="n">VID</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="err">│</span><span class="w">           </span><span class="err">│</span><span class="w">                                            
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="err">│</span><span class="w">           </span><span class="err">└───────────────────────</span><span class="w"> </span><span class="err">过滤条件是属性</span><span class="w"> </span><span class="n">name</span><span class="w"> </span><span class="err">的值</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="err">│</span><span class="w">                                                        
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="err">└───────────────────────────────────</span><span class="w"> </span><span class="err">根据点的类别</span><span class="o">/</span><span class="n">TAG</span><span class="w"> </span><span class="n">player</span><span class="w"> </span><span class="err">查询</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>进一步参考 <a href="https://docs.nebula-graph.com.cn/3.2.0/3.ngql-guide/7.general-query-statements/5.lookup/" target="_blank" rel="noopener noreffer">LOOKUP 语句文档</a>，了解如何：</p>
<ul>
<li>返回属性</li>
<li>根据边的类型查询边</li>
<li>了解 LOOKUP 查询的前提、<a href="https://docs.nebula-graph.com.cn/3.2.0/3.ngql-guide/14.native-index-statements/" target="_blank" rel="noopener noreffer">索引</a>，<a href="https://www.siwei.io/nebula-index-explained/" target="_blank" rel="noopener noreffer">索引详解</a></li>
</ul>
</blockquote>
<h3 id="fetch-prop-获取属性" class="headerLink">
    <a href="#fetch-prop-%e8%8e%b7%e5%8f%96%e5%b1%9e%e6%80%a7" class="header-mark"></a>3.3 FETCH PROP 获取属性</h3><p>如字面意思，如果我们知道一个点、边的 ID，想要获取它上边的属性，这时候我们要用 <code>FETCH PROP</code> 而非 <code>LOOKUP</code>。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="o">#</span><span class="w"> </span><span class="err">取属性</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FETCH</span><span class="w"> </span><span class="n">PROP</span><span class="w"> </span><span class="k">ON</span><span class="w"> </span><span class="n">player</span><span class="w"> </span><span class="s2">&#34;player100&#34;</span><span class="w"> </span><span class="n">YIELD</span><span class="w"> </span><span class="n">properties</span><span class="p">(</span><span class="n">vertex</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="err">──┬───</span><span class="w">  </span><span class="err">────┬─────</span><span class="w">       </span><span class="err">─────────┬────────</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="err">│</span><span class="w">         </span><span class="err">│</span><span class="w">         </span><span class="err">┌───────────┘</span><span class="w">         
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="err">│</span><span class="w">         </span><span class="err">│</span><span class="w">         </span><span class="err">│</span><span class="w">                     
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="err">│</span><span class="w">         </span><span class="err">│</span><span class="w">         </span><span class="err">└───────</span><span class="w"> </span><span class="err">返回点的</span><span class="w"> </span><span class="n">player</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="err">下所有属性</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="err">│</span><span class="w">         </span><span class="err">│</span><span class="w">                               
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="err">│</span><span class="w">         </span><span class="err">└─────────────────</span><span class="w"> </span><span class="err">从</span><span class="w"> </span><span class="s2">&#34;player100&#34;</span><span class="w"> </span><span class="err">这个点获取</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="err">│</span><span class="w">                                         
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="err">└───────────────────────────</span><span class="w"> </span><span class="err">获取</span><span class="w"> </span><span class="n">player</span><span class="w"> </span><span class="err">这个</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="err">下的属性</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>进一步参考 <a href="https://docs.nebula-graph.com.cn/3.2.0/3.ngql-guide/7.general-query-statements/4.fetch/" target="_blank" rel="noopener noreffer">FETCH PROP 语句文档</a>，了解如何：</p>
<ul>
<li>返回某一个属性</li>
<li>获取给定边的属性</li>
</ul>
</blockquote>
<h3 id="路径查找-find-path" class="headerLink">
    <a href="#%e8%b7%af%e5%be%84%e6%9f%a5%e6%89%be-find-path" class="header-mark"></a>3.4 路径查找 FIND PATH</h3><p>如果我们从给定的起点、终点中，找到之间的所有路径，一定要用 <code>FIND PATH</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="o">#</span><span class="w"> </span><span class="err">起点终点间路径</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">FIND</span><span class="w"> </span><span class="n">SHORTEST</span><span class="w"> </span><span class="n">PATH</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="s2">&#34;player102&#34;</span><span class="w"> </span><span class="k">TO</span><span class="w"> </span><span class="s2">&#34;team204&#34;</span><span class="w"> </span><span class="n">OVER</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="err">\</span><span class="w">   
</span></span></span><span class="line"><span class="cl"><span class="w">     </span><span class="err">──┬─────</span><span class="w">            </span><span class="err">───────────┬───────────</span><span class="w"> </span><span class="err">───┬───</span><span class="w">    
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="n">YIELD</span><span class="err">│</span><span class="n">path</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">p</span><span class="p">;</span><span class="w"> </span><span class="err">┌────────────────┘</span><span class="w">               </span><span class="err">│</span><span class="w">       
</span></span></span><span class="line"><span class="cl"><span class="w">       </span><span class="err">│────┬────</span><span class="w">  </span><span class="err">│</span><span class="w">     </span><span class="err">┌──────────────────────────┘</span><span class="w">       
</span></span></span><span class="line"><span class="cl"><span class="w">       </span><span class="err">│</span><span class="w">    </span><span class="err">│</span><span class="w">      </span><span class="err">│</span><span class="w">     </span><span class="err">│</span><span class="w">                                  
</span></span></span><span class="line"><span class="cl"><span class="w">       </span><span class="err">│</span><span class="w">    </span><span class="err">│</span><span class="w">      </span><span class="err">│</span><span class="w">     </span><span class="err">└─────────</span><span class="w"> </span><span class="err">经由所有类型的边出向探索</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">       </span><span class="err">│</span><span class="w">    </span><span class="err">│</span><span class="w">      </span><span class="err">│</span><span class="w">                                        
</span></span></span><span class="line"><span class="cl"><span class="w">       </span><span class="err">│</span><span class="w">    </span><span class="err">│</span><span class="w">      </span><span class="err">└───────────────</span><span class="w"> </span><span class="err">从给定的起点、终点</span><span class="w"> </span><span class="n">VID</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">       </span><span class="err">│</span><span class="w">    </span><span class="err">│</span><span class="w">                                               
</span></span></span><span class="line"><span class="cl"><span class="w">       </span><span class="err">│</span><span class="w">    </span><span class="err">└──────────────────────</span><span class="w"> </span><span class="err">返回路径为</span><span class="w"> </span><span class="n">p</span><span class="w"> </span><span class="err">列</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">       </span><span class="err">│</span><span class="w">                                                    
</span></span></span><span class="line"><span class="cl"><span class="w">       </span><span class="err">└───────────────────────────</span><span class="w"> </span><span class="err">查找最短路径</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>进一步参考 <a href="https://docs.nebula-graph.com.cn/3.2.0/3.ngql-guide/16.subgraph-and-path/2.find-path/" target="_blank" rel="noopener noreffer">FIND PATH 语句文档</a>，了解如何：</p>
<ul>
<li>返回路径中的属性</li>
<li>设定拓展方向</li>
</ul>
</blockquote>
<h3 id="单点子图-get-subgraph" class="headerLink">
    <a href="#%e5%8d%95%e7%82%b9%e5%ad%90%e5%9b%be-get-subgraph" class="header-mark"></a>3.5 单点子图 GET SUBGRAPH</h3><p>和路径查找类似，但是我们只给定一个起点和拓展部署，用 <code>GET SUBGRAPH</code> 可以帮我们获取同样的 BFS 出去的子图</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="o">#</span><span class="w"> </span><span class="err">单点</span><span class="w"> </span><span class="n">BFS</span><span class="w"> </span><span class="err">子图</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">GET</span><span class="w"> </span><span class="n">SUBGRAPH</span><span class="w"> </span><span class="mi">5</span><span class="w"> </span><span class="n">STEPS</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="s2">&#34;player101&#34;</span><span class="w"> </span><span class="err">\</span><span class="w">           
</span></span></span><span class="line"><span class="cl"><span class="w">             </span><span class="err">───┬───</span><span class="w"> </span><span class="err">─────┬──────────</span><span class="w">             
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="n">YIELD</span><span class="w"> </span><span class="n">VERTICES</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">nodes</span><span class="p">,</span><span class="w"> </span><span class="n">EDGES</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">relationships</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="err">────┬───┼─────────┼───────────────────────</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="err">┌────────┘</span><span class="w">                                     
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="err">│</span><span class="w">            </span><span class="err">│</span><span class="w">         </span><span class="err">└───────</span><span class="w"> </span><span class="err">从</span><span class="w"> </span><span class="s2">&#34;player101&#34;</span><span class="w"> </span><span class="err">开始触发</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="err">│</span><span class="w">                                              
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="err">│</span><span class="w">            </span><span class="err">└─────────────────</span><span class="w"> </span><span class="err">获取</span><span class="w"> </span><span class="mi">5</span><span class="w"> </span><span class="err">步的探索</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="err">│</span><span class="w">                                              
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="err">└──────────────────────────────</span><span class="w"> </span><span class="err">返回所有的点、边</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>进一步参考 <a href="https://docs.nebula-graph.com.cn/3.2.0/3.ngql-guide/16.subgraph-and-path/1.get-subgraph/" target="_blank" rel="noopener noreffer">GET SUBGRAPH 语句文档</a>，了解如何：</p>
<ul>
<li>返回带有属性的点、边</li>
<li>设定拓展方向</li>
</ul>
</blockquote>
<h3 id="利用管道和属性引用符" class="headerLink">
    <a href="#%e5%88%a9%e7%94%a8%e7%ae%a1%e9%81%93%e5%92%8c%e5%b1%9e%e6%80%a7%e5%bc%95%e7%94%a8%e7%ac%a6" class="header-mark"></a>3.6 利用管道和属性引用符</h3><p>NebulaGraph 的管道设计和 Unix-Shell 的设计很像，可以将简单的几种语句结合起来，有强大的表达力。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="o">#</span><span class="w"> </span><span class="err">使用通道</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">GO</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="s2">&#34;player100&#34;</span><span class="w"> </span><span class="n">OVER</span><span class="w"> </span><span class="n">follow</span><span class="w"> </span><span class="n">YIELD</span><span class="w"> </span><span class="n">dst</span><span class="p">(</span><span class="n">edge</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">did</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="err">\</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="err">─────┬────────────────────────────────────────────</span><span class="w"> </span><span class="err">─┬─</span><span class="w">   
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="k">GO</span><span class="w"> </span><span class="k">FROM</span><span class="err">│$</span><span class="o">-</span><span class="p">.</span><span class="n">did</span><span class="w"> </span><span class="n">OVER</span><span class="w"> </span><span class="n">follow</span><span class="w"> </span><span class="n">YIELD</span><span class="w"> </span><span class="n">dst</span><span class="p">(</span><span class="n">edge</span><span class="p">);</span><span class="w">           </span><span class="err">│</span><span class="w">    
</span></span></span><span class="line"><span class="cl"><span class="w">         </span><span class="err">│────┬──</span><span class="w">     </span><span class="err">┌─────────────────────────────────┘</span><span class="w">    
</span></span></span><span class="line"><span class="cl"><span class="w">         </span><span class="err">│</span><span class="w">    </span><span class="err">│</span><span class="w">       </span><span class="err">│</span><span class="w">                                      
</span></span></span><span class="line"><span class="cl"><span class="w">         </span><span class="err">│</span><span class="w">    </span><span class="err">│</span><span class="w">       </span><span class="err">└────────</span><span class="w"> </span><span class="err">管道将左边的</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="err">输出作为右边语句输入</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">         </span><span class="err">│</span><span class="w">    </span><span class="err">│</span><span class="w">                                              
</span></span></span><span class="line"><span class="cl"><span class="w">         </span><span class="err">│</span><span class="w">    </span><span class="err">└────────────────</span><span class="w"> </span><span class="err">从管道左边的</span><span class="w"> </span><span class="n">did</span><span class="w"> </span><span class="err">属性开始探索</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">         </span><span class="err">│</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">         </span><span class="err">└─────────────────────</span><span class="w"> </span><span class="err">第一个查询语句</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>进一步参考 <a href="https://docs.nebula-graph.com.cn/3.2.0/3.ngql-guide/5.operators/5.property-reference/" target="_blank" rel="noopener noreffer">引用属性文档</a>、<a href="https://docs.nebula-graph.com.cn/3.2.0/3.ngql-guide/5.operators/4.pipe/" target="_blank" rel="noopener noreffer">管道文档</a>了解：</p>
<ul>
<li>更多属性引用定义</li>
<li>更多例子</li>
<li>结合 LOOKUP, GO, FETCH 的语句</li>
</ul>
</blockquote>
<p>除了以上的集中表达之外，NebulaGraph 独有查询语句还有聚合的表达参考 <a href="https://docs.nebula-graph.com.cn/3.2.0/3.ngql-guide/8.clauses-and-options/group-by/" target="_blank" rel="noopener noreffer">GROUP-BY</a>，另外在文档里还有一个 <a href="https://docs.nebula-graph.com.cn/3.2.0/2.quick-start/6.cheatsheet-for-ngql-command/" target="_blank" rel="noopener noreffer">Cheatsheet</a> 供大家查询一些复杂一点查询的例子。</p>
<h3 id="nebulagraph-opencypher-dql" class="headerLink">
    <a href="#nebulagraph-opencypher-dql" class="header-mark"></a>3.7 NebulaGraph OpenCypher DQL</h3><p>从 2.0 起，OpenCypher 的 <code>MATCH</code> 语句也被 NebulaGraph 原生支持了，虽然这里是一个方言（有一些细节差异）。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">MATCH &lt;pattern&gt; [&lt;clause_1&gt;] RETURN &lt;output&gt;  [&lt;clause_2&gt;];
</span></span></code></pre></td></tr></table>
</div>
</div><p>MATCH 的基本表达是以 <code>(v:tag_a)</code> 包裹的点 <code>--&gt;</code> 或者 <code>&lt;-[:edge_type_1]-</code> 表达的边组成的模式，与 <code>RETURN</code> 表达的输出。</p>
<p>如果您从 Cypher 的查询语句入门图数据库，可以从下边几个例子了解到几个 NebulaGraph 里的细节差异：</p>
<ul>
<li>增加了 <code>WHERE id(v) == &quot;foo&quot;</code> 的表达</li>
<li><code>==</code> 表达相等判断而不是 <code>=</code></li>
<li>点的属性表达需要填写 TAG，例如 <code>v3.player.name</code> 而不是 <code>v3.name</code></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">MATCH (v:player{name:&#34;Tim Duncan&#34;})--&gt;(v2)&lt;--(v3) \
</span></span><span class="line"><span class="cl">    RETURN v3.player.name AS Name;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">MATCH (v:player) \
</span></span><span class="line"><span class="cl">    WHERE NOT (v)--() \
</span></span><span class="line"><span class="cl">    RETURN v;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">MATCH (v:player)--(v2) \
</span></span><span class="line"><span class="cl">    WHERE id(v2) IN [&#34;player101&#34;, &#34;player102&#34;] \
</span></span><span class="line"><span class="cl">    RETURN v;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">MATCH (m)-[]-&gt;(n) WHERE id(m)==&#34;player100&#34; \
</span></span><span class="line"><span class="cl">OPTIONAL MATCH (n)-[]-&gt;(l) WHERE id(n)==&#34;player125&#34; \
</span></span><span class="line"><span class="cl">    RETURN id(m), id(n), id(l);
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>进一步参考 <a href="https://docs.nebula-graph.com.cn/3.2.0/3.ngql-guide/7.general-query-statements/2.match/" target="_blank" rel="noopener noreffer">MATCH 文档</a>了解：</p>
</blockquote>
<ul>
<li>更多例子</li>
<li>可变跳数的 MATCH 表达</li>
<li>多 MATCH</li>
<li>OPTIONAL MATCH</li>
</ul>
<blockquote>
<p>题图版权：DALL·E Open-AI，<a href="./featured-image-raw.webp" rel="">原图</a></p>
<p>Featured image was generated with key words: learning spells of the nebula magic, with DALL·E Open-AI.</p>
</blockquote>]]></description>
</item><item>
    <title>基于 NebulaGraph 图数据库的 ID Resolution 方法与代码示例</title>
    <link>https://siwei.io/identity-resolution/</link>
    <pubDate>Sun, 14 Aug 2022 18:18:16 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/identity-resolution/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/identity-resolution/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p>本文是一个基于 NebulaGraph 上的图算法、图数据库、图神经网络的 ID-Mapping 方法综述，除了基本方法思想的介绍之外，我还给大家弄了可以跑的 Playground。</p>
</blockquote>
<blockquote>
<p>本文还在撰写中，TBD 的章节还请见谅。</p>
</blockquote>
<!--

[TOC]

-->
<h2 id="基于图数据库的用户-id-识别方法" class="headerLink">
    <a href="#%e5%9f%ba%e4%ba%8e%e5%9b%be%e6%95%b0%e6%8d%ae%e5%ba%93%e7%9a%84%e7%94%a8%e6%88%b7-id-%e8%af%86%e5%88%ab%e6%96%b9%e6%b3%95" class="header-mark"></a>1 基于图数据库的用户 ID 识别方法</h2><p>用户 ID 识别，是一个很常见的图技术应用场景，在不同的语境下它可能还被叫做 Entity Correlation（实体关联）、Entity Linking（实体链接）、ID Mapping（身份映射）等等。ID 识别解决的问题是找出相同的用户在同一个系统或者不同系统中的不同账号。</p>
<p>由于 ID 识别天然地是一个关联关系问题，也是一个典型的图、图数据库应用场景。</p>
<h3 id="建立图谱" class="headerLink">
    <a href="#%e5%bb%ba%e7%ab%8b%e5%9b%be%e8%b0%b1" class="header-mark"></a>1.1 建立图谱</h3><h4 id="图建模" class="headerLink">
    <a href="#%e5%9b%be%e5%bb%ba%e6%a8%a1" class="header-mark"></a>1.1.1 图建模</h4><p>我们从一个最简单、直接的图谱开始，如下边的图结构示意显示，我们定义了点：</p>
<ul>
<li>user
<ul>
<li>Prop: [name, email, birthday, address, phone_num]</li>
</ul>
</li>
<li>phone</li>
<li>email</li>
<li>device</li>
<li>ip</li>
<li>address</li>
</ul>
<p>在他们之间有很自然的边：</p>
<ul>
<li>used_device
<ul>
<li>Prop: time</li>
</ul>
</li>
<li>logged_in_from
<ul>
<li>Prop: time</li>
</ul>
</li>
<li>has_phone</li>
<li>has_address</li>
<li>has_email</li>
</ul>
<p><a class="lightgallery" href="https://raw.githubusercontent.com/wey-gu/identity-correlation-datagen/main/images/schema.svg?refresh=true" title="schema digram" data-thumbnail="https://raw.githubusercontent.com/wey-gu/identity-correlation-datagen/main/images/schema.svg?refresh=true">
        
    </a></p>
<h4 id="数据" class="headerLink">
    <a href="#%e6%95%b0%e6%8d%ae" class="header-mark"></a>1.1.2 数据</h4><p>这份数据是开源的，地址在 <a href="https://github.com/wey-gu/identity-correlation-datagen" target="_blank" rel="noopener noreffer">https://github.com/wey-gu/identity-correlation-datagen</a></p>
<h4 id="写入-nebulagraph" class="headerLink">
    <a href="#%e5%86%99%e5%85%a5-nebulagraph" class="header-mark"></a>1.1.3 写入 NebulaGraph</h4><p>图建模的 Schema 对应的 NebulaGraph DDL 是：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="o">#</span><span class="w"> </span><span class="err">创建一个叫做</span><span class="w"> </span><span class="n">entity_resolution</span><span class="w"> </span><span class="err">的图空间</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="k">SPACE</span><span class="w"> </span><span class="n">entity_resolution</span><span class="w"> </span><span class="p">(</span><span class="n">vid_type</span><span class="o">=</span><span class="n">FIXED_STRING</span><span class="p">(</span><span class="mi">30</span><span class="p">));</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="err">创建点的类型</span><span class="w"> </span><span class="n">TAG</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="o">`</span><span class="k">user</span><span class="o">`</span><span class="w"> </span><span class="p">(</span><span class="o">`</span><span class="n">name</span><span class="o">`</span><span class="w"> </span><span class="n">string</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="p">,</span><span class="w"> </span><span class="o">`</span><span class="n">email</span><span class="o">`</span><span class="w"> </span><span class="n">string</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="p">,</span><span class="w"> </span><span class="o">`</span><span class="n">phone_num</span><span class="o">`</span><span class="w"> </span><span class="n">string</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="p">,</span><span class="w"> </span><span class="o">`</span><span class="n">birthday</span><span class="o">`</span><span class="w"> </span><span class="nb">date</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="p">,</span><span class="w"> </span><span class="o">`</span><span class="n">address</span><span class="o">`</span><span class="w"> </span><span class="n">string</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="o">`</span><span class="n">address</span><span class="o">`</span><span class="w"> </span><span class="p">(</span><span class="o">`</span><span class="n">address</span><span class="o">`</span><span class="w"> </span><span class="n">string</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="o">`</span><span class="n">device</span><span class="o">`</span><span class="w"> </span><span class="p">(</span><span class="o">`</span><span class="n">uuid</span><span class="o">`</span><span class="w"> </span><span class="n">string</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="o">`</span><span class="n">email</span><span class="o">`</span><span class="w"> </span><span class="p">()</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="o">`</span><span class="n">ip</span><span class="o">`</span><span class="w"> </span><span class="p">()</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="o">`</span><span class="n">phone</span><span class="o">`</span><span class="w"> </span><span class="p">()</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="err">创建边的类型</span><span class="w"> </span><span class="n">Edge</span><span class="w"> </span><span class="k">Type</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="o">`</span><span class="n">used_device</span><span class="o">`</span><span class="w"> </span><span class="p">(</span><span class="o">`</span><span class="n">time</span><span class="o">`</span><span class="w"> </span><span class="k">timestamp</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="o">`</span><span class="n">logged_in_from</span><span class="o">`</span><span class="w"> </span><span class="p">(</span><span class="o">`</span><span class="n">time</span><span class="o">`</span><span class="w"> </span><span class="k">timestamp</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="o">`</span><span class="n">has_phone</span><span class="o">`</span><span class="w"> </span><span class="p">()</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="o">`</span><span class="n">has_address</span><span class="o">`</span><span class="w"> </span><span class="p">()</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="o">`</span><span class="n">has_email</span><span class="o">`</span><span class="w"> </span><span class="p">()</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="err">创建</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="o">`</span><span class="k">user</span><span class="o">`</span><span class="w"> </span><span class="o">`</span><span class="n">name</span><span class="o">`</span><span class="w"> </span><span class="err">索引</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="k">INDEX</span><span class="w"> </span><span class="n">user_name_index</span><span class="w"> </span><span class="k">ON</span><span class="w"> </span><span class="o">`</span><span class="k">user</span><span class="o">`</span><span class="p">(</span><span class="o">`</span><span class="n">name</span><span class="o">`</span><span class="p">);</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>对于写入数据的 DML，这里只给出 <code>user</code> ，<code>email</code> 类型点、<code>has_email</code> 类型边的例子</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">INSERT</span><span class="w"> </span><span class="n">VERTEX</span><span class="w"> </span><span class="o">`</span><span class="k">user</span><span class="o">`</span><span class="w"> </span><span class="p">(</span><span class="o">`</span><span class="n">email</span><span class="o">`</span><span class="p">,</span><span class="w"> </span><span class="o">`</span><span class="n">name</span><span class="o">`</span><span class="p">,</span><span class="w"> </span><span class="o">`</span><span class="n">birthday</span><span class="o">`</span><span class="p">,</span><span class="w"> </span><span class="o">`</span><span class="n">address</span><span class="o">`</span><span class="p">,</span><span class="w"> </span><span class="o">`</span><span class="n">phone_num</span><span class="o">`</span><span class="p">)</span><span class="w"> </span><span class="k">VALUES</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_1&#34;</span><span class="p">:(</span><span class="s2">&#34;heathermoore@johnson.com&#34;</span><span class="p">,</span><span class="s2">&#34;Miranda Miller&#34;</span><span class="p">,</span><span class="nb">date</span><span class="p">(</span><span class="s2">&#34;1957-08-27&#34;</span><span class="p">),</span><span class="s2">&#34;Brittany Forge Apt. 718 East Eric  WV 97881&#34;</span><span class="p">,</span><span class="s2">&#34;+1-652-450-5443x00562&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_2&#34;</span><span class="p">:(</span><span class="s2">&#34;holly@welch.org&#34;</span><span class="p">,</span><span class="s2">&#34;Holly Pollard&#34;</span><span class="p">,</span><span class="nb">date</span><span class="p">(</span><span class="s2">&#34;1990-10-19&#34;</span><span class="p">),</span><span class="s2">&#34;1 Amanda Freeway Lisaland  NJ 94933&#34;</span><span class="p">,</span><span class="s2">&#34;600-192-2985x041&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_3&#34;</span><span class="p">:(</span><span class="s2">&#34;julia.h.24@gmail.com&#34;</span><span class="p">,</span><span class="s2">&#34;Julia Hall&#34;</span><span class="p">,</span><span class="nb">date</span><span class="p">(</span><span class="s2">&#34;1927-08-24&#34;</span><span class="p">),</span><span class="s2">&#34;Rodriguez Track East Connorfort  NC 63144&#34;</span><span class="p">,</span><span class="s2">&#34;1248361783&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_4&#34;</span><span class="p">:(</span><span class="s2">&#34;franklin.b@gibson.biz&#34;</span><span class="p">,</span><span class="s2">&#34;Franklin Barnett&#34;</span><span class="p">,</span><span class="nb">date</span><span class="p">(</span><span class="s2">&#34;2020-03-01&#34;</span><span class="p">),</span><span class="s2">&#34;Richard Curve Kingstad  AZ 05660&#34;</span><span class="p">,</span><span class="s2">&#34;(224)497-9312&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_5&#34;</span><span class="p">:(</span><span class="s2">&#34;4kelly@yahoo.com&#34;</span><span class="p">,</span><span class="s2">&#34;April Kelly&#34;</span><span class="p">,</span><span class="nb">date</span><span class="p">(</span><span class="s2">&#34;1967-12-01&#34;</span><span class="p">),</span><span class="s2">&#34;Schmidt Key Lake Charles  AL 36174&#34;</span><span class="p">,</span><span class="s2">&#34;410.138.1816x98702&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_6&#34;</span><span class="p">:(</span><span class="s2">&#34;steven.web@johnson.com&#34;</span><span class="p">,</span><span class="s2">&#34;Steven Webb&#34;</span><span class="p">,</span><span class="nb">date</span><span class="p">(</span><span class="s2">&#34;1955-04-24&#34;</span><span class="p">),</span><span class="s2">&#34;5 Joanna Key Suite 704 Frankshire  OK 03035&#34;</span><span class="p">,</span><span class="s2">&#34;3666519376&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_7&#34;</span><span class="p">:(</span><span class="s2">&#34;Jessica_Torres@morris.com&#34;</span><span class="p">,</span><span class="s2">&#34;Jessica Torres&#34;</span><span class="p">,</span><span class="nb">date</span><span class="p">(</span><span class="s2">&#34;1958-09-03&#34;</span><span class="p">),</span><span class="s2">&#34;1 Payne Circle Mitchellfort  LA 73053&#34;</span><span class="p">,</span><span class="s2">&#34;535-357-3112x4903&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_8&#34;</span><span class="p">:(</span><span class="s2">&#34;brettglenn@gmail.com&#34;</span><span class="p">,</span><span class="s2">&#34;Brett Glenn&#34;</span><span class="p">,</span><span class="nb">date</span><span class="p">(</span><span class="s2">&#34;1992-09-03&#34;</span><span class="p">),</span><span class="s2">&#34;Weber Unions Eddieland  MT 64619&#34;</span><span class="p">,</span><span class="s2">&#34;660.391.3730&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_9&#34;</span><span class="p">:(</span><span class="s2">&#34;veronica.j@yahoo.com&#34;</span><span class="p">,</span><span class="s2">&#34;Veronica Jordan&#34;</span><span class="p">,</span><span class="nb">date</span><span class="p">(</span><span class="s2">&#34;1947-06-08&#34;</span><span class="p">),</span><span class="s2">&#34;2 Klein Mission New Annetteton  HI 05775&#34;</span><span class="p">,</span><span class="s2">&#34;810-252-6218&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_10&#34;</span><span class="p">:(</span><span class="s2">&#34;steven@phelps-craig.info&#34;</span><span class="p">,</span><span class="s2">&#34;Steven Brooks&#34;</span><span class="p">,</span><span class="nb">date</span><span class="p">(</span><span class="s2">&#34;1954-06-14&#34;</span><span class="p">),</span><span class="s2">&#34;1 Vanessa Stravenue Suite 184 Baileyville  NY 46381&#34;</span><span class="p">,</span><span class="s2">&#34;+1-665-328-8103x3448&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_11&#34;</span><span class="p">:(</span><span class="s2">&#34;ReginaldTheMan@hotmail.com&#34;</span><span class="p">,</span><span class="s2">&#34;Reginald Mccullough&#34;</span><span class="p">,</span><span class="nb">date</span><span class="p">(</span><span class="s2">&#34;1915-04-12&#34;</span><span class="p">),</span><span class="s2">&#34;John Garden Port John  LA 54602&#34;</span><span class="p">,</span><span class="s2">&#34;030.088.4523x94511&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_12&#34;</span><span class="p">:(</span><span class="s2">&#34;Jennifer.f@carroll-acosta.com&#34;</span><span class="p">,</span><span class="s2">&#34;Jennifer Foster&#34;</span><span class="p">,</span><span class="nb">date</span><span class="p">(</span><span class="s2">&#34;1988-04-30&#34;</span><span class="p">),</span><span class="s2">&#34;11 Webb Groves Tiffanyside  MN 14566&#34;</span><span class="p">,</span><span class="s2">&#34;(489)306-8558x98227&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_13&#34;</span><span class="p">:(</span><span class="s2">&#34;Philip66@yahoo.com&#34;</span><span class="p">,</span><span class="s2">&#34;Philip Garcia&#34;</span><span class="p">,</span><span class="nb">date</span><span class="p">(</span><span class="s2">&#34;1955-12-01&#34;</span><span class="p">),</span><span class="s2">&#34;70 Robinson Locks Suite 113 East Veronica  ND 87845&#34;</span><span class="p">,</span><span class="s2">&#34;490-088-7610x9437&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_14&#34;</span><span class="p">:(</span><span class="s2">&#34;Ann@hernandez.com&#34;</span><span class="p">,</span><span class="s2">&#34;Ann Williams&#34;</span><span class="p">,</span><span class="nb">date</span><span class="p">(</span><span class="s2">&#34;1947-05-28&#34;</span><span class="p">),</span><span class="s2">&#34;24 Mcknight Port Apt. 028 Sarahborough  MD 38195&#34;</span><span class="p">,</span><span class="s2">&#34;868.057.4056x4814&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_15&#34;</span><span class="p">:(</span><span class="s2">&#34;Jessica@turner.com&#34;</span><span class="p">,</span><span class="s2">&#34;Jessica Stewart&#34;</span><span class="p">,</span><span class="nb">date</span><span class="p">(</span><span class="s2">&#34;1951-11-28&#34;</span><span class="p">),</span><span class="s2">&#34;0337 Mason Corner Apt. 900 Toddmouth  FL 61464&#34;</span><span class="p">,</span><span class="s2">&#34;(335)408-3835x883&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_16&#34;</span><span class="p">:(</span><span class="s2">&#34;Sandra311@hotmail.com&#34;</span><span class="p">,</span><span class="s2">&#34;Sandra Dougherty&#34;</span><span class="p">,</span><span class="nb">date</span><span class="p">(</span><span class="s2">&#34;1908-06-03&#34;</span><span class="p">),</span><span class="s2">&#34;7 Davis Station Apt. 691 Pittmanfort  HI 29746&#34;</span><span class="p">,</span><span class="s2">&#34;+1-189-827-0744x27614&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_17&#34;</span><span class="p">:(</span><span class="s2">&#34;Sharon91@gmail.com&#34;</span><span class="p">,</span><span class="s2">&#34;Sharon Mccoy&#34;</span><span class="p">,</span><span class="nb">date</span><span class="p">(</span><span class="s2">&#34;1958-09-01&#34;</span><span class="p">),</span><span class="s2">&#34;1 Southport Street Apt. 098 Westport  KY 85907&#34;</span><span class="p">,</span><span class="s2">&#34;(814)898-9079x898&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_18&#34;</span><span class="p">:(</span><span class="s2">&#34;Sharon91+001@gmail.com&#34;</span><span class="p">,</span><span class="s2">&#34;Kathryn Miller&#34;</span><span class="p">,</span><span class="nb">date</span><span class="p">(</span><span class="s2">&#34;1958-09-01&#34;</span><span class="p">),</span><span class="s2">&#34;1 Southport Street Apt. 098 Westport  KY 85907&#34;</span><span class="p">,</span><span class="s2">&#34;(814)898-9079x898&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_19&#34;</span><span class="p">:(</span><span class="s2">&#34;brettglenn@googlemail.com&#34;</span><span class="p">,</span><span class="s2">&#34;Bretty Glenn&#34;</span><span class="p">,</span><span class="nb">date</span><span class="p">(</span><span class="s2">&#34;1991-09-03&#34;</span><span class="p">),</span><span class="s2">&#34;Weber Unions Eddieland  MT 64619&#34;</span><span class="p">,</span><span class="s2">&#34;660-391-3730&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_20&#34;</span><span class="p">:(</span><span class="s2">&#34;julia.h.24@yahoo.com&#34;</span><span class="p">,</span><span class="s2">&#34;Julia H.&#34;</span><span class="p">,</span><span class="nb">date</span><span class="p">(</span><span class="s2">&#34;1927-08-24&#34;</span><span class="p">),</span><span class="s2">&#34;Rodriguez Track East Connorfort NC 63144&#34;</span><span class="p">,</span><span class="s2">&#34;1248361783&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_21&#34;</span><span class="p">:(</span><span class="s2">&#34;holly@welch.org&#34;</span><span class="p">,</span><span class="s2">&#34;Holly&#34;</span><span class="p">,</span><span class="nb">date</span><span class="p">(</span><span class="s2">&#34;0000-10-19&#34;</span><span class="p">),</span><span class="s2">&#34;1 Amanda Freeway Lisaland  NJ 94933&#34;</span><span class="p">,</span><span class="s2">&#34;(600)-192-2985&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_22&#34;</span><span class="p">:(</span><span class="s2">&#34;veronica.j@yahoo.com&#34;</span><span class="p">,</span><span class="s2">&#34;Veronica Jordan&#34;</span><span class="p">,</span><span class="nb">date</span><span class="p">(</span><span class="s2">&#34;0000-06-08&#34;</span><span class="p">),</span><span class="s2">&#34;2 Klein HI 05775&#34;</span><span class="p">,</span><span class="s2">&#34;(810)-252-6218&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_23&#34;</span><span class="p">:(</span><span class="s2">&#34;4kelly@hotmail.com&#34;</span><span class="p">,</span><span class="s2">&#34;Kelly April&#34;</span><span class="p">,</span><span class="nb">date</span><span class="p">(</span><span class="s2">&#34;2010-01-01&#34;</span><span class="p">),</span><span class="s2">&#34;Schmidt Key Lake Charles AL 13617&#34;</span><span class="p">,</span><span class="s2">&#34;410-138-1816&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">INSERT</span><span class="w"> </span><span class="n">VERTEX</span><span class="w"> </span><span class="o">`</span><span class="n">email</span><span class="o">`</span><span class="w"> </span><span class="p">()</span><span class="w"> </span><span class="k">VALUES</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;heathermoore@johnson.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;holly@welch.org&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;julia.h.24@gmail.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;franklin.b@gibson.biz&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;4kelly@yahoo.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;steven.web@johnson.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;Jessica_Torres@morris.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;brettglenn@gmail.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;veronica.j@yahoo.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;steven@phelps-craig.info&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;ReginaldTheMan@hotmail.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;Jennifer.f@carroll-acosta.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;Philip66@yahoo.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;Ann@hernandez.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;Jessica@turner.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;Sandra311@hotmail.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;Sharon91@gmail.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;Sharon91+001@gmail.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;brettglenn@googlemail.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;julia.h.24@yahoo.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;holly@welch.org&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;veronica.j@yahoo.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;4kelly@hotmail.com&#34;</span><span class="p">:();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">INSERT</span><span class="w"> </span><span class="n">VERTEX</span><span class="w"> </span><span class="o">`</span><span class="n">ip</span><span class="o">`</span><span class="w"> </span><span class="p">()</span><span class="w"> </span><span class="k">VALUES</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;202.123.513.12&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;202.41.23.11&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;143.1.23.4&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;143.1.23.12&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;153.42.2.8&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;153.42.2.8&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;153.42.2.8&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;9.1.4.1&#34;</span><span class="p">:()</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">INSERT</span><span class="w"> </span><span class="n">VERTEX</span><span class="w"> </span><span class="o">`</span><span class="n">device</span><span class="o">`</span><span class="p">(</span><span class="o">`</span><span class="n">uuid</span><span class="o">`</span><span class="p">)</span><span class="w"> </span><span class="k">VALUES</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;device_0&#34;</span><span class="p">:(</span><span class="s2">&#34;2a8e791d-0183-4df2-aa36-5ac82151be93&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;device_1&#34;</span><span class="p">:(</span><span class="s2">&#34;f9be6a11-f74b-45f5-a9ea-bb3af5a868a2&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;device_2&#34;</span><span class="p">:(</span><span class="s2">&#34;ae083379-91f5-4cd3-b2b3-273960979dab&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;device_3&#34;</span><span class="p">:(</span><span class="s2">&#34;c0981d43-1e59-4cd5-a1e1-e88cd9e792a5&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;device_4&#34;</span><span class="p">:(</span><span class="s2">&#34;e730dd8a-fcd3-47b4-be4a-0190610e6f02&#34;</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">INSERT</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="o">`</span><span class="n">has_email</span><span class="o">`</span><span class="w"> </span><span class="p">()</span><span class="w"> </span><span class="k">VALUES</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_1&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;heathermoore@johnson.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_2&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;holly@welch.org&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_3&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;julia.h.24@gmail.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_4&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;franklin.b@gibson.biz&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_5&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;4kelly@yahoo.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_6&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;steven.web@johnson.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_7&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;Jessica_Torres@morris.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_8&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;brettglenn@gmail.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_9&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;veronica.j@yahoo.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_10&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;steven@phelps-craig.info&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_11&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;ReginaldTheMan@hotmail.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_12&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;Jennifer.f@carroll-acosta.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_13&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;Philip66@yahoo.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_14&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;Ann@hernandez.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_15&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;Jessica@turner.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_16&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;Sandra311@hotmail.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_17&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;Sharon91@gmail.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_18&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;Sharon91+001@gmail.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_19&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;brettglenn@googlemail.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_20&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;julia.h.24@yahoo.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_21&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;holly@welch.org&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_22&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;veronica.j@yahoo.com&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_23&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;4kelly@hotmail.com&#34;</span><span class="p">:();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">INSERT</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="o">`</span><span class="n">used_device</span><span class="o">`</span><span class="w"> </span><span class="p">(</span><span class="o">`</span><span class="n">time</span><span class="o">`</span><span class="p">)</span><span class="w"> </span><span class="k">VALUES</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_2&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;device_0&#34;</span><span class="p">:(</span><span class="k">timestamp</span><span class="p">(</span><span class="s2">&#34;2021-03-01T08:00:00&#34;</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_21&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;device_0&#34;</span><span class="p">:(</span><span class="k">timestamp</span><span class="p">(</span><span class="s2">&#34;2021-03-01T08:01:00&#34;</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_18&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;device_1&#34;</span><span class="p">:(</span><span class="k">timestamp</span><span class="p">(</span><span class="s2">&#34;2021-03-01T08:02:00&#34;</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_17&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;device_1&#34;</span><span class="p">:(</span><span class="k">timestamp</span><span class="p">(</span><span class="s2">&#34;2021-03-01T08:03:00&#34;</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_22&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;device_2&#34;</span><span class="p">:(</span><span class="k">timestamp</span><span class="p">(</span><span class="s2">&#34;2021-03-01T08:04:00&#34;</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_9&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;device_3&#34;</span><span class="p">:(</span><span class="k">timestamp</span><span class="p">(</span><span class="s2">&#34;2021-03-01T08:05:00&#34;</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_9&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;device_2&#34;</span><span class="p">:(</span><span class="k">timestamp</span><span class="p">(</span><span class="s2">&#34;2021-03-01T08:06:00&#34;</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_23&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;device_4&#34;</span><span class="p">:(</span><span class="k">timestamp</span><span class="p">(</span><span class="s2">&#34;2021-03-01T08:07:00&#34;</span><span class="p">))</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">INSERT</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="o">`</span><span class="n">logged_in_from</span><span class="o">`</span><span class="w"> </span><span class="p">(</span><span class="o">`</span><span class="n">time</span><span class="o">`</span><span class="p">)</span><span class="w"> </span><span class="k">VALUES</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_2&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;202.123.513.12&#34;</span><span class="p">:(</span><span class="k">timestamp</span><span class="p">(</span><span class="s2">&#34;2021-03-01T08:00:00&#34;</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_21&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;202.41.23.11&#34;</span><span class="p">:(</span><span class="k">timestamp</span><span class="p">(</span><span class="s2">&#34;2021-03-01T08:01:00&#34;</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_18&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;143.1.23.4&#34;</span><span class="p">:(</span><span class="k">timestamp</span><span class="p">(</span><span class="s2">&#34;2021-03-01T08:02:00&#34;</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_17&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;143.1.23.12&#34;</span><span class="p">:(</span><span class="k">timestamp</span><span class="p">(</span><span class="s2">&#34;2021-03-01T08:03:00&#34;</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_22&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;153.42.2.8&#34;</span><span class="p">:(</span><span class="k">timestamp</span><span class="p">(</span><span class="s2">&#34;2021-03-01T08:04:00&#34;</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_9&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;153.42.2.8&#34;</span><span class="p">:(</span><span class="k">timestamp</span><span class="p">(</span><span class="s2">&#34;2021-03-01T08:05:00&#34;</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_9&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;153.42.2.8&#34;</span><span class="p">:(</span><span class="k">timestamp</span><span class="p">(</span><span class="s2">&#34;2021-03-01T08:06:00&#34;</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_23&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;9.1.4.1&#34;</span><span class="p">:(</span><span class="k">timestamp</span><span class="p">(</span><span class="s2">&#34;2021-03-01T08:07:00&#34;</span><span class="p">))</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="根据确定规则获取-id-映射关系" class="headerLink">
    <a href="#%e6%a0%b9%e6%8d%ae%e7%a1%ae%e5%ae%9a%e8%a7%84%e5%88%99%e8%8e%b7%e5%8f%96-id-%e6%98%a0%e5%b0%84%e5%85%b3%e7%b3%bb" class="header-mark"></a>1.2 根据确定规则获取 ID 映射关系</h3><p>最简单、直接的方法，在特定的场景下也可能是有用的，试想像 email、IP 地址、上网设备这些有严格结构的数据，在它们成为图谱中的点的时候，简单的相等关系就足以找出这样对应关系，比如：</p>
<ul>
<li>拥有相同的 email</li>
<li>使用过相同的 IP 地址</li>
<li>使用过相同的设备</li>
</ul>
<p>在前边的图谱、图数据库中，拥有相同的 email 可以直接表达为如下的图模式（Graph Pattern）。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">(:user)-[:has_email]-&gt;(:email)&lt;-[:has_email]-[:user]
</span></span></code></pre></td></tr></table>
</div>
</div><p>下图为顶点： user 与边：has_email 的一个图的可视化结果，可以看到这其中有两个三个点相连的串正是符合拥有相同 email 的模式的点。</p>
<blockquote>
<p>注：</p>
<ul>
<li>这个结果的数据源在 <a href="https://github.com/wey-gu/identity-correlation-datagen/tree/main/sample/hand_crafted" target="_blank" rel="noopener noreffer">https://github.com/wey-gu/identity-correlation-datagen/tree/main/sample/hand_crafted</a></li>
<li>如果通过线上访问本文，你可以鼠标悬停（获取点上的属性）和框选放大每一个点和子图哦。</li>
</ul>
</blockquote>
<iframe src="https://datapane.com/reports/v7JN2E7/user-shared-email/embed/" width="100%" height="540px" style="border: none;">IFrame not supported</iframe>
<p>显然，在构建 ID Mapping 系统的过程中，我们就是通过在图数据库中直接查询，可视化渲染结果来看到等效的洞察，这个查询可以写成：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">MATCH p=(:user)-[:has_email]-&gt;(:email)&lt;-[:has_email]-(:user)
</span></span><span class="line"><span class="cl">RETURN p limit 10
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>NebulaGraph 中的查询结果</p>
</blockquote>
<p><a class="lightgallery" href="https://user-images.githubusercontent.com/1651790/186616734-31a010e3-5a0d-4072-8477-7cf753b348a1.png" title="https://user-images.githubusercontent.com/1651790/186616734-31a010e3-5a0d-4072-8477-7cf753b348a1.png" data-thumbnail="https://user-images.githubusercontent.com/1651790/186616734-31a010e3-5a0d-4072-8477-7cf753b348a1.png">
        
    </a></p>
<blockquote>
<p>同样，在上边交互图中可以放大看到这两对拥有相同 email 关联起来的账号：</p>
</blockquote>
<p><a class="lightgallery" href="./shared_email.webp" title="./shared_email.webp" data-thumbnail="./shared_email.webp">
        
    </a></p>
<p>然而，在更多真实世界中，这样的模式匹配往往不能解决更多稍微复杂一点的情形：</p>
<p>比如从上边的图中我们可以看到这两个匹配了的映射中，<code>holly@welch.org</code> 关联下的两个用户的姓名是不同的，而 <code>veronica.j@yahoo.com</code> 关联下的两个用户姓名是完全相同的。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">user_2,holly@welch.org,Holly Pollard,1990-10-19,1 Amanda Freeway Lisaland  NJ 94933,600-192-2985x041
</span></span><span class="line"><span class="cl">user_21,holly@welch.org,Holly,0000-10-19,1 Amanda Freeway Lisaland  NJ 94933,(600)-192-2985
</span></span></code></pre></td></tr></table>
</div>
</div><p>再比如 <code>Sharon91@gmail.com</code> 和 <code>Sharon91+001@gmail.com</code> ，这两个人的姓名不同，但是手机和地址却是相同的。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">user_17,Sharon91@gmail.com,Sharon Mccoy,1958-09-01,1 Southport Street Apt. 098 Westport  KY 85907,(814)898-9079x898
</span></span><span class="line"><span class="cl">user_18,Sharon91+001@gmail.com,Kathryn Miller,1958-09-01,1 Southport Street Apt. 098 Westport  KY 85907,(814)898-9079x898
</span></span></code></pre></td></tr></table>
</div>
</div><p>比较庆幸的是我们只需要增加类似于&quot;拥有相同邮箱&quot;、&ldquo;拥有相同地址&rdquo;、&ldquo;拥有相同电话&quot;等其他条件就可以把这种情况考虑进来了，而随之而来的问题是：</p>
<ul>
<li>不是所有的数据都至少存在某一个确定条件的相等（二元的是与否），所以不存在一条确定的边去连接它们，比如这两个账户中：</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">user_5,4kelly@yahoo.com,April Kelly,1967-12-01,Schmidt Key Lake Charles AL 36174,410.138.1816x98702
</span></span><span class="line"><span class="cl">user_23,4kelly@hotmail.com,Kelly April,2010-01-01,Schmidt Key Lake Charles AL 13617,410-138-1816
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>如何表现 <code>4kelly@yahoo.com</code> 与 <code>4kelly@hotmail.com</code> 的相似性？</li>
<li>如何将多种匹配规则的信息都纳入关联系统？</li>
</ul>
<h3 id="非确定规则基于复合条件量化方法" class="headerLink">
    <a href="#%e9%9d%9e%e7%a1%ae%e5%ae%9a%e8%a7%84%e5%88%99%e5%9f%ba%e4%ba%8e%e5%a4%8d%e5%90%88%e6%9d%a1%e4%bb%b6%e9%87%8f%e5%8c%96%e6%96%b9%e6%b3%95" class="header-mark"></a>1.3 非确定规则基于复合条件量化方法</h3><p>前边提到了几种确定规则无法处理的情况，它们可以归结为这两点：</p>
<ol>
<li>需要多因素（规则）进行综合考虑与判定</li>
<li>需要对非确定条件（属性）进行处理，挖掘隐含相等、相似的关联关系（边）</li>
</ol>
<p>对于 1. ，很自然可以想到对多种关联条件进行量化评分（score），按照多种条件的重要程度进行加权，给出认定为关联的总分的阈值。</p>
<p>有了多因素评分的机制，我们只需要考虑如何在确定的多因素基础之上，增加对不确定因素的处理，从而解决 2.的情况。这里，非确定的条件可能是：</p>
<p>a. 表现结构化数据的相似性：<code>Sharon91@gmail.com</code> 与 <code>Sharon91+001@gmail.com</code></p>
<p>b. 表现非结构化数据的相似性：</p>
<ul>
<li><code>Schmidt Key Lake Charles AL 36174</code> 与 <code>Schmidt Key Lake Charles AL 13617</code></li>
<li><code>600-192-2985x041</code> 与<code>(600)-192-2985</code></li>
</ul>
<p>对于 a. 的结构化数据中的相似性，有两个思路是可以考虑的：</p>
<ul>
<li>直接进行两个值的相似度
<ul>
<li>直接判定子字符串</li>
<li>运算 Jaccard index 等类似的相似度</li>
</ul>
</li>
<li>拆分为更细粒的多个属性
<ul>
<li>将 email <code>foo+num@bar.com</code> 拆分成三个子属性 email_handle: <code>foo</code>, email_alias: <code>num</code>, email_domain: <code>bar.com</code>
<ul>
<li>然后就可以设计详细的确定性规则：email.handle 相等、甚至再在此基础上应用其他非确定规则</li>
<li>有时候，比如对于 email_domain 字段，我们还知道 gmail.com 和 googlemail.com 是等价的，这里的处理也是可以考虑的（像是<code>user_19,brettglenn@googlemail.com</code> 与 <code>user_8,brettglenn@gmail.com</code>，但从邮箱判断背后就是同一个持有者)</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>而对于 b. 的非结构属性相似性距离，处理方式可以根据具体的 domain knowledge 千差万别：</p>
<ul>
<li>像 <code>Schmidt Key Lake Charles AL 36174</code> 与 <code>Schmidt Key Lake Charles AL 13617</code> 的地址信息，除了可以用值的相似度之外，还可以把它转换成地理类型的属性，比如一个经纬度组成的点，从而计算两个点之间的地理距离，根据给定的距离值来打分。</li>
</ul>
<blockquote>
<p>注，你知道吗？NebulaGraph 图数据库中原生支持地理类型的属性与索引，可以直接创建 Point 类型的地理属性，并计算两个 Point 之间的距离。</p>
</blockquote>
<ul>
<li>对于 <code>600-192-2985x041</code> 与<code>(600)-192-2985</code> 这种字符串形式的电话号码，则可以统一转化为<code>&lt;国家码&gt;+&lt;区域码&gt;+&lt;本地号码&gt;+&lt;分机号&gt;</code>这样的结构化数据，进一步按照结构化数据的方式处理。</li>
<li>如果账号存在图片对象 URL，可以对比其文件相似度。</li>
</ul>
<p>另外，对于非结构属性的相似性计算我们要尽量避免两两穷举运算的方式（笛卡尔积），因为这是一个指数增长的量级，一个可行的方法是只比较建立了确定性关系（比如相同邮件前缀：email_handle，地址在相同街区，IP 在同一个网段等）的实体。</p>
<p><strong>小结</strong></p>
<p>总结来看，为了解决真实世界数据的复杂情形，基于复合条件的量化方法有：</p>
<ul>
<li>
<p>通过细化结构数据（比如邮箱字段拆分为子属性或者点）、或者转变为结构化数据（处理字符串形式的电话号码）建立相似结构化数据之间的确定关联；</p>
</li>
<li>
<p>在有限存在确定性关联的点之间（避免两两穷举），运算其他量化、非确定相似性（字符距离、地理距离等、图片文件相似度）；</p>
</li>
<li>
<p>为不同关系赋予加权，计算相似度总分；</p>
</li>
</ul>
<h4 id="基于复合条件量化方法实操" class="headerLink">
    <a href="#%e5%9f%ba%e4%ba%8e%e5%a4%8d%e5%90%88%e6%9d%a1%e4%bb%b6%e9%87%8f%e5%8c%96%e6%96%b9%e6%b3%95%e5%ae%9e%e6%93%8d" class="header-mark"></a>1.3.1 基于复合条件量化方法实操</h4><p>下边，我们来给出这系列方法的实操案例。</p>
<p><strong>1. 细化结构数据</strong></p>
<blockquote>
<p>通过细化结构数据（比如邮箱字段拆分为子属性或者点）、或者转变为结构化数据（处理字符串形式的电话号码）建立相似结构化数据之间的确定关联；</p>
</blockquote>
<p>首先，我们把 email 的点拆成前缀 email_handle 与后缀 email_domain，自然地，会产生这样的边：</p>
<ul>
<li>has_email_with_handle (user -&gt; email_handle)</li>
<li>has_email_with_domain (user -&gt; email_domain)</li>
<li>with_handle (email -&gt; email_handle)</li>
<li>with_domain (email -&gt; email_domain)</li>
</ul>
<p>然而，可以想见 email_domain 是一个潜在的超级节点，并且，它的区分度在很多情况下是很小的，比如 <code>gmail.com</code> 这个公共邮箱后缀没有很大的关联性意义。我们可以只留下 email.handle 作为点，而对于 email_domain，把它留在边中作为属性：</p>
<ul>
<li>has_email_with_handle (user -&gt; email_handle)
<ul>
<li>Prop:
<ul>
<li>email_domain</li>
</ul>
</li>
</ul>
</li>
<li>with_handle (email -&gt; email_handle)
<ul>
<li>Prop:
<ul>
<li>email_domain</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>对应的新的点类型、边类型的 NebulaGraph DDL 语句：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="o">#</span><span class="w"> </span><span class="err">新的点类型</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="o">`</span><span class="n">email_handle</span><span class="o">`</span><span class="w"> </span><span class="p">()</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="err">新的边类型</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="o">`</span><span class="n">has_email_with_handle</span><span class="o">`</span><span class="w"> </span><span class="p">(</span><span class="o">`</span><span class="n">email_domain</span><span class="o">`</span><span class="w"> </span><span class="n">string</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="o">`</span><span class="n">with_handle</span><span class="o">`</span><span class="w"> </span><span class="p">(</span><span class="o">`</span><span class="n">email_domain</span><span class="o">`</span><span class="w"> </span><span class="n">string</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="p">)</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>对应新的点、边的 DML 语句：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">INSERT</span><span class="w"> </span><span class="n">VERTEX</span><span class="w"> </span><span class="o">`</span><span class="n">email_handle</span><span class="o">`</span><span class="w"> </span><span class="p">()</span><span class="w"> </span><span class="k">VALUES</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;4kelly&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;Ann&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;brettglenn&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;franklin.b&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;heathermoore&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;holly&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;Jennifer.f&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;Jessica&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;Jessica_Torres&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;julia.h.24&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;Philip66&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;ReginaldTheMan&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;Sandra311&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;Sharon91&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;steven&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;steven.web&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;veronica.j&#34;</span><span class="p">:();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">INSERT</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="o">`</span><span class="n">has_email_with_handle</span><span class="o">`</span><span class="w"> </span><span class="p">(</span><span class="o">`</span><span class="n">email_domain</span><span class="o">`</span><span class="p">)</span><span class="w"> </span><span class="k">VALUES</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_1&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;heathermoore&#34;</span><span class="p">:(</span><span class="s2">&#34;johnson.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_2&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;holly&#34;</span><span class="p">:(</span><span class="s2">&#34;welch.org&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_3&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;julia.h.24&#34;</span><span class="p">:(</span><span class="s2">&#34;gmail.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_4&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;franklin.b&#34;</span><span class="p">:(</span><span class="s2">&#34;gibson.biz&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_5&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;4kelly&#34;</span><span class="p">:(</span><span class="s2">&#34;yahoo.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_6&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;steven.web&#34;</span><span class="p">:(</span><span class="s2">&#34;johnson.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_7&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;Jessica_Torres&#34;</span><span class="p">:(</span><span class="s2">&#34;morris.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_8&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;brettglenn&#34;</span><span class="p">:(</span><span class="s2">&#34;gmail.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_9&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;veronica.j&#34;</span><span class="p">:(</span><span class="s2">&#34;yahoo.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_10&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;steven&#34;</span><span class="p">:(</span><span class="s2">&#34;phelps-craig.info&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_11&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;ReginaldTheMan&#34;</span><span class="p">:(</span><span class="s2">&#34;hotmail.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_12&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;Jennifer.f&#34;</span><span class="p">:(</span><span class="s2">&#34;carroll-acosta.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_13&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;Philip66&#34;</span><span class="p">:(</span><span class="s2">&#34;yahoo.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_14&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;Ann&#34;</span><span class="p">:(</span><span class="s2">&#34;hernandez.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_15&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;Jessica&#34;</span><span class="p">:(</span><span class="s2">&#34;turner.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_16&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;Sandra311&#34;</span><span class="p">:(</span><span class="s2">&#34;hotmail.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_17&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;Sharon91&#34;</span><span class="p">:(</span><span class="s2">&#34;gmail.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_18&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;Sharon91&#34;</span><span class="p">:(</span><span class="s2">&#34;gmail.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_19&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;brettglenn&#34;</span><span class="p">:(</span><span class="s2">&#34;googlemail.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_20&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;julia.h.24&#34;</span><span class="p">:(</span><span class="s2">&#34;yahoo.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_21&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;holly&#34;</span><span class="p">:(</span><span class="s2">&#34;welch.org&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_22&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;veronica.j&#34;</span><span class="p">:(</span><span class="s2">&#34;yahoo.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_23&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;4kelly&#34;</span><span class="p">:(</span><span class="s2">&#34;hotmail.com&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">INSERT</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="o">`</span><span class="n">with_handle</span><span class="o">`</span><span class="w"> </span><span class="p">(</span><span class="o">`</span><span class="n">email_domain</span><span class="o">`</span><span class="p">)</span><span class="w"> </span><span class="k">VALUES</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;heathermoore@johnson.com&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;heathermoore&#34;</span><span class="p">:(</span><span class="s2">&#34;johnson.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;holly@welch.org&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;holly&#34;</span><span class="p">:(</span><span class="s2">&#34;welch.org&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;julia.h.24@gmail.com&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;julia.h.24&#34;</span><span class="p">:(</span><span class="s2">&#34;gmail.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;franklin.b@gibson.biz&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;franklin.b&#34;</span><span class="p">:(</span><span class="s2">&#34;gibson.biz&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;4kelly@yahoo.com&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;4kelly&#34;</span><span class="p">:(</span><span class="s2">&#34;yahoo.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;steven.web@johnson.com&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;steven.web&#34;</span><span class="p">:(</span><span class="s2">&#34;johnson.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;Jessica_Torres@morris.com&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;Jessica_Torres&#34;</span><span class="p">:(</span><span class="s2">&#34;morris.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;brettglenn@gmail.com&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;brettglenn&#34;</span><span class="p">:(</span><span class="s2">&#34;gmail.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;veronica.j@yahoo.com&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;veronica.j&#34;</span><span class="p">:(</span><span class="s2">&#34;yahoo.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;steven@phelps-craig.info&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;steven&#34;</span><span class="p">:(</span><span class="s2">&#34;phelps-craig.info&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;ReginaldTheMan@hotmail.com&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;ReginaldTheMan&#34;</span><span class="p">:(</span><span class="s2">&#34;hotmail.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;Jennifer.f@carroll-acosta.com&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;Jennifer.f&#34;</span><span class="p">:(</span><span class="s2">&#34;carroll-acosta.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;Philip66@yahoo.com&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;Philip66&#34;</span><span class="p">:(</span><span class="s2">&#34;yahoo.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;Ann@hernandez.com&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;Ann&#34;</span><span class="p">:(</span><span class="s2">&#34;hernandez.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;Jessica@turner.com&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;Jessica&#34;</span><span class="p">:(</span><span class="s2">&#34;turner.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;Sandra311@hotmail.com&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;Sandra311&#34;</span><span class="p">:(</span><span class="s2">&#34;hotmail.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;Sharon91@gmail.com&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;Sharon91&#34;</span><span class="p">:(</span><span class="s2">&#34;gmail.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;Sharon91+001@gmail.com&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;Sharon91&#34;</span><span class="p">:(</span><span class="s2">&#34;gmail.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;brettglenn@googlemail.com&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;brettglenn&#34;</span><span class="p">:(</span><span class="s2">&#34;googlemail.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;julia.h.24@yahoo.com&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;julia.h.24&#34;</span><span class="p">:(</span><span class="s2">&#34;yahoo.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;holly@welch.org&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;holly&#34;</span><span class="p">:(</span><span class="s2">&#34;welch.org&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;veronica.j@yahoo.com&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;veronica.j&#34;</span><span class="p">:(</span><span class="s2">&#34;yahoo.com&#34;</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;4kelly@hotmail.com&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;4kelly&#34;</span><span class="p">:(</span><span class="s2">&#34;hotmail.com&#34;</span><span class="p">);</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>可以看到，经过这个处理，我们已经得到更多关联的用户了，它可以用这个图查询表达：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">MATCH</span><span class="w"> </span><span class="n">p</span><span class="o">=</span><span class="p">(:</span><span class="k">user</span><span class="p">)</span><span class="o">-</span><span class="p">[:</span><span class="n">has_email_with_handle</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">(:</span><span class="n">email_handle</span><span class="p">)</span><span class="o">&lt;-</span><span class="p">[:</span><span class="n">has_email_with_handle</span><span class="p">]</span><span class="o">-</span><span class="p">(:</span><span class="k">user</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">RETURN</span><span class="w"> </span><span class="n">p</span><span class="w"> </span><span class="k">limit</span><span class="w"> </span><span class="mi">10</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p><a class="lightgallery" href="https://user-images.githubusercontent.com/1651790/186620749-d3ff1059-e6c6-4263-aa82-9fa72a6478ee.png" title="https://user-images.githubusercontent.com/1651790/186620749-d3ff1059-e6c6-4263-aa82-9fa72a6478ee.png" data-thumbnail="https://user-images.githubusercontent.com/1651790/186620749-d3ff1059-e6c6-4263-aa82-9fa72a6478ee.png">
        
    </a></p>
<p><strong>2. 非确定性相似性</strong></p>
<blockquote>
<p>在有限存在确定性关联的点之间（避免两两穷举），运算其他量化、非确定相似性（字符距离、地理距离等、图片文件相似度）；</p>
</blockquote>
<p>这里用地址的地理距离来做为例子，我们预先处理每一个地址，将它们的经纬度导入图谱。</p>
<p>这样，我们更改地址这个点的类型 <code>address</code> 的 schema：</p>
<ul>
<li>address
<ul>
<li>Prop: geo_point（<code>geography(point)</code> 经纬度类型）</li>
</ul>
</li>
</ul>
<p>对应过来，它的 DDL 变化是：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-diff" data-lang="diff"><span class="line"><span class="cl"><span class="gd">-CREATE TAG `address` ()
</span></span></span><span class="line"><span class="cl"><span class="gd"></span><span class="gi">+CREATE TAG `address`(`geo_point` geography(point));
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>在已经建立了初始的 <code>address</code> TAG 之上，可以用 <code>ALTER TAG</code> 的 DDL 去修改 <code>address</code> 的定义：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">ALTER</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="o">`</span><span class="n">address</span><span class="o">`</span><span class="w"> </span><span class="k">ADD</span><span class="w"> </span><span class="p">(</span><span class="o">`</span><span class="n">geo_point</span><span class="o">`</span><span class="w"> </span><span class="n">geography</span><span class="p">(</span><span class="n">point</span><span class="p">));</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>可以用 <code>SHOW CREATE TAG</code> 查看修改之后的 Schema</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[</span><span class="n">entity_resolution</span><span class="p">]</span><span class="o">&gt;</span><span class="w"> </span><span class="k">SHOW</span><span class="w"> </span><span class="k">CREATE</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="o">`</span><span class="n">address</span><span class="o">`</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">-----------+------------------------------------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="n">Tag</span><span class="w">       </span><span class="o">|</span><span class="w"> </span><span class="k">Create</span><span class="w"> </span><span class="n">Tag</span><span class="w">                         </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">-----------+------------------------------------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;address&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;CREATE TAG `address` (            |
</span></span></span><span class="line"><span class="cl"><span class="s2">|           |  `address` string NOT NULL,        |
</span></span></span><span class="line"><span class="cl"><span class="s2">|           |  `geo_point` geography(point) NULL |
</span></span></span><span class="line"><span class="cl"><span class="s2">|           | ) ttl_duration = 0, ttl_col = &#34;&#34;&#34;</span><span class="w">  </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">-----------+------------------------------------+
</span></span></span></code></pre></td></tr></table>
</div>
</div></blockquote>
<p>对应的点、边的 DML：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="o">#</span><span class="w"> </span><span class="err">插入边</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">INSERT</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="o">`</span><span class="n">has_address</span><span class="o">`</span><span class="w"> </span><span class="p">()</span><span class="w"> </span><span class="k">VALUES</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_1&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;addr_0&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_2&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;addr_15&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_3&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;addr_18&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_4&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;addr_1&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_5&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;addr_2&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_6&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;addr_3&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_7&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;addr_4&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_8&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;addr_14&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_9&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;addr_5&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_10&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;addr_6&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_11&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;addr_7&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_12&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;addr_8&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_13&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;addr_9&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_14&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;addr_10&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_15&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;addr_11&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_16&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;addr_12&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_17&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;addr_13&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_18&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;addr_13&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_19&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;addr_14&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_20&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;addr_18&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_21&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;addr_15&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_22&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;addr_16&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_23&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;addr_17&#34;</span><span class="p">:()</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="err">插入点，</span><span class="n">geo_point</span><span class="w"> </span><span class="err">是地址的经纬度</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">INSERT</span><span class="w"> </span><span class="n">VERTEX</span><span class="w"> </span><span class="o">`</span><span class="n">address</span><span class="o">`</span><span class="w"> </span><span class="p">(</span><span class="o">`</span><span class="n">address</span><span class="o">`</span><span class="p">,</span><span class="w"> </span><span class="o">`</span><span class="n">geo_point</span><span class="o">`</span><span class="p">)</span><span class="w"> </span><span class="k">VALUES</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;addr_0&#34;</span><span class="p">:(</span><span class="s2">&#34;Brittany Forge Apt. 718 East Eric  WV 97881&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">ST_Point</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;addr_1&#34;</span><span class="p">:(</span><span class="s2">&#34;Richard Curve Kingstad  AZ 05660&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">ST_Point</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;addr_2&#34;</span><span class="p">:(</span><span class="s2">&#34;Schmidt Key Lake Charles  AL 36174&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">ST_Point</span><span class="p">(</span><span class="mi">13</span><span class="p">.</span><span class="mi">13</span><span class="p">,</span><span class="o">-</span><span class="mi">87</span><span class="p">.</span><span class="mi">65</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;addr_3&#34;</span><span class="p">:(</span><span class="s2">&#34;5 Joanna Key Suite 704 Frankshire  OK 03035&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">ST_Point</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;addr_4&#34;</span><span class="p">:(</span><span class="s2">&#34;1 Payne Circle Mitchellfort  LA 73053&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">ST_Point</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;addr_5&#34;</span><span class="p">:(</span><span class="s2">&#34;2 Klein Mission New Annetteton  HI 05775&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">ST_Point</span><span class="p">(</span><span class="mi">9</span><span class="p">,</span><span class="mi">10</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;addr_6&#34;</span><span class="p">:(</span><span class="s2">&#34;1 Vanessa Stravenue Suite 184 Baileyville  NY 46381&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">ST_Point</span><span class="p">(</span><span class="mi">11</span><span class="p">,</span><span class="mi">12</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;addr_7&#34;</span><span class="p">:(</span><span class="s2">&#34;John Garden Port John  LA 54602&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">ST_Point</span><span class="p">(</span><span class="mi">13</span><span class="p">,</span><span class="mi">14</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;addr_8&#34;</span><span class="p">:(</span><span class="s2">&#34;11 Webb Groves Tiffanyside  MN 14566&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">ST_Point</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">16</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;addr_9&#34;</span><span class="p">:(</span><span class="s2">&#34;70 Robinson Locks Suite 113 East Veronica  ND 87845&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">ST_Point</span><span class="p">(</span><span class="mi">17</span><span class="p">,</span><span class="mi">18</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;addr_10&#34;</span><span class="p">:(</span><span class="s2">&#34;24 Mcknight Port Apt. 028 Sarahborough  MD 38195&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">ST_Point</span><span class="p">(</span><span class="mi">19</span><span class="p">,</span><span class="mi">20</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;addr_11&#34;</span><span class="p">:(</span><span class="s2">&#34;0337 Mason Corner Apt. 900 Toddmouth  FL 61464&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">ST_Point</span><span class="p">(</span><span class="mi">21</span><span class="p">,</span><span class="mi">22</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;addr_12&#34;</span><span class="p">:(</span><span class="s2">&#34;7 Davis Station Apt. 691 Pittmanfort  HI 29746&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">ST_Point</span><span class="p">(</span><span class="mi">23</span><span class="p">,</span><span class="mi">24</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;addr_13&#34;</span><span class="p">:(</span><span class="s2">&#34;1 Southport Street Apt. 098 Westport  KY 85907&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">ST_Point</span><span class="p">(</span><span class="mi">120</span><span class="p">.</span><span class="mi">12</span><span class="p">,</span><span class="mi">30</span><span class="p">.</span><span class="mi">16</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;addr_14&#34;</span><span class="p">:(</span><span class="s2">&#34;Weber Unions Eddieland  MT 64619&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">ST_Point</span><span class="p">(</span><span class="mi">25</span><span class="p">,</span><span class="mi">26</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;addr_15&#34;</span><span class="p">:(</span><span class="s2">&#34;1 Amanda Freeway Lisaland  NJ 94933&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">ST_Point</span><span class="p">(</span><span class="mi">27</span><span class="p">,</span><span class="mi">28</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;addr_16&#34;</span><span class="p">:(</span><span class="s2">&#34;2 Klein HI 05775&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">ST_Point</span><span class="p">(</span><span class="mi">9</span><span class="p">,</span><span class="mi">10</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;addr_17&#34;</span><span class="p">:(</span><span class="s2">&#34;Schmidt Key Lake Charles AL 13617&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">ST_Point</span><span class="p">(</span><span class="mi">13</span><span class="p">.</span><span class="mi">12</span><span class="p">,</span><span class="w"> </span><span class="o">-</span><span class="mi">87</span><span class="p">.</span><span class="mi">60</span><span class="p">)),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;addr_18&#34;</span><span class="p">:(</span><span class="s2">&#34;Rodriguez Track East Connorfort  NC 63144&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">ST_Point</span><span class="p">(</span><span class="mi">29</span><span class="p">,</span><span class="mi">30</span><span class="p">))</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>有了经纬度信息，结合 NebulaGraph 原生对于 Geo Spatial 空间地理属性的处理能力，我们可以轻松获得两个点之间的距离（单位：米）</p>
<p>如下，<code>ST_Distance(ST_Point(13.13, -87.65),ST_Point(13.12, -87.60))</code> 表示两个地球上的点 <code>ST_Point(13.13, -87.65)</code> 和 <code>ST_Point(13.12, -87.60))</code> 之间的距离是 <code>5559.9459840993895</code> 米。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">RETURN</span><span class="w"> </span><span class="n">ST_Distance</span><span class="p">(</span><span class="n">ST_Point</span><span class="p">(</span><span class="mi">13</span><span class="p">.</span><span class="mi">13</span><span class="p">,</span><span class="w"> </span><span class="o">-</span><span class="mi">87</span><span class="p">.</span><span class="mi">65</span><span class="p">),</span><span class="n">ST_Point</span><span class="p">(</span><span class="mi">13</span><span class="p">.</span><span class="mi">12</span><span class="p">,</span><span class="w"> </span><span class="o">-</span><span class="mi">87</span><span class="p">.</span><span class="mi">60</span><span class="p">))</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">distance</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">--------------------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="n">distance</span><span class="w">           </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">--------------------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="mi">5559</span><span class="p">.</span><span class="mi">9459840993895</span><span class="w"> </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">--------------------+
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>那么，我们可以用查询语句来表达”所有拥有相同邮箱前缀用户之间的距离“：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">v_start</span><span class="p">:</span><span class="k">user</span><span class="p">)</span><span class="o">-</span><span class="p">[:</span><span class="n">has_email_with_handle</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">(:</span><span class="n">email_handle</span><span class="p">)</span><span class="o">&lt;-</span><span class="p">[:</span><span class="n">has_email_with_handle</span><span class="p">]</span><span class="o">-</span><span class="p">(</span><span class="n">v_end</span><span class="p">:</span><span class="k">user</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">v_start</span><span class="p">:</span><span class="k">user</span><span class="p">)</span><span class="o">-</span><span class="p">[:</span><span class="n">has_address</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">(</span><span class="n">a_start</span><span class="p">:</span><span class="n">address</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">v_end</span><span class="p">:</span><span class="k">user</span><span class="p">)</span><span class="o">-</span><span class="p">[:</span><span class="n">has_address</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">(</span><span class="n">a_end</span><span class="p">:</span><span class="n">address</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">RETURN</span><span class="w"> </span><span class="n">v_start</span><span class="p">,</span><span class="w"> </span><span class="n">v_end</span><span class="p">,</span><span class="w"> </span><span class="n">ST_Distance</span><span class="p">(</span><span class="n">a_start</span><span class="p">.</span><span class="n">address</span><span class="p">.</span><span class="n">geo_point</span><span class="p">,</span><span class="w"> </span><span class="n">a_end</span><span class="p">.</span><span class="n">address</span><span class="p">.</span><span class="n">geo_point</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">distance</span><span class="p">,</span><span class="w"> </span><span class="n">a_start</span><span class="p">,</span><span class="w"> </span><span class="n">a_end</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>这里，为了展现出针对 ”非确定性“ 条件之间的 ”相似性”，我们可以把地址中字符串完全相同的结果过滤掉，<code>WHERE a_start.address.address != a_end.address.address</code>，如此：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">v_start</span><span class="p">:</span><span class="k">user</span><span class="p">)</span><span class="o">-</span><span class="p">[:</span><span class="n">has_email_with_handle</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">(:</span><span class="n">email_handle</span><span class="p">)</span><span class="o">&lt;-</span><span class="p">[:</span><span class="n">has_email_with_handle</span><span class="p">]</span><span class="o">-</span><span class="p">(</span><span class="n">v_end</span><span class="p">:</span><span class="k">user</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">v_start</span><span class="p">:</span><span class="k">user</span><span class="p">)</span><span class="o">-</span><span class="p">[:</span><span class="n">has_address</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">(</span><span class="n">a_start</span><span class="p">:</span><span class="n">address</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">v_end</span><span class="p">:</span><span class="k">user</span><span class="p">)</span><span class="o">-</span><span class="p">[:</span><span class="n">has_address</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">(</span><span class="n">a_end</span><span class="p">:</span><span class="n">address</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w"> </span><span class="n">a_start</span><span class="p">.</span><span class="n">address</span><span class="p">.</span><span class="n">address</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="n">a_end</span><span class="p">.</span><span class="n">address</span><span class="p">.</span><span class="n">address</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">RETURN</span><span class="w"> </span><span class="n">v_start</span><span class="p">.</span><span class="o">`</span><span class="k">user</span><span class="o">`</span><span class="p">.</span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="n">v_end</span><span class="p">.</span><span class="o">`</span><span class="k">user</span><span class="o">`</span><span class="p">.</span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="n">ST_Distance</span><span class="p">(</span><span class="n">a_start</span><span class="p">.</span><span class="n">address</span><span class="p">.</span><span class="n">geo_point</span><span class="p">,</span><span class="w"> </span><span class="n">a_end</span><span class="p">.</span><span class="n">address</span><span class="p">.</span><span class="n">geo_point</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">distance</span><span class="p">,</span><span class="w"> </span><span class="n">a_start</span><span class="p">.</span><span class="n">address</span><span class="p">.</span><span class="n">address</span><span class="p">,</span><span class="w"> </span><span class="n">a_end</span><span class="p">.</span><span class="n">address</span><span class="p">.</span><span class="n">address</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>它的结果是：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="o">+</span><span class="c1">-------------------+-------------------+--------------------+--------------------------------------------+--------------------------------------------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="n">v_start</span><span class="p">.</span><span class="k">user</span><span class="p">.</span><span class="n">name</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">v_end</span><span class="p">.</span><span class="k">user</span><span class="p">.</span><span class="n">name</span><span class="w">   </span><span class="o">|</span><span class="w"> </span><span class="n">distance</span><span class="w">           </span><span class="o">|</span><span class="w"> </span><span class="n">a_start</span><span class="p">.</span><span class="n">address</span><span class="p">.</span><span class="n">address</span><span class="w">                    </span><span class="o">|</span><span class="w"> </span><span class="n">a_end</span><span class="p">.</span><span class="n">address</span><span class="p">.</span><span class="n">address</span><span class="w">                      </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">-------------------+-------------------+--------------------+--------------------------------------------+--------------------------------------------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;April Kelly&#34;</span><span class="w">     </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Kelly April&#34;</span><span class="w">     </span><span class="o">|</span><span class="w"> </span><span class="mi">5559</span><span class="p">.</span><span class="mi">9459840993895</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Schmidt Key Lake Charles  AL 36174&#34;</span><span class="w">       </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Schmidt Key Lake Charles AL 13617&#34;</span><span class="w">        </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Veronica Jordan&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Veronica Jordan&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">0</span><span class="p">.</span><span class="mi">0</span><span class="w">                </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;2 Klein Mission New Annetteton  HI 05775&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;2 Klein HI 05775&#34;</span><span class="w">                         </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Kelly April&#34;</span><span class="w">     </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;April Kelly&#34;</span><span class="w">     </span><span class="o">|</span><span class="w"> </span><span class="mi">5559</span><span class="p">.</span><span class="mi">9459840993895</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Schmidt Key Lake Charles AL 13617&#34;</span><span class="w">        </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Schmidt Key Lake Charles  AL 36174&#34;</span><span class="w">       </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Veronica Jordan&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Veronica Jordan&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">0</span><span class="p">.</span><span class="mi">0</span><span class="w">                </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;2 Klein HI 05775&#34;</span><span class="w">                         </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;2 Klein Mission New Annetteton  HI 05775&#34;</span><span class="w"> </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">-------------------+-------------------+--------------------+--------------------------------------------+--------------------------------------------+
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>可以看出：</p>
<ul>
<li><code>user_5</code> 与 <code>user_23</code> 之间的地址距离只相差 5559 米，因为他们的地址就在一个街区</li>
<li>而 <code>user_9</code> 与 <code>user_13</code> 之间距离相差 0 米，因为它们（&ldquo;2 Klein Mission New Annetteton  HI 05775&rdquo; 与 &ldquo;2 Klein HI 05775&rdquo;）实际上是完全相同的地址。</li>
</ul>
<p>这就是利用属性的具体含义（domain knowledge）计算的实质距离的一个最好的诠释，大家可以借助于图数据库中查询语句描述能力或者利用其他系统去运算用户间非确定性特征的量化距离/相似度。</p>
<p><strong>3. 加权评分</strong></p>
<blockquote>
<p>为不同关系赋予加权，计算相似度总分；</p>
</blockquote>
<p>下边是一个在实际应用中，可以综合考量的多种关联关系，包括但不限于：</p>
<p>确定性关系</p>
<ul>
<li>同名（精确匹配）</li>
<li>相同电话（格式化处理）</li>
<li>使用过相同设备（精确匹配）</li>
<li>同邮件前缀（精细化处理）</li>
</ul>
<p>非确定性</p>
<ul>
<li>地址距离（处理成经纬度，计算地球球面距离）</li>
<li>头像图片背景相似度（训练模型计算图像距离）</li>
</ul>
<p>一个很直觉的方法就是将多种条件按照不同的权重加权，获得两点间的总“疑似相同账号”的评分。</p>
<p>本例中，为求简洁，我们只给出考虑“同邮件前缀”、“同名”与“地理距离小于 10KM”的综合加权，并且认为两个因素的权重都是 1。</p>
<blockquote>
<p>注，为了防止两两全匹配，我们从相同邮件前缀条件作为初始匹配条件。</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">v_start</span><span class="p">:</span><span class="k">user</span><span class="p">)</span><span class="o">-</span><span class="p">[:</span><span class="n">has_email_with_handle</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">(:</span><span class="n">email_handle</span><span class="p">)</span><span class="o">&lt;-</span><span class="p">[:</span><span class="n">has_email_with_handle</span><span class="p">]</span><span class="o">-</span><span class="p">(</span><span class="n">v_end</span><span class="p">:</span><span class="k">user</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">v_start</span><span class="p">:</span><span class="k">user</span><span class="p">)</span><span class="o">-</span><span class="p">[:</span><span class="n">has_address</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">(</span><span class="n">a_start</span><span class="p">:</span><span class="n">address</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">v_end</span><span class="p">:</span><span class="k">user</span><span class="p">)</span><span class="o">-</span><span class="p">[:</span><span class="n">has_address</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">(</span><span class="n">a_end</span><span class="p">:</span><span class="n">address</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WITH</span><span class="w"> </span><span class="n">id</span><span class="p">(</span><span class="n">v_start</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">s</span><span class="p">,</span><span class="w"> </span><span class="n">id</span><span class="p">(</span><span class="n">v_end</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">e</span><span class="p">,</span><span class="w"> </span><span class="n">v_start</span><span class="p">.</span><span class="o">`</span><span class="k">user</span><span class="o">`</span><span class="p">.</span><span class="n">name</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">s_name</span><span class="p">,</span><span class="w"> </span><span class="n">v_end</span><span class="p">.</span><span class="o">`</span><span class="k">user</span><span class="o">`</span><span class="p">.</span><span class="n">name</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">e_name</span><span class="p">,</span><span class="w"> </span><span class="n">ST_Distance</span><span class="p">(</span><span class="n">a_start</span><span class="p">.</span><span class="n">address</span><span class="p">.</span><span class="n">geo_point</span><span class="p">,</span><span class="w"> </span><span class="n">a_end</span><span class="p">.</span><span class="n">address</span><span class="p">.</span><span class="n">geo_point</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">distance</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">RETURN</span><span class="w"> </span><span class="n">s</span><span class="p">,</span><span class="w"> </span><span class="n">e</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">shared_email_handle</span><span class="p">,</span><span class="w"> </span><span class="n">s_name</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">e_name</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">shared_name</span><span class="p">,</span><span class="w"> </span><span class="n">distance</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="mi">10000</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">shared_location</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>结果是</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="o">+</span><span class="c1">-----------+-----------+---------------------+-------------+-----------------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="n">s</span><span class="w">         </span><span class="o">|</span><span class="w"> </span><span class="n">e</span><span class="w">         </span><span class="o">|</span><span class="w"> </span><span class="n">shared_email_handle</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">shared_name</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">shared_location</span><span class="w"> </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">-----------+-----------+---------------------+-------------+-----------------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_5&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_23&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">1</span><span class="w">                   </span><span class="o">|</span><span class="w"> </span><span class="k">false</span><span class="w">       </span><span class="o">|</span><span class="w"> </span><span class="k">true</span><span class="w">            </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_9&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_22&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">1</span><span class="w">                   </span><span class="o">|</span><span class="w"> </span><span class="k">true</span><span class="w">        </span><span class="o">|</span><span class="w"> </span><span class="k">true</span><span class="w">            </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_21&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_2&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="mi">1</span><span class="w">                   </span><span class="o">|</span><span class="w"> </span><span class="k">false</span><span class="w">       </span><span class="o">|</span><span class="w"> </span><span class="k">true</span><span class="w">            </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_2&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_21&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">1</span><span class="w">                   </span><span class="o">|</span><span class="w"> </span><span class="k">false</span><span class="w">       </span><span class="o">|</span><span class="w"> </span><span class="k">true</span><span class="w">            </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_22&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_9&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="mi">1</span><span class="w">                   </span><span class="o">|</span><span class="w"> </span><span class="k">true</span><span class="w">        </span><span class="o">|</span><span class="w"> </span><span class="k">true</span><span class="w">            </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_20&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_3&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="mi">1</span><span class="w">                   </span><span class="o">|</span><span class="w"> </span><span class="k">false</span><span class="w">       </span><span class="o">|</span><span class="w"> </span><span class="k">true</span><span class="w">            </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_3&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_20&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">1</span><span class="w">                   </span><span class="o">|</span><span class="w"> </span><span class="k">false</span><span class="w">       </span><span class="o">|</span><span class="w"> </span><span class="k">true</span><span class="w">            </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_18&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_17&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">1</span><span class="w">                   </span><span class="o">|</span><span class="w"> </span><span class="k">false</span><span class="w">       </span><span class="o">|</span><span class="w"> </span><span class="k">true</span><span class="w">            </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_17&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_18&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">1</span><span class="w">                   </span><span class="o">|</span><span class="w"> </span><span class="k">false</span><span class="w">       </span><span class="o">|</span><span class="w"> </span><span class="k">true</span><span class="w">            </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_19&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_8&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="mi">1</span><span class="w">                   </span><span class="o">|</span><span class="w"> </span><span class="k">false</span><span class="w">       </span><span class="o">|</span><span class="w"> </span><span class="k">true</span><span class="w">            </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_8&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_19&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">1</span><span class="w">                   </span><span class="o">|</span><span class="w"> </span><span class="k">false</span><span class="w">       </span><span class="o">|</span><span class="w"> </span><span class="k">true</span><span class="w">            </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_23&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_5&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="mi">1</span><span class="w">                   </span><span class="o">|</span><span class="w"> </span><span class="k">false</span><span class="w">       </span><span class="o">|</span><span class="w"> </span><span class="k">true</span><span class="w">            </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">-----------+-----------+---------------------+-------------+-----------------+
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>然后，我们计算加权分数：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">v_start</span><span class="p">:</span><span class="k">user</span><span class="p">)</span><span class="o">-</span><span class="p">[:</span><span class="n">has_email_with_handle</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">(:</span><span class="n">email_handle</span><span class="p">)</span><span class="o">&lt;-</span><span class="p">[:</span><span class="n">has_email_with_handle</span><span class="p">]</span><span class="o">-</span><span class="p">(</span><span class="n">v_end</span><span class="p">:</span><span class="k">user</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">v_start</span><span class="p">:</span><span class="k">user</span><span class="p">)</span><span class="o">-</span><span class="p">[:</span><span class="n">has_address</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">(</span><span class="n">a_start</span><span class="p">:</span><span class="n">address</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">v_end</span><span class="p">:</span><span class="k">user</span><span class="p">)</span><span class="o">-</span><span class="p">[:</span><span class="n">has_address</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">(</span><span class="n">a_end</span><span class="p">:</span><span class="n">address</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WITH</span><span class="w"> </span><span class="n">id</span><span class="p">(</span><span class="n">v_start</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">s</span><span class="p">,</span><span class="w"> </span><span class="n">id</span><span class="p">(</span><span class="n">v_end</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">e</span><span class="p">,</span><span class="w"> </span><span class="n">v_start</span><span class="p">.</span><span class="o">`</span><span class="k">user</span><span class="o">`</span><span class="p">.</span><span class="n">name</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">s_name</span><span class="p">,</span><span class="w"> </span><span class="n">v_end</span><span class="p">.</span><span class="o">`</span><span class="k">user</span><span class="o">`</span><span class="p">.</span><span class="n">name</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">e_name</span><span class="p">,</span><span class="w"> </span><span class="n">ST_Distance</span><span class="p">(</span><span class="n">a_start</span><span class="p">.</span><span class="n">address</span><span class="p">.</span><span class="n">geo_point</span><span class="p">,</span><span class="w"> </span><span class="n">a_end</span><span class="p">.</span><span class="n">address</span><span class="p">.</span><span class="n">geo_point</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">distance</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WITH</span><span class="w"> </span><span class="n">s</span><span class="p">,</span><span class="w"> </span><span class="n">e</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">shared_email_handle</span><span class="p">,</span><span class="w"> </span><span class="k">CASE</span><span class="w"> </span><span class="k">WHEN</span><span class="w"> </span><span class="n">s_name</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">e_name</span><span class="w"> </span><span class="k">THEN</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="k">ELSE</span><span class="w"> </span><span class="mi">0</span><span class="w"> </span><span class="k">END</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">shared_name</span><span class="p">,</span><span class="w"> </span><span class="k">CASE</span><span class="w"> </span><span class="k">WHEN</span><span class="w"> </span><span class="n">distance</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="mi">10000</span><span class="w"> </span><span class="k">THEN</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="k">ELSE</span><span class="w"> </span><span class="mi">0</span><span class="w"> </span><span class="k">END</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">shared_location</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">RETURN</span><span class="w"> </span><span class="n">s</span><span class="p">,</span><span class="w"> </span><span class="n">e</span><span class="p">,</span><span class="w"> </span><span class="p">(</span><span class="n">shared_email_handle</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">shared_name</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">shared_location</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">score</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">ORDER</span><span class="w"> </span><span class="k">BY</span><span class="w"> </span><span class="n">score</span><span class="w"> </span><span class="k">DESC</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>结果是</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="o">+</span><span class="c1">-----------+-----------+-------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="n">s</span><span class="w">         </span><span class="o">|</span><span class="w"> </span><span class="n">e</span><span class="w">         </span><span class="o">|</span><span class="w"> </span><span class="n">score</span><span class="w"> </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">-----------+-----------+-------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_9&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_22&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">3</span><span class="w">     </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_22&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_9&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="mi">3</span><span class="w">     </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_5&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_23&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">2</span><span class="w">     </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_21&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_2&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="mi">2</span><span class="w">     </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_2&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_21&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">2</span><span class="w">     </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_20&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_3&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="mi">2</span><span class="w">     </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_3&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_20&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">2</span><span class="w">     </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_18&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_17&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">2</span><span class="w">     </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_17&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_18&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">2</span><span class="w">     </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_19&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_8&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="mi">2</span><span class="w">     </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_8&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_19&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">2</span><span class="w">     </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_23&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_5&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="mi">2</span><span class="w">     </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">-----------+-----------+-------+
</span></span></span></code></pre></td></tr></table>
</div>
</div><h4 id="利用-active-learning-的方法交互式学习评分权重" class="headerLink">
    <a href="#%e5%88%a9%e7%94%a8-active-learning-%e7%9a%84%e6%96%b9%e6%b3%95%e4%ba%a4%e4%ba%92%e5%bc%8f%e5%ad%a6%e4%b9%a0%e8%af%84%e5%88%86%e6%9d%83%e9%87%8d" class="header-mark"></a>1.3.2 利用 Active Learning 的方法交互式学习评分权重</h4><p>实际应用中，不同因素的加权关系也不是那么容易轻易给出的，我们可以利用有限的人力判断进行 Active Learning 的交互训练来习得权重。</p>
<p>TBD</p>
<h3 id="利用新的边连接不同方法" class="headerLink">
    <a href="#%e5%88%a9%e7%94%a8%e6%96%b0%e7%9a%84%e8%be%b9%e8%bf%9e%e6%8e%a5%e4%b8%8d%e5%90%8c%e6%96%b9%e6%b3%95" class="header-mark"></a>1.4 利用新的边连接不同方法</h3><p>进一步，对于这些确定（是否二元的）或非确定（量化的）关系，利用图库与外部系统获得了关联关系之后，常常可以直接把它们定义为图谱中直连的边，写回图库，提供给其他算法、系统作为输入，做进一步迭代、计算。</p>
<h4 id="1-创建单独的直连边" class="headerLink">
    <a href="#1-%e5%88%9b%e5%bb%ba%e5%8d%95%e7%8b%ac%e7%9a%84%e7%9b%b4%e8%bf%9e%e8%be%b9" class="header-mark"></a>1.4.1 1. 创建单独的直连边</h4><p>假设之前对邮件、地址、姓名的处理之后，把结果作为用户实体之前的直连边插入图谱，这些种边叫做：</p>
<ul>
<li>shared_similar_email</li>
<li>shared_similar_location</li>
<li>shared_name</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="o">#</span><span class="w"> </span><span class="n">DDL</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="o">`</span><span class="n">shared_similar_email</span><span class="o">`</span><span class="w"> </span><span class="p">()</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="o">`</span><span class="n">shared_similar_location</span><span class="o">`</span><span class="w"> </span><span class="p">()</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="o">`</span><span class="n">shared_name</span><span class="o">`</span><span class="w"> </span><span class="p">()</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="n">DML</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">INSERT</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="o">`</span><span class="n">shared_similar_email</span><span class="o">`</span><span class="w"> </span><span class="p">()</span><span class="w"> </span><span class="k">VALUES</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_5&#34;</span><span class="w"> </span><span class="o">-&gt;</span><span class="s2">&#34;user_23&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_9&#34;</span><span class="w"> </span><span class="o">-&gt;</span><span class="s2">&#34;user_22&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_21&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;user_2&#34;</span><span class="w"> </span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_2&#34;</span><span class="w"> </span><span class="o">-&gt;</span><span class="s2">&#34;user_21&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_22&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;user_9&#34;</span><span class="w"> </span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_20&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;user_3&#34;</span><span class="w"> </span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_3&#34;</span><span class="w"> </span><span class="o">-&gt;</span><span class="s2">&#34;user_20&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_18&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;user_17&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_17&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;user_18&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_19&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;user_8&#34;</span><span class="w"> </span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_8&#34;</span><span class="w"> </span><span class="o">-&gt;</span><span class="s2">&#34;user_19&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_23&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;user_5&#34;</span><span class="w"> </span><span class="p">:()</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">INSERT</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="o">`</span><span class="n">shared_name</span><span class="o">`</span><span class="w"> </span><span class="p">()</span><span class="w"> </span><span class="k">VALUES</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_9&#34;</span><span class="w"> </span><span class="o">-&gt;</span><span class="s2">&#34;user_22&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_22&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;user_9&#34;</span><span class="w"> </span><span class="p">:()</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">INSERT</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="o">`</span><span class="n">shared_similar_location</span><span class="o">`</span><span class="w"> </span><span class="p">()</span><span class="w"> </span><span class="k">VALUES</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_5&#34;</span><span class="w"> </span><span class="o">-&gt;</span><span class="s2">&#34;user_23&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_9&#34;</span><span class="w"> </span><span class="o">-&gt;</span><span class="s2">&#34;user_22&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_21&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;user_2&#34;</span><span class="w"> </span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_2&#34;</span><span class="w"> </span><span class="o">-&gt;</span><span class="s2">&#34;user_21&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_22&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;user_9&#34;</span><span class="w"> </span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_20&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;user_3&#34;</span><span class="w"> </span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_3&#34;</span><span class="w"> </span><span class="o">-&gt;</span><span class="s2">&#34;user_20&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_18&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;user_17&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_17&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;user_18&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_19&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;user_8&#34;</span><span class="w"> </span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_8&#34;</span><span class="w"> </span><span class="o">-&gt;</span><span class="s2">&#34;user_19&#34;</span><span class="p">:(),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s2">&#34;user_23&#34;</span><span class="o">-&gt;</span><span class="s2">&#34;user_5&#34;</span><span class="w"> </span><span class="p">:()</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h4 id="2-创建复合评分之后的边" class="headerLink">
    <a href="#2-%e5%88%9b%e5%bb%ba%e5%a4%8d%e5%90%88%e8%af%84%e5%88%86%e4%b9%8b%e5%90%8e%e7%9a%84%e8%be%b9" class="header-mark"></a>1.4.2 2. 创建复合评分之后的边</h4><p>比如，我们查询综合分数大于 2 的点：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">v_start</span><span class="p">:</span><span class="k">user</span><span class="p">)</span><span class="o">-</span><span class="p">[:</span><span class="n">has_email_with_handle</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">(:</span><span class="n">email_handle</span><span class="p">)</span><span class="o">&lt;-</span><span class="p">[:</span><span class="n">has_email_with_handle</span><span class="p">]</span><span class="o">-</span><span class="p">(</span><span class="n">v_end</span><span class="p">:</span><span class="k">user</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">v_start</span><span class="p">:</span><span class="k">user</span><span class="p">)</span><span class="o">-</span><span class="p">[:</span><span class="n">has_address</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">(</span><span class="n">a_start</span><span class="p">:</span><span class="n">address</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">v_end</span><span class="p">:</span><span class="k">user</span><span class="p">)</span><span class="o">-</span><span class="p">[:</span><span class="n">has_address</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">(</span><span class="n">a_end</span><span class="p">:</span><span class="n">address</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WITH</span><span class="w"> </span><span class="n">id</span><span class="p">(</span><span class="n">v_start</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">s</span><span class="p">,</span><span class="w"> </span><span class="n">id</span><span class="p">(</span><span class="n">v_end</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">e</span><span class="p">,</span><span class="w"> </span><span class="n">v_start</span><span class="p">.</span><span class="o">`</span><span class="k">user</span><span class="o">`</span><span class="p">.</span><span class="n">name</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">s_name</span><span class="p">,</span><span class="w"> </span><span class="n">v_end</span><span class="p">.</span><span class="o">`</span><span class="k">user</span><span class="o">`</span><span class="p">.</span><span class="n">name</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">e_name</span><span class="p">,</span><span class="w"> </span><span class="n">ST_Distance</span><span class="p">(</span><span class="n">a_start</span><span class="p">.</span><span class="n">address</span><span class="p">.</span><span class="n">geo_point</span><span class="p">,</span><span class="w"> </span><span class="n">a_end</span><span class="p">.</span><span class="n">address</span><span class="p">.</span><span class="n">geo_point</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">distance</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WITH</span><span class="w"> </span><span class="n">s</span><span class="p">,</span><span class="w"> </span><span class="n">e</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">shared_email_handle</span><span class="p">,</span><span class="w"> </span><span class="k">CASE</span><span class="w"> </span><span class="k">WHEN</span><span class="w"> </span><span class="n">s_name</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">e_name</span><span class="w"> </span><span class="k">THEN</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="k">ELSE</span><span class="w"> </span><span class="mi">0</span><span class="w"> </span><span class="k">END</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">shared_name</span><span class="p">,</span><span class="w"> </span><span class="k">CASE</span><span class="w"> </span><span class="k">WHEN</span><span class="w"> </span><span class="n">distance</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="mi">10000</span><span class="w"> </span><span class="k">THEN</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="k">ELSE</span><span class="w"> </span><span class="mi">0</span><span class="w"> </span><span class="k">END</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">shared_location</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WITH</span><span class="w"> </span><span class="n">s</span><span class="p">,</span><span class="w"> </span><span class="n">e</span><span class="p">,</span><span class="w"> </span><span class="p">(</span><span class="n">shared_email_handle</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">shared_name</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">shared_location</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">score</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w"> </span><span class="n">score</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">RETURN</span><span class="w"> </span><span class="n">s</span><span class="p">,</span><span class="w"> </span><span class="n">e</span><span class="p">,</span><span class="w"> </span><span class="n">score</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">ORDER</span><span class="w"> </span><span class="k">BY</span><span class="w"> </span><span class="n">score</span><span class="w"> </span><span class="k">DESC</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>然后根据返回结果建立新的边：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">CREATE</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="o">`</span><span class="n">is_similar_to</span><span class="o">`</span><span class="w"> </span><span class="p">(</span><span class="n">score</span><span class="w"> </span><span class="nb">int</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="p">);</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="基于图算法的方法" class="headerLink">
    <a href="#%e5%9f%ba%e4%ba%8e%e5%9b%be%e7%ae%97%e6%b3%95%e7%9a%84%e6%96%b9%e6%b3%95" class="header-mark"></a>1.5 基于图算法的方法</h3><p>前边的方法中我们直接利用了用户的各项属性、行为事件中产生的关系，并利用各种属性、值相似度的方法建立了基于概率或者带有评分的关联关系。而在通过其他方法增加了新的边之后的图上，我们也可以利用图算法的方法来映射潜在的相同用户 ID。</p>
<h4 id="图相似性算法" class="headerLink">
    <a href="#%e5%9b%be%e7%9b%b8%e4%bc%bc%e6%80%a7%e7%ae%97%e6%b3%95" class="header-mark"></a>1.5.1 图相似性算法</h4><p>利用节点相似性图算法，比如 Jaccard、余弦相似度等，我们可以或者 a. 利用图库之上的图计算平台全量计算相似度，或者 b. 用图查询语句实现全图/给定的点之间的相似度，最后给相似度一定的阈值来帮助建立新的（考虑了涉及边的）映射关系。</p>
<blockquote>
<p>注，这里的 Jaccard index 和我们前边提到的比较两个字符串的方法本质是一样的，不过我们现在提及的是应用在图上的点之间存在相连点作为算法中的“交集”的实现。</p>
</blockquote>
<h4 id="社区发现算法" class="headerLink">
    <a href="#%e7%a4%be%e5%8c%ba%e5%8f%91%e7%8e%b0%e7%ae%97%e6%b3%95" class="header-mark"></a>1.5.2 社区发现算法</h4><p>自然地，还可以用社区发现的算法全图找出给定的基于边之下的社区划分，调试算法，使得目标划分社区内部点为估计的相同用户。</p>
<h4 id="基于图算法方法实操" class="headerLink">
    <a href="#%e5%9f%ba%e4%ba%8e%e5%9b%be%e7%ae%97%e6%b3%95%e6%96%b9%e6%b3%95%e5%ae%9e%e6%93%8d" class="header-mark"></a>1.5.3 基于图算法方法实操</h4><h5 id="基于图查询的-jaccard-实现" class="headerLink">
    <a href="#%e5%9f%ba%e4%ba%8e%e5%9b%be%e6%9f%a5%e8%af%a2%e7%9a%84-jaccard-%e5%ae%9e%e7%8e%b0" class="header-mark"></a>1.5.3.1 基于图查询的 Jaccard 实现</h5><p><a href="https://en.wikipedia.org/wiki/Jaccard_index" target="_blank" rel="noopener noreffer">Jaccard Index</a> 是一个描述两个集合距离的定义公式，非常简单、符合直觉，它的定义为：
$$
J(A,B)= \frac {|A\cap B|}{|A\cup B|}
$$
这里，我们把交集理解为 A 与 B 共同连接的点（设备、IP、邮箱前缀、地址），而并集理解为这几种关系下与 A 或者 B 直连的所有点，于是，我们用这样的 NebulaGraph OpenCypher 查询就可以算出至少包含一跳关系的点和它相关的点、以及 Jaccard Index 值，越大代表关联度越大。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">v_start</span><span class="p">:</span><span class="k">user</span><span class="p">)</span><span class="o">-</span><span class="p">[:</span><span class="n">used_device</span><span class="o">|</span><span class="n">logged_in_from</span><span class="o">|</span><span class="n">has_email_with_handle</span><span class="o">|</span><span class="n">has_address</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">(</span><span class="n">shared_components</span><span class="p">)</span><span class="o">&lt;-</span><span class="p">[:</span><span class="n">used_device</span><span class="o">|</span><span class="n">logged_in_from</span><span class="o">|</span><span class="n">has_email_with_handle</span><span class="o">|</span><span class="n">has_address</span><span class="p">]</span><span class="o">-</span><span class="p">(</span><span class="n">v_end</span><span class="p">:</span><span class="k">user</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WITH</span><span class="w"> </span><span class="n">v_start</span><span class="p">,</span><span class="w"> </span><span class="n">v_end</span><span class="p">,</span><span class="w"> </span><span class="k">count</span><span class="p">(</span><span class="n">shared_components</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">intersection_size</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">v_start</span><span class="p">:</span><span class="k">user</span><span class="p">)</span><span class="o">-</span><span class="p">[:</span><span class="n">used_device</span><span class="o">|</span><span class="n">logged_in_from</span><span class="o">|</span><span class="n">has_email_with_handle</span><span class="o">|</span><span class="n">has_address</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">(</span><span class="n">shared_components</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WITH</span><span class="w"> </span><span class="n">id</span><span class="p">(</span><span class="n">v_start</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">v_start</span><span class="p">,</span><span class="w"> </span><span class="n">v_end</span><span class="p">,</span><span class="w"> </span><span class="n">intersection_size</span><span class="p">,</span><span class="w"> </span><span class="n">COLLECT</span><span class="p">(</span><span class="n">id</span><span class="p">(</span><span class="n">shared_components</span><span class="p">))</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">set_a</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">v_end</span><span class="p">:</span><span class="k">user</span><span class="p">)</span><span class="o">-</span><span class="p">[:</span><span class="n">used_device</span><span class="o">|</span><span class="n">logged_in_from</span><span class="o">|</span><span class="n">has_email_with_handle</span><span class="o">|</span><span class="n">has_address</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">(</span><span class="n">shared_components</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WITH</span><span class="w">  </span><span class="n">v_start</span><span class="p">,</span><span class="w"> </span><span class="n">id</span><span class="p">(</span><span class="n">v_end</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">v_end</span><span class="p">,</span><span class="w"> </span><span class="n">intersection_size</span><span class="p">,</span><span class="w"> </span><span class="n">set_a</span><span class="p">,</span><span class="w"> </span><span class="n">COLLECT</span><span class="p">(</span><span class="n">id</span><span class="p">(</span><span class="n">shared_components</span><span class="p">))</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">set_b</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WITH</span><span class="w"> </span><span class="n">v_start</span><span class="p">,</span><span class="w"> </span><span class="n">v_end</span><span class="p">,</span><span class="w"> </span><span class="n">toFloat</span><span class="p">(</span><span class="n">intersection_size</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">intersection_size</span><span class="p">,</span><span class="w"> </span><span class="n">toSet</span><span class="p">(</span><span class="n">set_a</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">set_b</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">A_U_B</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">RETURN</span><span class="w"> </span><span class="n">v_start</span><span class="p">,</span><span class="w"> </span><span class="n">v_end</span><span class="p">,</span><span class="w"> </span><span class="n">intersection_size</span><span class="o">/</span><span class="k">size</span><span class="p">(</span><span class="n">A_U_B</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">jaccard_index</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">ORDER</span><span class="w"> </span><span class="k">BY</span><span class="w"> </span><span class="n">jaccard_index</span><span class="w"> </span><span class="k">DESC</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>我们可以看到结果里：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="o">+</span><span class="c1">-----------+-----------+---------------------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="n">v_start</span><span class="w">   </span><span class="o">|</span><span class="w"> </span><span class="n">v_end</span><span class="w">     </span><span class="o">|</span><span class="w"> </span><span class="n">jaccard_index</span><span class="w">       </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">-----------+-----------+---------------------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_8&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_19&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">1</span><span class="p">.</span><span class="mi">0</span><span class="w">                 </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_19&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_8&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="mi">1</span><span class="p">.</span><span class="mi">0</span><span class="w">                 </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_20&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_3&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="mi">0</span><span class="p">.</span><span class="mi">6666666666666666</span><span class="w">  </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_3&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_20&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">0</span><span class="p">.</span><span class="mi">6666666666666666</span><span class="w">  </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_21&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_2&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="mi">0</span><span class="p">.</span><span class="mi">6</span><span class="w">                 </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_18&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_17&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">0</span><span class="p">.</span><span class="mi">6</span><span class="w">                 </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_17&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_18&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">0</span><span class="p">.</span><span class="mi">6</span><span class="w">                 </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_2&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_21&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">0</span><span class="p">.</span><span class="mi">6</span><span class="w">                 </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_22&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_9&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="mi">0</span><span class="p">.</span><span class="mi">5</span><span class="w">                 </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_9&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_22&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">0</span><span class="p">.</span><span class="mi">5</span><span class="w">                 </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_23&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_5&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="mi">0</span><span class="p">.</span><span class="mi">2</span><span class="w">                 </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_5&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_23&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">0</span><span class="p">.</span><span class="mi">2</span><span class="w">                 </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_21&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_20&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">0</span><span class="p">.</span><span class="mi">16666666666666666</span><span class="w"> </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_20&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;user_21&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">0</span><span class="p">.</span><span class="mi">16666666666666666</span><span class="w"> </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">-----------+-----------+---------------------+
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>user_8 与 user_19 的系数是最大的的，让我们看看他们之间的连接？</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="n">FIND</span><span class="w"> </span><span class="k">ALL</span><span class="w"> </span><span class="n">PATH</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="s2">&#34;user_8&#34;</span><span class="w"> </span><span class="k">TO</span><span class="w"> </span><span class="s2">&#34;user_19&#34;</span><span class="w"> </span><span class="n">OVER</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">BIDIRECT</span><span class="w"> </span><span class="n">YIELD</span><span class="w"> </span><span class="n">path</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">p</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>果然，他们之间的相似度很大：</p>
<p><a class="lightgallery" href="https://user-images.githubusercontent.com/1651790/187080900-48994824-811f-492b-a43c-e8d781331ffa.png" title="https://user-images.githubusercontent.com/1651790/187080900-48994824-811f-492b-a43c-e8d781331ffa.png" data-thumbnail="https://user-images.githubusercontent.com/1651790/187080900-48994824-811f-492b-a43c-e8d781331ffa.png">
        
    </a></p>
<h5 id="基于图计算平台的-jaccard-实操" class="headerLink">
    <a href="#%e5%9f%ba%e4%ba%8e%e5%9b%be%e8%ae%a1%e7%ae%97%e5%b9%b3%e5%8f%b0%e7%9a%84-jaccard-%e5%ae%9e%e6%93%8d" class="header-mark"></a>1.5.3.2 基于图计算平台的 Jaccard 实操</h5><p>基于 Spark 的全图 Jaccard 运算</p>
<p>TBD with NebulaGraph Algorithm</p>
<h5 id="基于图社区发现算法的实操" class="headerLink">
    <a href="#%e5%9f%ba%e4%ba%8e%e5%9b%be%e7%a4%be%e5%8c%ba%e5%8f%91%e7%8e%b0%e7%ae%97%e6%b3%95%e7%9a%84%e5%ae%9e%e6%93%8d" class="header-mark"></a>1.5.3.3 基于图社区发现算法的实操</h5><p>基于 Spark 的全图 Louvian</p>
<p>TBD with NebulaGraph Algorithm</p>
<h3 id="基于图神经网络的方法" class="headerLink">
    <a href="#%e5%9f%ba%e4%ba%8e%e5%9b%be%e7%a5%9e%e7%bb%8f%e7%bd%91%e7%bb%9c%e7%9a%84%e6%96%b9%e6%b3%95" class="header-mark"></a>1.6 基于图神经网络的方法</h3><p>我们注意到，在我们讲以上不同的方法相结合的时候，都是把前导方法的结果作为图上的边，进而作为后边的方法的输入，实际上相同用户 ID 的识别本质上就是在图上去预测用户之间链接、边。</p>
<p>而在 GNN 的方法中，除了我们在欺诈检测中利用到的节点分类（属性预测）之外，链接预测（Link Prediction）是另一个常见的算法目标和应用场景。我们自然也可以用 GNN 的方法，结合 1. 非 GNN 方法获得的和 2. 已经有的人为标注的链接，学习、预测图上的 ID 映射。</p>
<p>值得注意的是，GNN 的方法只能利用数字型的 feature、属性，我们没办法把非数字型的属性像在分类情况里那样枚举为数值，相反，我们在真正的 GNN 之前，可以用其他的图方法去建立基于打分、或者相似度的边建立。这时候，这些前边的方法成为了 GNN 链路预测的特征工程。</p>
<h4 id="基于-gnn-的实操" class="headerLink">
    <a href="#%e5%9f%ba%e4%ba%8e-gnn-%e7%9a%84%e5%ae%9e%e6%93%8d" class="header-mark"></a>1.6.1 基于 GNN 的实操</h4><p>Nebula-DGL 链路预测例子，TBD</p>
<blockquote>
<p>Feature image credit by <a href="https://unsplash.com/photos/2fn_pxLMS9g" target="_blank" rel="noopener noreffer">Cosmin Serbin</a></p>
</blockquote>]]></description>
</item><item>
    <title>基于 NebulaGraph 图数据库的欺诈检测方法与代码示例</title>
    <link>https://siwei.io/fraud-detection-with-nebulagraph/</link>
    <pubDate>Mon, 01 Aug 2022 01:15:05 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/fraud-detection-with-nebulagraph/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/fraud-detection-with-nebulagraph/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p>本文是一个基于 NebulaGraph 上图算法、图数据库、机器学习、GNN 的 Fraud Detection 方法综述，除了基本方法思想的介绍之外，我还给大家弄了可以跑的 Playground。</p>
</blockquote>
<blockquote>
<p>值得一提的是，这还我第一次给大家介绍 Nebula-DGL 这个项目 😁。</p>
</blockquote>
<h2 id="基于图数据库的欺诈检测方法" class="headerLink">
    <a href="#%e5%9f%ba%e4%ba%8e%e5%9b%be%e6%95%b0%e6%8d%ae%e5%ba%93%e7%9a%84%e6%ac%ba%e8%af%88%e6%a3%80%e6%b5%8b%e6%96%b9%e6%b3%95" class="header-mark"></a>1 基于图数据库的欺诈检测方法</h2><h3 id="建立图谱" class="headerLink">
    <a href="#%e5%bb%ba%e7%ab%8b%e5%9b%be%e8%b0%b1" class="header-mark"></a>1.1 建立图谱</h3><p>首先，对现有的历史数据、标注信息面向关联关系进行属性图建模。这种原始数据是多个表结构中的银行、电子商务或者保险行业里的交易事件记录、用户数据和风控标注，而建模过程就是抽象出我们关心的实体、实体间的关联关系、和其中有意义的属性。</p>
<p>一般来说，自然人、公司实体、电话号码、地址、设备（比如终端设备、网络地址、终端设备所连接的 WiFi SSID 等）、订单都是实体本身，其他信息比如风险标注（是否高风险、风险描述等）、自然人和公司实体的信息（职业、收入、学历等）都作为实体的属性来建模。</p>
<p>下图是一个可以参考的贷款反欺诈的示例建模，它来自一份作者开源的图结构数据生成项目。</p>
<blockquote>
<p>注，你可以访问 <a href="https://github.com/wey-gu/fraud-detection-datagen" target="_blank" rel="noopener noreffer">https://github.com/wey-gu/fraud-detection-datagen</a> 获取这个开源的数据生成器代码和一份示例的数据。</p>
</blockquote>
<p><a class="lightgallery" href="https://github.com/wey-gu/fraud-detection-datagen/raw/main/images/fraud_detection_graph_model.svg" title="https://github.com/wey-gu/fraud-detection-datagen/raw/main/images/fraud_detection_graph_model.svg" data-thumbnail="https://github.com/wey-gu/fraud-detection-datagen/raw/main/images/fraud_detection_graph_model.svg">
        
    </a></p>
<h3 id="图数据库查询识别风险" class="headerLink">
    <a href="#%e5%9b%be%e6%95%b0%e6%8d%ae%e5%ba%93%e6%9f%a5%e8%af%a2%e8%af%86%e5%88%ab%e9%a3%8e%e9%99%a9" class="header-mark"></a>1.2 图数据库查询识别风险</h3><p>有了一张囊括了人、公司、历史贷款申请记录、电话、线上申请网络设备的图谱，我们可以挖掘一些有意思的信息。</p>
<p>事实上，很多值得被发现、并有效阻止从而止损的骗保行为是具有群体聚集性的。比如欺诈团伙可能是一小批人（比如3到5人）有组织地收集更大规模的身份证信息（比如30张），同时发起多个金融机构大量贷款，然后在放款后选择丢弃这批留下了违约记录的身份证，再进一步选择下一批身份证信息如法炮制。</p>
<p>这种团伙作案的方式因为利用了大量新的身份信息，完全利用历史记录去黑名单规避风险的方式是无效的。不过，借助于关联关系的视角，这些模式是一定程度上可以被及时识别出来的。</p>
<p>这些规可以被识别出的规律我把它分成两种：</p>
<p>一种是风控专家可以直接用某种模式来描述的，例如：和已经被标注为高风险的实体有直接或者间接的关联关系（新订单申请人使用了和过往高风险记录相同的网络设备），这种模式对应到图谱中，通过一个图查询就可以实时给出结果。</p>
<p>另一种是隐含在数据的关联关系背后，需要通过图算法挖掘得出的一些风险提示，例如：尽管给定的实体与有限的标注高风险实体没有匹配的关联，但是它在图中形成了聚集性可能提示我们这可能是一个尚未得手的进行中的团伙贷款诈骗的其中一次申请，这种情况可以通过定期在历史数据中批量执行社区发现算法得出，并在高聚集社区中利用中心性算法给出核心实体，一并提示给风险专家进行后续评估和风险标注。</p>
<h4 id="基于图谱与专家图模式匹配的欺诈检测示例" class="headerLink">
    <a href="#%e5%9f%ba%e4%ba%8e%e5%9b%be%e8%b0%b1%e4%b8%8e%e4%b8%93%e5%ae%b6%e5%9b%be%e6%a8%a1%e5%bc%8f%e5%8c%b9%e9%85%8d%e7%9a%84%e6%ac%ba%e8%af%88%e6%a3%80%e6%b5%8b%e7%a4%ba%e4%be%8b" class="header-mark"></a>1.2.1 基于图谱与专家图模式匹配的欺诈检测示例</h4><p>在开始之前，我们利用 Nebula-UP 来一键部署一套 NebulaGraph 图数据库：</p>
<blockquote>
<p>更多请参考 <a href="https://github.com/wey-gu/nebula-up/" target="_blank" rel="noopener noreffer">https://github.com/wey-gu/nebula-up/</a></p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">curl -fsSL nebula-up.siwei.io/install.sh <span class="p">|</span> bash
</span></span></code></pre></td></tr></table>
</div>
</div><p>首先，我们把前边建模的图谱加载到 NebulaGraph 里：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 克隆数据集代码仓库</span>
</span></span><span class="line"><span class="cl">git clone https://github.com/wey-gu/fraud-detection-datagen.git
</span></span><span class="line"><span class="cl">cp -r data_sample_numerical_vertex_id data
</span></span><span class="line"><span class="cl"><span class="c1"># 去掉表头</span>
</span></span><span class="line"><span class="cl">sed -i <span class="s1">&#39;1d&#39;</span> data/*.csv
</span></span><span class="line"><span class="cl">docker run --rm -ti <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --network<span class="o">=</span>nebula-net <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -v <span class="si">${</span><span class="nv">PWD</span><span class="si">}</span>:/root/ <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -v <span class="si">${</span><span class="nv">PWD</span><span class="si">}</span>/data/:/data <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    vesoft/nebula-importer:v3.1.0 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --config /root/nebula_graph_importer.yaml
</span></span></code></pre></td></tr></table>
</div>
</div><p>有了这样一个图谱，风控专家可以在可视化探索工具中按需探索实体之间的关系，绘制相应的风险模式：</p>
<p><a class="lightgallery" href="./viz_graph_query.webp" title="./viz_graph_query.webp" data-thumbnail="./viz_graph_query.webp">
        
    </a></p>
<p>在这个探索截图里，我们可以明显看到一个群控设备的风险模式，这个模式可以被交给图数据库开发者，抽象成可以被风控应用定期、实时查询的语句：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-GRAPHQL" data-lang="GRAPHQL"><span class="line"><span class="cl"><span class="c">## 针对一笔交易申请关联查询</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">MATCH</span><span class="w"> </span><span class="p">(</span><span class="py">n</span><span class="p">)</span><span class="w"> </span><span class="py">WHERE</span><span class="w"> </span><span class="py">id</span><span class="p">(</span><span class="py">n</span><span class="p">)</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="s">&#34;200000010265&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">OPTIONAL</span><span class="w"> </span><span class="py">MATCH</span><span class="w"> </span><span class="py">p_shared_d</span><span class="p">=(</span><span class="py">n</span><span class="p">)</span><span class="err">-</span><span class="p">[:</span><span class="nc">used_device</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">d</span><span class="p">)</span><span class="err">&lt;-</span><span class="p">[:</span><span class="nc">used_device</span><span class="p">]</span><span class="err">-</span><span class="p">(:</span><span class="nc">applicant</span><span class="p">)</span><span class="err">-</span><span class="p">[:</span><span class="nc">with_phone_num</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">pn</span><span class="p">:</span><span class="nc">phone_num</span><span class="p">)</span><span class="err">&lt;-</span><span class="p">[</span><span class="py">e</span><span class="p">:</span><span class="nc">with_phone_num</span><span class="p">]</span><span class="err">-</span><span class="p">(:</span><span class="nc">applicant</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">RETURN</span><span class="w"> </span><span class="py">p_shared_d</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>我们可以很容易在此模型之上，通过修改返回的关联设备计数，作为意向指标查询的判断 API：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-graphql" data-lang="graphql"><span class="line"><span class="cl"><span class="c">## 群控指标</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">MATCH</span><span class="w"> </span><span class="p">(</span><span class="py">n</span><span class="p">)</span><span class="w"> </span><span class="py">WHERE</span><span class="w"> </span><span class="py">id</span><span class="p">(</span><span class="py">n</span><span class="p">)</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="s">&#34;200000010265&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">OPTIONAL</span><span class="w"> </span><span class="py">MATCH</span><span class="w"> </span><span class="py">p_shared_d</span><span class="p">=(</span><span class="py">n</span><span class="p">)</span><span class="err">-</span><span class="p">[:</span><span class="nc">used_device</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">d</span><span class="p">)</span><span class="err">&lt;-</span><span class="p">[:</span><span class="nc">used_device</span><span class="p">]</span><span class="err">-</span><span class="p">(:</span><span class="nc">applicant</span><span class="p">)</span><span class="err">-</span><span class="p">[:</span><span class="nc">with_phone_num</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">pn</span><span class="p">:</span><span class="nc">phone_num</span><span class="p">)</span><span class="err">&lt;-</span><span class="p">[</span><span class="py">e</span><span class="p">:</span><span class="nc">with_phone_num</span><span class="p">]</span><span class="err">-</span><span class="p">(:</span><span class="nc">applicant</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">RETURN</span><span class="w"> </span><span class="py">count</span><span class="p">(</span><span class="py">e</span><span class="p">)</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>如此，我们可以建立一个相对有效的风控系统，利用有限的标注数据和专家资源，去更高效控制团伙欺诈作案风险，然而，在现实情况下，我们的大多数标注数据的获取还是过于昂贵，那么有没有什么方法是更有效利用有限的风险标注和图结构，来预测出风险呢？</p>
<h3 id="利用图扩充标注" class="headerLink">
    <a href="#%e5%88%a9%e7%94%a8%e5%9b%be%e6%89%a9%e5%85%85%e6%a0%87%e6%b3%a8" class="header-mark"></a>1.3 利用图扩充标注</h3><p>答案是肯定的， Xiaojin Z. 和 Zoubin G. 在论文：<a href="http://mlg.eng.cam.ac.uk/zoubin/papers/CMU-CALD-02-107.pdf" target="_blank" rel="noopener noreffer">Learning from Labeled and Unlabeled Data with Label Propagation</a> （CMU-CALD-02-107）中，利用标签传播（Label Propagation）算法来把有限的标注信息在图上通过关联关系传播到更多实体中。</p>
<p>这样，在我们建立的图谱中，我们可以很容易地借助有限的高风险标注，去“传播”产生更多的标注信息。这些扩展出来的标注信息一方面可以在实时的图查询中给出更多的结果，另一方面，它还能作为风控专家重要的输入信息，帮助推进反欺诈调查行动的开展。</p>
<p>一般来说，我们可以通过定期离线地全图扫描数据，通过图算法扩充、更新标注，再将有效的更新标注写回到图谱之中。</p>
<h4 id="图算法扩充欺诈风险标注的示例" class="headerLink">
    <a href="#%e5%9b%be%e7%ae%97%e6%b3%95%e6%89%a9%e5%85%85%e6%ac%ba%e8%af%88%e9%a3%8e%e9%99%a9%e6%a0%87%e6%b3%a8%e7%9a%84%e7%a4%ba%e4%be%8b" class="header-mark"></a>1.3.1 图算法扩充欺诈风险标注的示例</h4><p>下面，我给出一个可以跑通的案例：</p>
<p>这个例子中，我用到了 Yelp 这个欺诈识别的经典数据，这份数据不只会用在这个例子中，后边 GNN 方法中的案例我也会用到它，所以大家可以耐心把数据导入 NebulaGraph。</p>
<p>导入数据到图库</p>
<blockquote>
<p>生成导入的方法在这里，https://github.com/wey-gu/nebulagraph-yelp-frauddetection</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> ~
</span></span><span class="line"><span class="cl">git clone https://github.com/wey-gu/nebulagraph-yelp-frauddetection
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> nebulagraph-yelp-frauddetection
</span></span><span class="line"><span class="cl">python3 -m pip install -r requirements.txt
</span></span><span class="line"><span class="cl">python3 data_download.py
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 导入图库</span>
</span></span><span class="line"><span class="cl">docker run --rm -ti <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --network<span class="o">=</span>nebula-net <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -v <span class="si">${</span><span class="nv">PWD</span><span class="si">}</span>/yelp_nebulagraph_importer.yaml:/root/importer.yaml <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -v <span class="si">${</span><span class="nv">PWD</span><span class="si">}</span>/data:/root <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    vesoft/nebula-importer:v3.1.0 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --config /root/importer.yaml
</span></span></code></pre></td></tr></table>
</div>
</div><p>结束之后，我们可以看一下图上的统计：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">~/.nebula-up/console.sh -e <span class="s2">&#34;USE yelp; SHOW STATS&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后，我们可以看到：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">(</span>root@nebula<span class="o">)</span> <span class="o">[(</span>none<span class="o">)]</span>&gt; USE yelp<span class="p">;</span> SHOW STATS
</span></span><span class="line"><span class="cl">+---------+---------------------------------------+---------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> Type    <span class="p">|</span> Name                                  <span class="p">|</span> Count   <span class="p">|</span>
</span></span><span class="line"><span class="cl">+---------+---------------------------------------+---------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> <span class="s2">&#34;Tag&#34;</span>   <span class="p">|</span> <span class="s2">&#34;review&#34;</span>                              <span class="p">|</span> <span class="m">45954</span>   <span class="p">|</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> <span class="s2">&#34;Edge&#34;</span>  <span class="p">|</span> <span class="s2">&#34;shares_restaurant_in_one_month_with&#34;</span> <span class="p">|</span> <span class="m">1147232</span> <span class="p">|</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> <span class="s2">&#34;Edge&#34;</span>  <span class="p">|</span> <span class="s2">&#34;shares_restaurant_rating_with&#34;</span>       <span class="p">|</span> <span class="m">6805486</span> <span class="p">|</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> <span class="s2">&#34;Edge&#34;</span>  <span class="p">|</span> <span class="s2">&#34;shares_user_with&#34;</span>                    <span class="p">|</span> <span class="m">98630</span>   <span class="p">|</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> <span class="s2">&#34;Space&#34;</span> <span class="p">|</span> <span class="s2">&#34;vertices&#34;</span>                            <span class="p">|</span> <span class="m">45954</span>   <span class="p">|</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> <span class="s2">&#34;Space&#34;</span> <span class="p">|</span> <span class="s2">&#34;edges&#34;</span>                               <span class="p">|</span> <span class="m">8051348</span> <span class="p">|</span>
</span></span><span class="line"><span class="cl">+---------+---------------------------------------+---------+
</span></span><span class="line"><span class="cl">Got <span class="m">6</span> rows <span class="o">(</span><span class="nb">time</span> spent 1911/4488 us<span class="o">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>目前，市面上的 LPA 标签传播算法都是用来做社区检测的，很少有实现是用来做标签拓展的（只有 SK-Learn 中有这个实现），这里，我们参考 <a href="https://datascience.stackexchange.com/users/77683/thibaud-m" target="_blank" rel="noopener noreffer">Thibaud M</a> 给出来的实现。</p>
<blockquote>
<p>原始的讨论参考：https://datascience.stackexchange.com/a/55720/138720</p>
</blockquote>
<p>为了让这个算法跑的快一点，会从 NebulaGraph 里取一个点的子图，在这个小的子图上做标注的扩充：</p>
<p>首先，我们启动一个 Jupyter 的 Playground，</p>
<blockquote>
<p>参考 <a href="https://github.com/wey-gu/nebula-dgl" target="_blank" rel="noopener noreffer">https://github.com/wey-gu/nebula-dgl</a> 中的 Playground 过程：</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git clone https://github.com/wey-gu/nebula-dgl.git
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> nebula-dgl
</span></span><span class="line"><span class="cl"><span class="c1"># 运行 Jupyter Notebook</span>
</span></span><span class="line"><span class="cl">docker run -it --name dgl -p 8888:8888 --network nebula-net <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -v <span class="s2">&#34;</span><span class="nv">$PWD</span><span class="s2">&#34;</span>:/home/jovyan/work jupyter/datascience-notebook <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    start-notebook.sh --NotebookApp.token<span class="o">=</span><span class="s1">&#39;nebulagraph&#39;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>访问：http://localhost:8888/lab/tree/work?token=nebulagraph</p>
<p>安装依赖（这些依赖在后边的 GNN 例子中也会被用到）</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="err">!</span><span class="n">python3</span> <span class="o">-</span><span class="n">m</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">git</span><span class="o">+</span><span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">vesoft</span><span class="o">-</span><span class="n">inc</span><span class="o">/</span><span class="n">nebula</span><span class="o">-</span><span class="n">python</span><span class="o">.</span><span class="n">git</span><span class="o">@</span><span class="mi">8</span><span class="n">c328c534413b04ccecfd42e64ce6491e09c6ca8</span>
</span></span><span class="line"><span class="cl"><span class="err">!</span><span class="n">python3</span> <span class="o">-</span><span class="n">m</span> <span class="n">pip</span> <span class="n">install</span> <span class="o">.</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后，我们从图中读取一个子图，从 <code>2048</code> 这个点开始探索两步内的所有边。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">torch</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">json</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">torch</span> <span class="kn">import</span> <span class="n">tensor</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">dgl</span> <span class="kn">import</span> <span class="n">DGLHeteroGraph</span><span class="p">,</span> <span class="n">heterograph</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">nebula3.gclient.net</span> <span class="kn">import</span> <span class="n">ConnectionPool</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">nebula3.Config</span> <span class="kn">import</span> <span class="n">Config</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">config</span> <span class="o">=</span> <span class="n">Config</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">config</span><span class="o">.</span><span class="n">max_connection_pool_size</span> <span class="o">=</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl"><span class="n">connection_pool</span> <span class="o">=</span> <span class="n">ConnectionPool</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">connection_pool</span><span class="o">.</span><span class="n">init</span><span class="p">([(</span><span class="s1">&#39;graphd&#39;</span><span class="p">,</span> <span class="mi">9669</span><span class="p">)],</span> <span class="n">config</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">vertex_id</span> <span class="o">=</span> <span class="mi">2048</span>
</span></span><span class="line"><span class="cl"><span class="n">client</span> <span class="o">=</span> <span class="n">connection_pool</span><span class="o">.</span><span class="n">get_session</span><span class="p">(</span><span class="s1">&#39;root&#39;</span><span class="p">,</span> <span class="s1">&#39;nebula&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">r</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="n">execute_json</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;USE yelp;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="sa">f</span><span class="s2">&#34;GET SUBGRAPH WITH PROP 2 STEPS FROM </span><span class="si">{</span><span class="n">vertex_id</span><span class="si">}</span><span class="s2"> YIELD VERTICES AS nodes, EDGES AS relationships;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">r</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">loads</span><span class="p">(</span><span class="n">r</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">data</span> <span class="o">=</span> <span class="n">r</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;results&#39;</span><span class="p">,</span> <span class="p">[{}])[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;data&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">columns</span> <span class="o">=</span> <span class="n">r</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;results&#39;</span><span class="p">,</span> <span class="p">[{}])[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;columns&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># create node and nodedata</span>
</span></span><span class="line"><span class="cl"><span class="n">node_id_map</span> <span class="o">=</span> <span class="p">{}</span> <span class="c1"># key: vertex id in NebulaGraph, value: node id in dgl_graph</span>
</span></span><span class="line"><span class="cl"><span class="n">node_idx</span> <span class="o">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl"><span class="n">features</span> <span class="o">=</span> <span class="p">[[]</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">32</span><span class="p">)]</span> <span class="o">+</span> <span class="p">[[]]</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">data</span><span class="p">)):</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">index</span><span class="p">,</span> <span class="n">node</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s1">&#39;meta&#39;</span><span class="p">][</span><span class="mi">0</span><span class="p">]):</span>
</span></span><span class="line"><span class="cl">        <span class="n">nodeid</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s1">&#39;meta&#39;</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="n">index</span><span class="p">][</span><span class="s1">&#39;id&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">nodeid</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">node_id_map</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">node_id_map</span><span class="p">[</span><span class="n">nodeid</span><span class="p">]</span> <span class="o">=</span> <span class="n">node_idx</span>
</span></span><span class="line"><span class="cl">            <span class="n">node_idx</span> <span class="o">+=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">            <span class="k">for</span> <span class="n">f</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">32</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">                <span class="n">features</span><span class="p">[</span><span class="n">f</span><span class="p">]</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s1">&#39;row&#39;</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="n">index</span><span class="p">][</span><span class="sa">f</span><span class="s2">&#34;review.f</span><span class="si">{</span><span class="n">f</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">            <span class="n">features</span><span class="p">[</span><span class="mi">32</span><span class="p">]</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s1">&#39;row&#39;</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="n">index</span><span class="p">][</span><span class="s1">&#39;review.is_fraud&#39;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">rur_start</span><span class="p">,</span> <span class="n">rur_end</span><span class="p">,</span> <span class="n">rsr_start</span><span class="p">,</span> <span class="n">rsr_end</span><span class="p">,</span> <span class="n">rtr_start</span><span class="p">,</span> <span class="n">rtr_end</span> <span class="o">=</span> <span class="p">[],</span> <span class="p">[],</span> <span class="p">[],</span> <span class="p">[],</span> <span class="p">[],</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">data</span><span class="p">)):</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">edge</span> <span class="ow">in</span> <span class="n">data</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s1">&#39;meta&#39;</span><span class="p">][</span><span class="mi">1</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">        <span class="n">edge</span> <span class="o">=</span> <span class="n">edge</span><span class="p">[</span><span class="s1">&#39;id&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">edge</span><span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;shares_user_with&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">rur_start</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">node_id_map</span><span class="p">[</span><span class="n">edge</span><span class="p">[</span><span class="s1">&#39;src&#39;</span><span class="p">]])</span>
</span></span><span class="line"><span class="cl">            <span class="n">rur_end</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">node_id_map</span><span class="p">[</span><span class="n">edge</span><span class="p">[</span><span class="s1">&#39;dst&#39;</span><span class="p">]])</span>
</span></span><span class="line"><span class="cl">        <span class="k">elif</span> <span class="n">edge</span><span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;shares_restaurant_rating_with&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">rsr_start</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">node_id_map</span><span class="p">[</span><span class="n">edge</span><span class="p">[</span><span class="s1">&#39;src&#39;</span><span class="p">]])</span>
</span></span><span class="line"><span class="cl">            <span class="n">rsr_end</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">node_id_map</span><span class="p">[</span><span class="n">edge</span><span class="p">[</span><span class="s1">&#39;dst&#39;</span><span class="p">]])</span>
</span></span><span class="line"><span class="cl">        <span class="k">elif</span> <span class="n">edge</span><span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;shares_restaurant_in_one_month_with&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">rtr_start</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">node_id_map</span><span class="p">[</span><span class="n">edge</span><span class="p">[</span><span class="s1">&#39;src&#39;</span><span class="p">]])</span>
</span></span><span class="line"><span class="cl">            <span class="n">rtr_end</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">node_id_map</span><span class="p">[</span><span class="n">edge</span><span class="p">[</span><span class="s1">&#39;dst&#39;</span><span class="p">]])</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">data_dict</span> <span class="o">=</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="n">rur_start</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">data_dict</span><span class="p">[(</span><span class="s1">&#39;review&#39;</span><span class="p">,</span> <span class="s1">&#39;shares_user_with&#39;</span><span class="p">,</span> <span class="s1">&#39;review&#39;</span><span class="p">)]</span> <span class="o">=</span> <span class="n">tensor</span><span class="p">(</span><span class="n">rur_start</span><span class="p">),</span> <span class="n">tensor</span><span class="p">(</span><span class="n">rur_end</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="n">rsr_start</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">data_dict</span><span class="p">[(</span><span class="s1">&#39;review&#39;</span><span class="p">,</span> <span class="s1">&#39;shares_restaurant_rating_with&#39;</span><span class="p">,</span> <span class="s1">&#39;review&#39;</span><span class="p">)]</span> <span class="o">=</span> <span class="n">tensor</span><span class="p">(</span><span class="n">rsr_start</span><span class="p">),</span> <span class="n">tensor</span><span class="p">(</span><span class="n">rsr_end</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="n">rtr_start</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">data_dict</span><span class="p">[(</span><span class="s1">&#39;review&#39;</span><span class="p">,</span> <span class="s1">&#39;shares_restaurant_in_one_month_with&#39;</span><span class="p">,</span> <span class="s1">&#39;review&#39;</span><span class="p">)]</span> <span class="o">=</span> <span class="n">tensor</span><span class="p">(</span><span class="n">rtr_start</span><span class="p">),</span> <span class="n">tensor</span><span class="p">(</span><span class="n">rtr_end</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># construct a dgl_graph, ref: https://docs.dgl.ai/en/0.9.x/generated/dgl.heterograph.html</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">dgl_graph</span><span class="p">:</span> <span class="n">DGLHeteroGraph</span> <span class="o">=</span> <span class="n">heterograph</span><span class="p">(</span><span class="n">data_dict</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># load node features to dgl_graph</span>
</span></span><span class="line"><span class="cl"><span class="n">dgl_graph</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;label&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">tensor</span><span class="p">(</span><span class="n">features</span><span class="p">[</span><span class="mi">32</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># heterogeneous graph to heterogeneous graph, keep ndata and edata</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">dgl</span>
</span></span><span class="line"><span class="cl"><span class="n">hg</span> <span class="o">=</span> <span class="n">dgl</span><span class="o">.</span><span class="n">to_homogeneous</span><span class="p">(</span><span class="n">dgl_graph</span><span class="p">,</span> <span class="n">ndata</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;label&#39;</span><span class="p">])</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后，我们用上边提到的 Torch Label Spreading 实现，应用到我们的图上。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span><span class="lnt">133
</span><span class="lnt">134
</span><span class="lnt">135
</span><span class="lnt">136
</span><span class="lnt">137
</span><span class="lnt">138
</span><span class="lnt">139
</span><span class="lnt">140
</span><span class="lnt">141
</span><span class="lnt">142
</span><span class="lnt">143
</span><span class="lnt">144
</span><span class="lnt">145
</span><span class="lnt">146
</span><span class="lnt">147
</span><span class="lnt">148
</span><span class="lnt">149
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">abc</span> <span class="kn">import</span> <span class="n">abstractmethod</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">torch</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">BaseLabelPropagation</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;Base class for label propagation models.
</span></span></span><span class="line"><span class="cl"><span class="s2">    
</span></span></span><span class="line"><span class="cl"><span class="s2">    Parameters
</span></span></span><span class="line"><span class="cl"><span class="s2">    ----------
</span></span></span><span class="line"><span class="cl"><span class="s2">    adj_matrix: torch.FloatTensor
</span></span></span><span class="line"><span class="cl"><span class="s2">        Adjacency matrix of the graph.
</span></span></span><span class="line"><span class="cl"><span class="s2">    &#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">adj_matrix</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">norm_adj_matrix</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_normalize</span><span class="p">(</span><span class="n">adj_matrix</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">n_nodes</span> <span class="o">=</span> <span class="n">adj_matrix</span><span class="o">.</span><span class="n">size</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">one_hot_labels</span> <span class="o">=</span> <span class="kc">None</span> 
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">n_classes</span> <span class="o">=</span> <span class="kc">None</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">labeled_mask</span> <span class="o">=</span> <span class="kc">None</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">predictions</span> <span class="o">=</span> <span class="kc">None</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nd">@staticmethod</span>
</span></span><span class="line"><span class="cl">    <span class="nd">@abstractmethod</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">_normalize</span><span class="p">(</span><span class="n">adj_matrix</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="k">raise</span> <span class="ne">NotImplementedError</span><span class="p">(</span><span class="s2">&#34;_normalize must be implemented&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nd">@abstractmethod</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">_propagate</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="k">raise</span> <span class="ne">NotImplementedError</span><span class="p">(</span><span class="s2">&#34;_propagate must be implemented&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">_one_hot_encode</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">labels</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># Get the number of classes</span>
</span></span><span class="line"><span class="cl">        <span class="n">classes</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">unique</span><span class="p">(</span><span class="n">labels</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">classes</span> <span class="o">=</span> <span class="n">classes</span><span class="p">[</span><span class="n">classes</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">n_classes</span> <span class="o">=</span> <span class="n">classes</span><span class="o">.</span><span class="n">size</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1"># One-hot encode labeled data instances and zero rows corresponding to unlabeled instances</span>
</span></span><span class="line"><span class="cl">        <span class="n">unlabeled_mask</span> <span class="o">=</span> <span class="p">(</span><span class="n">labels</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">labels</span> <span class="o">=</span> <span class="n">labels</span><span class="o">.</span><span class="n">clone</span><span class="p">()</span>  <span class="c1"># defensive copying</span>
</span></span><span class="line"><span class="cl">        <span class="n">labels</span><span class="p">[</span><span class="n">unlabeled_mask</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">one_hot_labels</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">zeros</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">n_nodes</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">n_classes</span><span class="p">),</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="o">.</span><span class="n">float</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">one_hot_labels</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">one_hot_labels</span><span class="o">.</span><span class="n">scatter</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">labels</span><span class="o">.</span><span class="n">unsqueeze</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span> <span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">one_hot_labels</span><span class="p">[</span><span class="n">unlabeled_mask</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">labeled_mask</span> <span class="o">=</span> <span class="o">~</span><span class="n">unlabeled_mask</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">fit</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">labels</span><span class="p">,</span> <span class="n">max_iter</span><span class="p">,</span> <span class="n">tol</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;Fits a semi-supervised learning label propagation model.
</span></span></span><span class="line"><span class="cl"><span class="s2">        
</span></span></span><span class="line"><span class="cl"><span class="s2">        labels: torch.LongTensor
</span></span></span><span class="line"><span class="cl"><span class="s2">            Tensor of size n_nodes indicating the class number of each node.
</span></span></span><span class="line"><span class="cl"><span class="s2">            Unlabeled nodes are denoted with -1.
</span></span></span><span class="line"><span class="cl"><span class="s2">        max_iter: int
</span></span></span><span class="line"><span class="cl"><span class="s2">            Maximum number of iterations allowed.
</span></span></span><span class="line"><span class="cl"><span class="s2">        tol: float
</span></span></span><span class="line"><span class="cl"><span class="s2">            Convergence tolerance: threshold to consider the system at steady state.
</span></span></span><span class="line"><span class="cl"><span class="s2">        &#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_one_hot_encode</span><span class="p">(</span><span class="n">labels</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">predictions</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">one_hot_labels</span><span class="o">.</span><span class="n">clone</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">prev_predictions</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">zeros</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">n_nodes</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">n_classes</span><span class="p">),</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="o">.</span><span class="n">float</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">max_iter</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># Stop iterations if the system is considered at a steady state</span>
</span></span><span class="line"><span class="cl">            <span class="n">variation</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">abs</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">predictions</span> <span class="o">-</span> <span class="n">prev_predictions</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span><span class="o">.</span><span class="n">item</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">variation</span> <span class="o">&lt;</span> <span class="n">tol</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;The method stopped after </span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s2"> iterations, variation=</span><span class="si">{</span><span class="n">variation</span><span class="si">:</span><span class="s2">.4f</span><span class="si">}</span><span class="s2">.&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="k">break</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="n">prev_predictions</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">predictions</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">_propagate</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">predict</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">predictions</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">predict_classes</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">predictions</span><span class="o">.</span><span class="n">max</span><span class="p">(</span><span class="n">dim</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">indices</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">LabelPropagation</span><span class="p">(</span><span class="n">BaseLabelPropagation</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">adj_matrix</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="nb">super</span><span class="p">()</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="n">adj_matrix</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nd">@staticmethod</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">_normalize</span><span class="p">(</span><span class="n">adj_matrix</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;Computes D^-1 * W&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">degs</span> <span class="o">=</span> <span class="n">adj_matrix</span><span class="o">.</span><span class="n">sum</span><span class="p">(</span><span class="n">dim</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">degs</span><span class="p">[</span><span class="n">degs</span> <span class="o">==</span> <span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span>  <span class="c1"># avoid division by 0 error</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">adj_matrix</span> <span class="o">/</span> <span class="n">degs</span><span class="p">[:,</span> <span class="kc">None</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">_propagate</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">predictions</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">matmul</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">norm_adj_matrix</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">predictions</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1"># Put back already known labels</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">predictions</span><span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">labeled_mask</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">one_hot_labels</span><span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">labeled_mask</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">fit</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">labels</span><span class="p">,</span> <span class="n">max_iter</span><span class="o">=</span><span class="mi">1000</span><span class="p">,</span> <span class="n">tol</span><span class="o">=</span><span class="mf">1e-3</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="nb">super</span><span class="p">()</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">labels</span><span class="p">,</span> <span class="n">max_iter</span><span class="p">,</span> <span class="n">tol</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">LabelSpreading</span><span class="p">(</span><span class="n">BaseLabelPropagation</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">adj_matrix</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="nb">super</span><span class="p">()</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="n">adj_matrix</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">alpha</span> <span class="o">=</span> <span class="kc">None</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nd">@staticmethod</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">_normalize</span><span class="p">(</span><span class="n">adj_matrix</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;Computes D^-1/2 * W * D^-1/2&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">degs</span> <span class="o">=</span> <span class="n">adj_matrix</span><span class="o">.</span><span class="n">sum</span><span class="p">(</span><span class="n">dim</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">norm</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">pow</span><span class="p">(</span><span class="n">degs</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.5</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">norm</span><span class="p">[</span><span class="n">torch</span><span class="o">.</span><span class="n">isinf</span><span class="p">(</span><span class="n">norm</span><span class="p">)]</span> <span class="o">=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">adj_matrix</span> <span class="o">*</span> <span class="n">norm</span><span class="p">[:,</span> <span class="kc">None</span><span class="p">]</span> <span class="o">*</span> <span class="n">norm</span><span class="p">[</span><span class="kc">None</span><span class="p">,</span> <span class="p">:]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">_propagate</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">predictions</span> <span class="o">=</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">alpha</span> <span class="o">*</span> <span class="n">torch</span><span class="o">.</span><span class="n">matmul</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">norm_adj_matrix</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">predictions</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="o">+</span> <span class="p">(</span><span class="mi">1</span> <span class="o">-</span> <span class="bp">self</span><span class="o">.</span><span class="n">alpha</span><span class="p">)</span> <span class="o">*</span> <span class="bp">self</span><span class="o">.</span><span class="n">one_hot_labels</span>
</span></span><span class="line"><span class="cl">        <span class="p">)</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">fit</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">labels</span><span class="p">,</span> <span class="n">max_iter</span><span class="o">=</span><span class="mi">1000</span><span class="p">,</span> <span class="n">tol</span><span class="o">=</span><span class="mf">1e-3</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.5</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;
</span></span></span><span class="line"><span class="cl"><span class="s2">        Parameters
</span></span></span><span class="line"><span class="cl"><span class="s2">        ----------
</span></span></span><span class="line"><span class="cl"><span class="s2">        alpha: float
</span></span></span><span class="line"><span class="cl"><span class="s2">            Clamping factor.
</span></span></span><span class="line"><span class="cl"><span class="s2">        &#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">alpha</span> <span class="o">=</span> <span class="n">alpha</span>
</span></span><span class="line"><span class="cl">        <span class="nb">super</span><span class="p">()</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">labels</span><span class="p">,</span> <span class="n">max_iter</span><span class="p">,</span> <span class="n">tol</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">networkx</span> <span class="k">as</span> <span class="nn">nx</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">nx_hg</span> <span class="o">=</span> <span class="n">hg</span><span class="o">.</span><span class="n">to_networkx</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">adj_matrix</span> <span class="o">=</span> <span class="n">nx</span><span class="o">.</span><span class="n">adjacency_matrix</span><span class="p">(</span><span class="n">nx_hg</span><span class="p">)</span><span class="o">.</span><span class="n">toarray</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">labels</span> <span class="o">=</span> <span class="n">hg</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;label&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Create input tensors</span>
</span></span><span class="line"><span class="cl"><span class="n">adj_matrix_t</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">FloatTensor</span><span class="p">(</span><span class="n">adj_matrix</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">labels_t</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">LongTensor</span><span class="p">(</span><span class="n">labels</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Learn with Label Propagation</span>
</span></span><span class="line"><span class="cl"><span class="n">label_propagation</span> <span class="o">=</span> <span class="n">LabelPropagation</span><span class="p">(</span><span class="n">adj_matrix_t</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;Label Propagation: &#34;</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">label_propagation</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">labels_t</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">label_propagation_output_labels</span> <span class="o">=</span> <span class="n">label_propagation</span><span class="o">.</span><span class="n">predict_classes</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Learn with Label Spreading</span>
</span></span><span class="line"><span class="cl"><span class="n">label_spreading</span> <span class="o">=</span> <span class="n">LabelSpreading</span><span class="p">(</span><span class="n">adj_matrix_t</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;Label Spreading: &#34;</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">label_spreading</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">labels_t</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.8</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">label_spreading_output_labels</span> <span class="o">=</span> <span class="n">label_spreading</span><span class="o">.</span><span class="n">predict_classes</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>现在咱们看看染色的传播效果：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">color_map</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">:</span> <span class="s2">&#34;blue&#34;</span><span class="p">,</span> <span class="mi">1</span><span class="p">:</span> <span class="s2">&#34;green&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="n">input_labels_colors</span> <span class="o">=</span> <span class="p">[</span><span class="n">color_map</span><span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">l</span><span class="p">)]</span> <span class="k">for</span> <span class="n">l</span> <span class="ow">in</span> <span class="n">labels</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">lprop_labels_colors</span> <span class="o">=</span> <span class="p">[</span><span class="n">color_map</span><span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">l</span><span class="p">)]</span> <span class="k">for</span> <span class="n">l</span> <span class="ow">in</span> <span class="n">label_propagation_output_labels</span><span class="o">.</span><span class="n">numpy</span><span class="p">()]</span>
</span></span><span class="line"><span class="cl"><span class="n">lspread_labels_colors</span> <span class="o">=</span> <span class="p">[</span><span class="n">color_map</span><span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">l</span><span class="p">)]</span> <span class="k">for</span> <span class="n">l</span> <span class="ow">in</span> <span class="n">label_spreading_output_labels</span><span class="o">.</span><span class="n">numpy</span><span class="p">()]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">14</span><span class="p">,</span> <span class="mi">6</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">ax1</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">ax2</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">ax3</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">ax1</span><span class="o">.</span><span class="n">title</span><span class="o">.</span><span class="n">set_text</span><span class="p">(</span><span class="s2">&#34;Raw data (2 classes)&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">ax2</span><span class="o">.</span><span class="n">title</span><span class="o">.</span><span class="n">set_text</span><span class="p">(</span><span class="s2">&#34;Label Propagation&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">ax3</span><span class="o">.</span><span class="n">title</span><span class="o">.</span><span class="n">set_text</span><span class="p">(</span><span class="s2">&#34;Label Spreading&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">pos</span> <span class="o">=</span> <span class="n">nx</span><span class="o">.</span><span class="n">spring_layout</span><span class="p">(</span><span class="n">nx_hg</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">nx</span><span class="o">.</span><span class="n">draw</span><span class="p">(</span><span class="n">nx_hg</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax1</span><span class="p">,</span> <span class="n">pos</span><span class="o">=</span><span class="n">pos</span><span class="p">,</span> <span class="n">node_color</span><span class="o">=</span><span class="n">input_labels_colors</span><span class="p">,</span> <span class="n">node_size</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">nx</span><span class="o">.</span><span class="n">draw</span><span class="p">(</span><span class="n">nx_hg</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax2</span><span class="p">,</span> <span class="n">pos</span><span class="o">=</span><span class="n">pos</span><span class="p">,</span> <span class="n">node_color</span><span class="o">=</span><span class="n">lprop_labels_colors</span><span class="p">,</span> <span class="n">node_size</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">nx</span><span class="o">.</span><span class="n">draw</span><span class="p">(</span><span class="n">nx_hg</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax3</span><span class="p">,</span> <span class="n">pos</span><span class="o">=</span><span class="n">pos</span><span class="p">,</span> <span class="n">node_color</span><span class="o">=</span><span class="n">lspread_labels_colors</span><span class="p">,</span> <span class="n">node_size</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Legend</span>
</span></span><span class="line"><span class="cl"><span class="n">ax4</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">ax4</span><span class="o">.</span><span class="n">axis</span><span class="p">(</span><span class="s2">&#34;off&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">legend_colors</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;orange&#34;</span><span class="p">,</span> <span class="s2">&#34;blue&#34;</span><span class="p">,</span> <span class="s2">&#34;green&#34;</span><span class="p">,</span> <span class="s2">&#34;red&#34;</span><span class="p">,</span> <span class="s2">&#34;cyan&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">legend_labels</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;unlabeled&#34;</span><span class="p">,</span> <span class="s2">&#34;class 0&#34;</span><span class="p">,</span> <span class="s2">&#34;class 1&#34;</span><span class="p">,</span> <span class="s2">&#34;class 2&#34;</span><span class="p">,</span> <span class="s2">&#34;class 3&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">dummy_legend</span> <span class="o">=</span> <span class="p">[</span><span class="n">ax4</span><span class="o">.</span><span class="n">plot</span><span class="p">([],</span> <span class="p">[],</span> <span class="n">ls</span><span class="o">=</span><span class="s1">&#39;-&#39;</span><span class="p">,</span> <span class="n">c</span><span class="o">=</span><span class="n">c</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">legend_colors</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="n">dummy_legend</span><span class="p">,</span> <span class="n">legend_labels</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>可以看到最后画出来的结果：</p>
<p><a class="lightgallery" href="./lpa_spread_notation_matplot.webp" title="./lpa_spread_notation_matplot.webp" data-thumbnail="./lpa_spread_notation_matplot.webp">
        
    </a></p>
<p>可以看到有一些蓝色标签被 Spread 开了，实际上我的这个例子的效果并不理想（因为这个例子李，绿色的才是重要的标签），不过我给的子图实在是太小了，也本不应该奢求有好的结果，只是为了个大家演示一下这个方法。</p>
<h3 id="带有图特征的机器学习" class="headerLink">
    <a href="#%e5%b8%a6%e6%9c%89%e5%9b%be%e7%89%b9%e5%be%81%e7%9a%84%e6%9c%ba%e5%99%a8%e5%ad%a6%e4%b9%a0" class="header-mark"></a>1.4 带有图特征的机器学习</h3><p>在风控领域开始利用图的思想和能力之前，已经有很多利用机器学习的分类算法基于历史数据预测高风险行为的方法了，这些方法把记录中领域专家认为有关的信息（例如：年龄、学历、收入）作为特征，历史标注信息作为标签去训练风险预测模型。</p>
<p>那么读到的这里，我们是否会想到在这些方法的基础之上，如果把基于图结构的属性也考虑进来，作为特征去训练的模型可能更有效呢？答案也是肯定的，已经有很多论文和工程实践揭示这样的模型比未考虑图特征的算法更加有效：这些被尝试有效的图结构特征可能是实体的 PageRank 值、Degree 值或者是某一个社区发现算法得出的社区 id。</p>
<p>在生产上，我们可以定期从图谱中获得实时的全图信息，在图计算平台中分析运算获得所需特征，经过预定的数据管道，导入机器学习模型中周期获得新的风险提示，并将部分结果写回图谱方便其他系统和专家抽取、参考。</p>
<h4 id="带有图特征的机器学习欺诈检测示例" class="headerLink">
    <a href="#%e5%b8%a6%e6%9c%89%e5%9b%be%e7%89%b9%e5%be%81%e7%9a%84%e6%9c%ba%e5%99%a8%e5%ad%a6%e4%b9%a0%e6%ac%ba%e8%af%88%e6%a3%80%e6%b5%8b%e7%a4%ba%e4%be%8b" class="header-mark"></a>1.4.1 带有图特征的机器学习欺诈检测示例</h4><p>这里，机器学习的方法我就不演示了，就是常见的分类方法，在此之上，我们可以在数据中通过图算法获得一些新的属性，这些属性再处理一下作为新的特征。我只演示一个社区发现的方法，我们可以对全图跑一个 Louvain，得出不同节点的社区归属，然后把社区的值当做一个分类处理成为数值的特征。</p>
<p>这个例子里我们还用 <a href="https://github.com/wey-gu/fraud-detection-datagen" target="_blank" rel="noopener noreffer">https://github.com/wey-gu/fraud-detection-datagen</a> 这个数据，在此基础上，这个例子我用到了 <a href="https://github.com/vesoft-inc/nebula-algorithm/" target="_blank" rel="noopener noreffer">Nebula-Algorithm</a> 这个项目，它是一个 Spark 应用，可以在 NebulaGraph 图库上运行很多常用的图算法。</p>
<p>首先，我们部署 Spark 和 Nebula Algorithm，还是利用 Nebula-UP，一键部署：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">curl -fsSL nebula-up.siwei.io/all-in-one.sh <span class="p">|</span> bash -s -- v3 spark
</span></span></code></pre></td></tr></table>
</div>
</div><p>集群起来之后，因为需要的配置文件我已经放在了 Nebula-UP 内部，我们只需要一行就可以运行算法啦！</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> ~/.nebula-up/nebula-up/spark <span class="o">&amp;&amp;</span> ls -l
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">docker <span class="nb">exec</span> -it sparkmaster /spark/bin/spark-submit <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --master <span class="s2">&#34;local&#34;</span> --conf spark.rpc.askTimeout<span class="o">=</span>6000s <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --class com.vesoft.nebula.algorithm.Main <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --driver-memory 4g /root/download/nebula-algo.jar <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -p /root/louvain.conf
</span></span></code></pre></td></tr></table>
</div>
</div><p>而最终的结果就在 sparkmaster 容器内的 <code>/output</code> 里：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># docker exec -it sparkmaster bash</span>
</span></span><span class="line"><span class="cl">ls -l /output
</span></span></code></pre></td></tr></table>
</div>
</div><p>之后，我们可以对这个 Louvain 的图特征做一些处理，并开始传统的模型训练了。</p>
<h3 id="图神经网络的方法" class="headerLink">
    <a href="#%e5%9b%be%e7%a5%9e%e7%bb%8f%e7%bd%91%e7%bb%9c%e7%9a%84%e6%96%b9%e6%b3%95" class="header-mark"></a>1.5 图神经网络的方法</h3><p>然而，这些图特征的方法的问题在于：</p>
<ol>
<li>图特征并不能把关联关系，数据的局部性充分反映到我们的模型、方法里；</li>
<li>图的特征工程是很昂贵、繁琐的。</li>
</ol>
<p>在最近几年的成果中，基于 GNN 的方法通过将图结构与属性信息进行嵌入表示，使得我们能在不进行图特征抽取、特征工程、专家与工程方法的数据标注的情况下，得到相比于基于传统图特征的机器学习更好的效果。有意思的是，现在正是这些方法快速被发现、演进的时期，基于图的深度学习是之前几年最热门的机器学习研究方向之一。</p>
<p>同时，图深度学习的一些方法可以做到 Inductive Learning——模型可以在新的点、边上进行推理，这样，配合图数据库上线上的子图查询能力，在线实时的风险预测也变得很简单可行了。</p>
<h4 id="基于图表示的图神经网络欺诈检测系统示例" class="headerLink">
    <a href="#%e5%9f%ba%e4%ba%8e%e5%9b%be%e8%a1%a8%e7%a4%ba%e7%9a%84%e5%9b%be%e7%a5%9e%e7%bb%8f%e7%bd%91%e7%bb%9c%e6%ac%ba%e8%af%88%e6%a3%80%e6%b5%8b%e7%b3%bb%e7%bb%9f%e7%a4%ba%e4%be%8b" class="header-mark"></a>1.5.1 基于图表示的图神经网络欺诈检测系统示例</h4><p>利用 GNN 的方法中，图数据库并不是必须的，数据的存储可以在其他几种常见的介质之中，但是图库能够最大化助益模型训练、模型更新、线上结果的更新。当我们把图数据库作为数据的单一数据来源（single source of truth）的时候，所有的基于线上、离线、图谱的方法可以很容易被集成起来，从而组合所有方法的优势与结果，做出更有效的欺诈检测复合系统。</p>
<p>在这个示例中我们一样分为：<strong>数据处理</strong>、<strong>模型训练</strong>、<strong>构建检测系统</strong>这几部分。</p>
<blockquote>
<p>注，这里，我们使用的的工具为 Deep Graph library（DGL），NebulaGraph 图数据库和他们之间的桥梁，Nebula-DGL。</p>
<ul>
<li>DGL: <a href="https://www.dgl.ai/" target="_blank" rel="noopener noreffer">https://www.dgl.ai/</a></li>
<li>Nebula-DGL: <a href="https://github.com/wey-gu/nebula-dgl" target="_blank" rel="noopener noreffer">https://github.com/wey-gu/nebula-dgl</a> 我也是这个库的作者 😁</li>
</ul>
</blockquote>
<h5 id="数据集" class="headerLink">
    <a href="#%e6%95%b0%e6%8d%ae%e9%9b%86" class="header-mark"></a>1.5.1.1 数据集</h5><p>本例中，我们使用的数据集是 Yelp-Fraud，他直接来自于论文 <a href="https://paperswithcode.com/paper/enhancing-graph-neural-network-based-fraud" target="_blank" rel="noopener noreffer">Enhancing Graph Neural Network-based Fraud Detectors against Camouflaged Fraudsters</a>。</p>
<p>这个图中有一种点，三种关系：</p>
<ul>
<li>顶点：来自 Yelp 中的餐厅、酒店的评价，有两类属性：
<ul>
<li>每一个评价中有被标注了的是否是虚假、欺诈评价的标签</li>
<li>32 个已经被处理过的数字型属性</li>
</ul>
</li>
<li>边：三类评价之间的关联关系
<ul>
<li>R-U-R：两个评价由同一个用户发出 shares_user_with</li>
<li>R-S-R：两个评价是同餐厅同评分（评分可以是1到5） shares_restaurant_rating_with</li>
<li>R-T-R：两个评价是同餐厅同提交月份 shares_restaurant_in_one_month_with</li>
</ul>
</li>
</ul>
<p>在开始之前，我们假设这个图已经在我们的 NebulaGraph 里边了。</p>
<blockquote>
<p>注，我已经帮大家提前做好了将这张图导入 NebulaGraph 的工作，长话短说就是：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 部署 NebulaGraph</span>
</span></span><span class="line"><span class="cl">curl -fsSL nebula-up.siwei.io/install.sh <span class="p">|</span> bash
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 拉取这个数据的 Repo</span>
</span></span><span class="line"><span class="cl">git clone https://github.com/wey-gu/nebulagraph-yelp-frauddetection <span class="o">&amp;&amp;</span> <span class="nb">cd</span> nebulagraph-yelp-frauddetection
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 安装依赖，执行数据下载生成</span>
</span></span><span class="line"><span class="cl">python3 -m pip install -r requirements.txt
</span></span><span class="line"><span class="cl">python3 data_download.py
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 导入到 NebulaGraph</span>
</span></span><span class="line"><span class="cl">docker run --rm -ti <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span> --network<span class="o">=</span>nebula-net <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span> -v <span class="si">${</span><span class="nv">PWD</span><span class="si">}</span>/yelp_nebulagraph_importer.yaml:/root/importer.yaml <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span> -v <span class="si">${</span><span class="nv">PWD</span><span class="si">}</span>/data:/root <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span> vesoft/nebula-importer:v3.1.0 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span> --config /root/importer.yaml
</span></span></code></pre></td></tr></table>
</div>
</div><p>详情参考：https://github.com/wey-gu/nebulagraph-yelp-frauddetection</p>
</blockquote>
<h5 id="数据处理" class="headerLink">
    <a href="#%e6%95%b0%e6%8d%ae%e5%a4%84%e7%90%86" class="header-mark"></a>1.5.1.2 数据处理</h5><p>这部分的任务是将图谱中和风险相关子图的拓扑结构表示和其中有关的特征（属性）进行工程处理，序列化成为 DGL 的图对象。</p>
<p>DGL 本身支持从点、边列表（edgelist）形式 CSV 文件，或者从 NetworkX 和 SciPy 的序列化稀疏的邻接矩阵（adjacency matrix）的数据来构造它的图对象，我们可以把原始的图数据或者图库中的数据全量导出为这些形式，不过在真实的例子中图库中的数据是实时变化的，能够直接在 NebulaGraph 中的子图上做 GNN 训练一般来说是更理想。得益于 Nebula-DGL 这个库，做这件事儿是很自然的。</p>
<blockquote>
<p>注，DGL 外部数据员导入文档：https://docs.dgl.ai/guide/graph-external.html</p>
</blockquote>
<p>现在我们开始这个数据的导入，在这之前，我先介绍一下 Nebula-DGL。</p>
<p>Nebula-DGL 可以根据给定的映射和转换规则（YAML 格式），将 NebulaGraph 中的顶点、边，和它们的属性按照规则处理成为点、边、和其中的标注（Label）与特征（Feature），从而构造为 DGL 的图对象。这其中，值得一提的是属性到特征的转换。我们知道，特征可能是某一个属性的值、一个或者多个属性的值做一定的数学变换、亦或是字符型的属性按照枚举规则输出为数字。相应的，Nebula-DGL 在规则中，我们都可以针对这几种情况利用 <code>filter</code> 进行表达：</p>
<ul>
<li>特征直接选取属性的值：</li>
</ul>
<p>这个例子里，NebulaGraph 图中 <code>follow</code> 这个边将被抽取，边上的属性 <code>degree</code> 的值将直接被作为名为 <code>degree</code> 的特征。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">edge_types</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">follow</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">start_vertex_tag</span><span class="p">:</span><span class="w"> </span><span class="l">player</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">end_vertex_tag</span><span class="p">:</span><span class="w"> </span><span class="l">player</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">features</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">degree</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">degree</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">int</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">nullable</span><span class="p">:</span><span class="w"> </span><span class="kc">False</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">filter</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">value</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>特征从属性中经过数学变换</li>
</ul>
<p>这个例子中，我们把 <code>serve</code> 边之中的两个属性进行 <code>(end_year - start_year) / 30</code> 的处理，变为 <code>service_time</code> 这样的一个特征。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">edge_types</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">serve</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">start_vertex_tag</span><span class="p">:</span><span class="w"> </span><span class="l">player</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">end_vertex_tag</span><span class="p">:</span><span class="w"> </span><span class="l">team</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">features</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">service_time</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">start_year</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">int</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">nullable</span><span class="p">:</span><span class="w"> </span><span class="kc">False</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">end_year</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">int</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">nullable</span><span class="p">:</span><span class="w"> </span><span class="kc">False</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c"># The variable was mapped by order of properties</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">filter</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">function</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">function</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;lambda start_year, end_year: (end_year - start_year) / 30&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>枚举属性值为数字特征</li>
</ul>
<p>这个例子中，我们把 <code>team</code> 顶点中的 <code>name</code> 属性进行枚举，根据</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">vertex_tags</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">team</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">features</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">coast</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">name</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">str</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">nullable</span><span class="p">:</span><span class="w"> </span><span class="kc">False</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">filter</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="c"># 0 stand for the east coast, 1 stand for the west coast</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">enumeration</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">enumeration</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">Celtics</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">Nets</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">Nuggets</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">Timberwolves</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">Thunder</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># ... not showing all teams here</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>可以看到这个转换规则非常简单直接，大家也可以参考 Nebula-DGL 的完整例子了解全部细节 <a href="https://github.com/wey-gu/nebula-dgl/tree/main/example" target="_blank" rel="noopener noreffer">https://github.com/wey-gu/nebula-dgl/tree/main/example</a>。而有上边数据处理规则的了解之后，我们可以开始处理这个 Yelp 图数据了。</p>
<p>首先，定义如下规则，这里，我们把顶点 review 和三种边都对应过来了，同时，review 上的属性也按照原本的值对应了过来：</p>
<p><code>nebulagraph_yelp_dgl_mapper.yaml</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># If vertex id is string-typed, remap_vertex_id must be true.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">remap_vertex_id</span><span class="p">:</span><span class="w"> </span><span class="kc">True</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">space</span><span class="p">:</span><span class="w"> </span><span class="l">yelp</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># str or int</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">vertex_id_type</span><span class="p">:</span><span class="w"> </span><span class="l">int</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">vertex_tags</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">review</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">label</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">is_fraud</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">is_fraud</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">int</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">nullable</span><span class="p">:</span><span class="w"> </span><span class="kc">False</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">filter</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">value</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">features</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">f0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">f0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">float</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">nullable</span><span class="p">:</span><span class="w"> </span><span class="kc">False</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">filter</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">value</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">f1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">f1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">float</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">nullable</span><span class="p">:</span><span class="w"> </span><span class="kc">False</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">filter</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">value</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># ...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">f31</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">f31</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">float</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">nullable</span><span class="p">:</span><span class="w"> </span><span class="kc">False</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">filter</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">value</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">edge_types</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">shares_user_with</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">start_vertex_tag</span><span class="p">:</span><span class="w"> </span><span class="l">review</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">end_vertex_tag</span><span class="p">:</span><span class="w"> </span><span class="l">review</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">shares_restaurant_rating_with</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">start_vertex_tag</span><span class="p">:</span><span class="w"> </span><span class="l">review</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">end_vertex_tag</span><span class="p">:</span><span class="w"> </span><span class="l">review</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">shares_restaurant_in_one_month_with</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">start_vertex_tag</span><span class="p">:</span><span class="w"> </span><span class="l">review</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">end_vertex_tag</span><span class="p">:</span><span class="w"> </span><span class="l">review</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>然后，我们在安装好 Nebula-DGL 之后只需要这几行代码就可以将 NebulaGraph 中的这张图构造为 DGL 的 <code>DGLHeteroGraph</code> 图对象：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">nebula_dgl</span> <span class="kn">import</span> <span class="n">NebulaLoader</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">nebula_config</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;graph_hosts&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                <span class="p">(</span><span class="s1">&#39;graphd&#39;</span><span class="p">,</span> <span class="mi">9669</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">                <span class="p">(</span><span class="s1">&#39;graphd1&#39;</span><span class="p">,</span> <span class="mi">9669</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">                <span class="p">(</span><span class="s1">&#39;graphd2&#39;</span><span class="p">,</span> <span class="mi">9669</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;nebula_user&#34;</span><span class="p">:</span> <span class="s2">&#34;root&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;nebula_password&#34;</span><span class="p">:</span> <span class="s2">&#34;nebula&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># load feature_mapper from yaml file</span>
</span></span><span class="line"><span class="cl"><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;nebulagraph_yelp_dgl_mapper.yaml&#39;</span><span class="p">,</span> <span class="s1">&#39;r&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">feature_mapper</span> <span class="o">=</span> <span class="n">yaml</span><span class="o">.</span><span class="n">safe_load</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">nebula_loader</span> <span class="o">=</span> <span class="n">NebulaLoader</span><span class="p">(</span><span class="n">nebula_config</span><span class="p">,</span> <span class="n">feature_mapper</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">g</span> <span class="o">=</span> <span class="n">nebula_loader</span><span class="o">.</span><span class="n">load</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">g</span> <span class="o">=</span> <span class="n">g</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="s1">&#39;cpu&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">device</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">device</span><span class="p">(</span><span class="s1">&#39;cpu&#39;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="模型训练" class="headerLink">
    <a href="#%e6%a8%a1%e5%9e%8b%e8%ae%ad%e7%bb%83" class="header-mark"></a>1.5.1.3 模型训练</h5><p>这里，我用 <a href="https://cs.stanford.edu/people/jure/pubs/graphsage-nips17.pdf" target="_blank" rel="noopener noreffer">GraphSAGE</a> 算法的点分类（Node Classification）方法来举例，GraphSAGE 的原始版本是一个归纳学习（Inductive Learning）的算法，这里，归纳学习区别于它的反面： Transductive Learning ，可以把新的数据用在完全旧的图之上习得的模型，这样训练出来的模型可以进行线上增量数据的欺诈检测（而不是需要重新加载为全图训练才可以）。</p>
<p><a class="lightgallery" href="https://user-images.githubusercontent.com/1651790/182301784-21850dac-0d47-4dd5-b66f-a28b87fe9d4d.svg" title="GraphSAGE_FraudDetection" data-thumbnail="https://user-images.githubusercontent.com/1651790/182301784-21850dac-0d47-4dd5-b66f-a28b87fe9d4d.svg">
        
    </a></p>
<p>模型训练系统（左边）：</p>
<ul>
<li>输入：带有欺诈标注的历史交易图谱</li>
<li>输出：一个 GraphSAGE 的 DGL 模型</li>
</ul>
<p>线上推理系统（右边）：</p>
<ul>
<li>
<p>模型：基于带有欺诈标注的历史交易图谱基于 GraphSAGE 训练</p>
</li>
<li>
<p>输入：一笔新的交易</p>
</li>
<li>
<p>输出：这笔交易是否涉嫌欺诈</p>
</li>
</ul>
<p><strong>分割数据集</strong></p>
<p>机器学习训练的过程需要在已经有的数据、信息中分割出用来训练、验证和测试的子集，他们可以是不相交的整体数据的真子集也可以彼此有重叠，在实际的情况中，有时候我们对数据的标注常常是不充分的，所以按照标注的比例去分割数据可能更有意义一些，下边的例子是我按照点上是否标注欺诈为标准去分割数据集。</p>
<p>这里边有两个地方值得注意：</p>
<ol>
<li><code>train_test_split</code> 中的 <code>stratify=g.ndata['is_fraud']</code> 代表保持 <code>is_fraud</code> 的值的分布去分割，符合我们前边提到的思想。</li>
<li>我们分割的是 <code>idx</code> 索引，这样，可以最终获得三个集合的索引，供训练、验证和测试时候使用。同时我们还把对应集合 mask 放到图对象 <code>g</code> 里边去了。</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># Split the graph into train, validation, and test sets</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">train_test_split</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># features are g.ndata[&#39;f0&#39;], g.ndata[&#39;f1&#39;], g.ndata[&#39;f2&#39;], ... g.ndata[&#39;f31&#39;]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># label is in g.ndata[&#39;is_fraud&#39;]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># concatenate all features</span>
</span></span><span class="line"><span class="cl"><span class="n">features</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">32</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">features</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">g</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;f&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)])</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">g</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;feat&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">stack</span><span class="p">(</span><span class="n">features</span><span class="p">,</span> <span class="n">dim</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">g</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;label&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">g</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;is_fraud&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># numpy array as an index of range n</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">idx</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">tensor</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="n">g</span><span class="o">.</span><span class="n">number_of_nodes</span><span class="p">()),</span> <span class="n">device</span><span class="o">=</span><span class="n">device</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="o">.</span><span class="n">int64</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># split based on value distribution of label: the property &#34;is_fraud&#34;, which is a binary variable.</span>
</span></span><span class="line"><span class="cl"><span class="n">X_train_and_val_idx</span><span class="p">,</span> <span class="n">X_test_idx</span><span class="p">,</span> <span class="n">y_train_and_val</span><span class="p">,</span> <span class="n">y_test</span> <span class="o">=</span> <span class="n">train_test_split</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">idx</span><span class="p">,</span> <span class="n">g</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;is_fraud&#39;</span><span class="p">],</span> <span class="n">test_size</span><span class="o">=</span><span class="mf">0.2</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">,</span> <span class="n">stratify</span><span class="o">=</span><span class="n">g</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;is_fraud&#39;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># split train and val</span>
</span></span><span class="line"><span class="cl"><span class="n">X_train_idx</span><span class="p">,</span> <span class="n">X_val_idx</span><span class="p">,</span> <span class="n">y_train</span><span class="p">,</span> <span class="n">y_val</span> <span class="o">=</span> <span class="n">train_test_split</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">X_train_and_val_idx</span><span class="p">,</span> <span class="n">y_train_and_val</span><span class="p">,</span> <span class="n">test_size</span><span class="o">=</span><span class="mf">0.2</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">,</span> <span class="n">stratify</span><span class="o">=</span><span class="n">y_train_and_val</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># list of index to mask</span>
</span></span><span class="line"><span class="cl"><span class="n">train_mask</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">zeros</span><span class="p">(</span><span class="n">g</span><span class="o">.</span><span class="n">number_of_nodes</span><span class="p">(),</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="o">.</span><span class="n">bool</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">train_mask</span><span class="p">[</span><span class="n">X_train_idx</span><span class="p">]</span> <span class="o">=</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">val_mask</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">zeros</span><span class="p">(</span><span class="n">g</span><span class="o">.</span><span class="n">number_of_nodes</span><span class="p">(),</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="o">.</span><span class="n">bool</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">val_mask</span><span class="p">[</span><span class="n">X_val_idx</span><span class="p">]</span> <span class="o">=</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">test_mask</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">zeros</span><span class="p">(</span><span class="n">g</span><span class="o">.</span><span class="n">number_of_nodes</span><span class="p">(),</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="o">.</span><span class="n">bool</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">test_mask</span><span class="p">[</span><span class="n">X_test_idx</span><span class="p">]</span> <span class="o">=</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">g</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;train_mask&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">train_mask</span>
</span></span><span class="line"><span class="cl"><span class="n">g</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;val_mask&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">val_mask</span>
</span></span><span class="line"><span class="cl"><span class="n">g</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;test_mask&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">test_mask</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>异构图转换为同构图</strong></p>
<p>GraphSAGE 是针对同构图，且边无 feature 的算法，而我们当下的 Yelp 图谱是异构的：一类点、三类边。那么，如何才能用 GraphSAGE 去建模 Yelp 图谱呢？</p>
<p>我们除了选择用针对异构图的 Inductive Learning 方法之外，还可想办法把同构图转换成异构图。为了在转换中不丢失重要的边类型信息，我们可以把边类型变成数值。</p>
<p>这里我给了一维的 edge feature，当然（3-1）二维也是可以的。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># shares_restaurant_in_one_month_with: 1, b&#34;001&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># shares_restaurant_rating_with: 2, b&#34;010&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># shares_user_with: 4, b&#34;100&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>注：其实如果想用 0, 1, 2 这样的分布，转换到同构图之后的 <code>hg.edata['_TYPE']</code> 也是可以直接拿来用的，详见 <a href="https://docs.dgl.ai/en/0.9.x/generated/dgl.to_homogeneous.html" target="_blank" rel="noopener noreffer">https://docs.dgl.ai/en/0.9.x/generated/dgl.to_homogeneous.html</a> 中的例子。</p>
</blockquote>
<p>代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># three types of edges</span>
</span></span><span class="line"><span class="cl"><span class="n">In</span> <span class="p">[</span><span class="mi">1</span><span class="p">]:</span> <span class="n">g</span><span class="o">.</span><span class="n">etypes</span>
</span></span><span class="line"><span class="cl"><span class="n">Out</span><span class="p">[</span><span class="mi">1</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="s1">&#39;shares_restaurant_in_one_month_with&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"> <span class="s1">&#39;shares_restaurant_rating_with&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"> <span class="s1">&#39;shares_user_with&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">In</span> <span class="p">[</span><span class="mi">2</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl"><span class="n">g</span><span class="o">.</span><span class="n">edges</span><span class="p">[</span><span class="s1">&#39;shares_restaurant_in_one_month_with&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">data</span><span class="p">[</span><span class="s1">&#39;he&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">ones</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">g</span><span class="o">.</span><span class="n">number_of_edges</span><span class="p">(</span><span class="s1">&#39;shares_restaurant_in_one_month_with&#39;</span><span class="p">),</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="o">.</span><span class="n">int64</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">g</span><span class="o">.</span><span class="n">edges</span><span class="p">[</span><span class="s1">&#39;shares_restaurant_rating_with&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">data</span><span class="p">[</span><span class="s1">&#39;he&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">full</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="p">(</span><span class="n">g</span><span class="o">.</span><span class="n">number_of_edges</span><span class="p">(</span><span class="s1">&#39;shares_restaurant_rating_with&#39;</span><span class="p">),),</span> <span class="mi">2</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="o">.</span><span class="n">int64</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">g</span><span class="o">.</span><span class="n">edges</span><span class="p">[</span><span class="s1">&#39;shares_user_with&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">data</span><span class="p">[</span><span class="s1">&#39;he&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">full</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="p">(</span><span class="n">g</span><span class="o">.</span><span class="n">number_of_edges</span><span class="p">(</span><span class="s1">&#39;shares_user_with&#39;</span><span class="p">),),</span> <span class="mi">4</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="o">.</span><span class="n">int64</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">In</span> <span class="p">[</span><span class="mi">3</span><span class="p">]:</span> <span class="n">g</span><span class="o">.</span><span class="n">edata</span><span class="p">[</span><span class="s1">&#39;he&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">Out</span><span class="p">[</span><span class="mi">3</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl"><span class="p">{(</span><span class="s1">&#39;review&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;shares_restaurant_in_one_month_with&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;review&#39;</span><span class="p">):</span> <span class="n">tensor</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span>  <span class="o">...</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">]),</span>
</span></span><span class="line"><span class="cl"> <span class="p">(</span><span class="s1">&#39;review&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;shares_restaurant_rating_with&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;review&#39;</span><span class="p">):</span> <span class="n">tensor</span><span class="p">([</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span>  <span class="o">...</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">]),</span>
</span></span><span class="line"><span class="cl"> <span class="p">(</span><span class="s1">&#39;review&#39;</span><span class="p">,</span> <span class="s1">&#39;shares_user_with&#39;</span><span class="p">,</span> <span class="s1">&#39;review&#39;</span><span class="p">):</span> <span class="n">tensor</span><span class="p">([</span><span class="mi">4</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span>  <span class="o">...</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">4</span><span class="p">])}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>参考：https://discuss.dgl.ai/t/how-to-convert-from-a-heterogeneous-graph-to-a-homogeneous-graph-with-data/2764</p>
</blockquote>
<p>然后将它转换为同构图，把 <code>he</code> 作为要保留的 edata：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">hg</span> <span class="o">=</span> <span class="n">dgl</span><span class="o">.</span><span class="n">to_homogeneous</span><span class="p">(</span><span class="n">g</span><span class="p">,</span> <span class="n">edata</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;he&#39;</span><span class="p">],</span> <span class="n">ndata</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;feat&#39;</span><span class="p">,</span> <span class="s1">&#39;label&#39;</span><span class="p">,</span> <span class="s1">&#39;train_mask&#39;</span><span class="p">,</span> <span class="s1">&#39;val_mask&#39;</span><span class="p">,</span> <span class="s1">&#39;test_mask&#39;</span><span class="p">])</span>
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>参考：https://docs.dgl.ai/en/latest/guide/graph-heterogeneous.html?highlight=to_homogeneous#converting-heterogeneous-graphs-to-homogeneous-graphs</p>
</blockquote>
<p>默认的 GraphSAGE 实现是没考虑 edge feature 的，我们要修改消息传递的步骤，在后边会涉及到这部分的实操。</p>
<blockquote>
<p>参考：</p>
<ul>
<li><a href="https://discuss.dgl.ai/t/frequently-asked-questions-faq/1681" target="_blank" rel="noopener noreffer">https://discuss.dgl.ai/t/frequently-asked-questions-faq/1681</a> （问题13）</li>
<li><a href="https://discuss.dgl.ai/t/using-node-and-edge-features-in-message-passing/762" target="_blank" rel="noopener noreffer">https://discuss.dgl.ai/t/using-node-and-edge-features-in-message-passing/762</a></li>
</ul>
</blockquote>
<p><strong>模型训练代码</strong></p>
<p>DGL 官方给出了例子在：https://github.com/dmlc/dgl/tree/master/examples/pytorch/graphsage，我在测试的时候还修复了一个小 bug。</p>
<p>因为我们处理过的同构图里是带有 edge feature 的，不能照搬官方的 GraphSAGE 例子代码，我们有两种方法来处理它：</p>
<p>a. 可以稍微改动一下 <code>SAGEConv</code>消息传递的部分，以 mean 聚合的方式为例：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-diff" data-lang="diff"><span class="line"><span class="cl">  graph.update_all(msg_fn, fn.mean(&#39;m&#39;, &#39;neigh&#39;))
</span></span><span class="line"><span class="cl"><span class="gi">+ graph.update_all(fn.copy_e(&#39;he&#39;, &#39;m&#39;), fn.mean(&#39;m&#39;, &#39;neigh&#39;))
</span></span></span><span class="line"><span class="cl"><span class="gi"></span><span class="gd">- h_neigh = graph.dstdata[&#39;neigh&#39;]
</span></span></span><span class="line"><span class="cl"><span class="gd"></span><span class="gi">+ h_neigh = torch.cat((graph.dstdata[&#39;neigh&#39;], graph.dstdata[&#39;neigh_e&#39;].reshape(-1, 1)), 1)
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>这个处理中，除了上边消息传递部分增加 edge feature 之外，还需要注意 feature 维度的处理。</p>
<p>b. 把边参数作为边权重 ，以 mean 聚合为例：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-diff" data-lang="diff"><span class="line"><span class="cl"><span class="gd">- graph.update_all(msg_fn, fn.mean(&#39;m&#39;, &#39;neigh&#39;))
</span></span></span><span class="line"><span class="cl"><span class="gd"></span><span class="gi">+ # consdier datatype with different weight, g.edata[&#39;he&#39;] as weight here
</span></span></span><span class="line"><span class="cl"><span class="gi">+ g.update_all(fn.u_mul_e(&#39;h&#39;, &#39;he&#39;, &#39;m&#39;), fn.mean(&#39;m&#39;, &#39;h&#39;))
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>下边，我们以把边的类型作为权重的方式，<code>mean</code>作为聚合的情况为例来实操：</p>
<p>我们来继承，并覆盖<code>SAGEConv</code>：</p>
<blockquote>
<p>我们其实只是修改了 Message Passing 的部分。</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">dgl</span> <span class="kn">import</span> <span class="n">function</span> <span class="k">as</span> <span class="n">fn</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">dgl.utils</span> <span class="kn">import</span> <span class="n">check_eq_shape</span><span class="p">,</span> <span class="n">expand_as_pair</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">SAGEConv</span><span class="p">(</span><span class="n">dglnn</span><span class="o">.</span><span class="n">SAGEConv</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">forward</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">graph</span><span class="p">,</span> <span class="n">feat</span><span class="p">,</span> <span class="n">edge_weight</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="sa">r</span><span class="s2">&#34;&#34;&#34;
</span></span></span><span class="line"><span class="cl"><span class="s2">
</span></span></span><span class="line"><span class="cl"><span class="s2">        Description
</span></span></span><span class="line"><span class="cl"><span class="s2">        -----------
</span></span></span><span class="line"><span class="cl"><span class="s2">        Compute GraphSAGE layer.
</span></span></span><span class="line"><span class="cl"><span class="s2">
</span></span></span><span class="line"><span class="cl"><span class="s2">        Parameters
</span></span></span><span class="line"><span class="cl"><span class="s2">        ----------
</span></span></span><span class="line"><span class="cl"><span class="s2">        graph : DGLGraph
</span></span></span><span class="line"><span class="cl"><span class="s2">            The graph.
</span></span></span><span class="line"><span class="cl"><span class="s2">        feat : torch.Tensor or pair of torch.Tensor
</span></span></span><span class="line"><span class="cl"><span class="s2">            If a torch.Tensor is given, it represents the input feature of shape
</span></span></span><span class="line"><span class="cl"><span class="s2">            :math:`(N, D_</span><span class="si">{in}</span><span class="s2">)`
</span></span></span><span class="line"><span class="cl"><span class="s2">            where :math:`D_</span><span class="si">{in}</span><span class="s2">` is size of input feature, :math:`N` is the number of nodes.
</span></span></span><span class="line"><span class="cl"><span class="s2">            If a pair of torch.Tensor is given, the pair must contain two tensors of shape
</span></span></span><span class="line"><span class="cl"><span class="s2">            :math:`(N_</span><span class="si">{in}</span><span class="s2">, D_{in_</span><span class="si">{src}</span><span class="s2">})` and :math:`(N_</span><span class="si">{out}</span><span class="s2">, D_{in_</span><span class="si">{dst}</span><span class="s2">})`.
</span></span></span><span class="line"><span class="cl"><span class="s2">        edge_weight : torch.Tensor, optional
</span></span></span><span class="line"><span class="cl"><span class="s2">            Optional tensor on the edge. If given, the convolution will weight
</span></span></span><span class="line"><span class="cl"><span class="s2">            with regard to the message.
</span></span></span><span class="line"><span class="cl"><span class="s2">
</span></span></span><span class="line"><span class="cl"><span class="s2">        Returns
</span></span></span><span class="line"><span class="cl"><span class="s2">        -------
</span></span></span><span class="line"><span class="cl"><span class="s2">        torch.Tensor
</span></span></span><span class="line"><span class="cl"><span class="s2">            The output feature of shape :math:`(N_</span><span class="si">{dst}</span><span class="s2">, D_</span><span class="si">{out}</span><span class="s2">)`
</span></span></span><span class="line"><span class="cl"><span class="s2">            where :math:`N_</span><span class="si">{dst}</span><span class="s2">` is the number of destination nodes in the input graph,
</span></span></span><span class="line"><span class="cl"><span class="s2">            :math:`D_</span><span class="si">{out}</span><span class="s2">` is the size of the output feature.
</span></span></span><span class="line"><span class="cl"><span class="s2">        &#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_compatibility_check</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="k">with</span> <span class="n">graph</span><span class="o">.</span><span class="n">local_scope</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">feat</span><span class="p">,</span> <span class="nb">tuple</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">                <span class="n">feat_src</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">feat_drop</span><span class="p">(</span><span class="n">feat</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">                <span class="n">feat_dst</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">feat_drop</span><span class="p">(</span><span class="n">feat</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">            <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">feat_src</span> <span class="o">=</span> <span class="n">feat_dst</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">feat_drop</span><span class="p">(</span><span class="n">feat</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="n">graph</span><span class="o">.</span><span class="n">is_block</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                    <span class="n">feat_dst</span> <span class="o">=</span> <span class="n">feat_src</span><span class="p">[:</span><span class="n">graph</span><span class="o">.</span><span class="n">number_of_dst_nodes</span><span class="p">()]</span>
</span></span><span class="line"><span class="cl">            <span class="n">msg_fn</span> <span class="o">=</span> <span class="n">fn</span><span class="o">.</span><span class="n">copy_src</span><span class="p">(</span><span class="s1">&#39;h&#39;</span><span class="p">,</span> <span class="s1">&#39;m&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">edge_weight</span> <span class="ow">is</span> <span class="ow">not</span> <span class="kc">None</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="k">assert</span> <span class="n">edge_weight</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="n">graph</span><span class="o">.</span><span class="n">number_of_edges</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">                <span class="n">graph</span><span class="o">.</span><span class="n">edata</span><span class="p">[</span><span class="s1">&#39;_edge_weight&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">edge_weight</span>
</span></span><span class="line"><span class="cl">                <span class="n">msg_fn</span> <span class="o">=</span> <span class="n">fn</span><span class="o">.</span><span class="n">u_mul_e</span><span class="p">(</span><span class="s1">&#39;h&#39;</span><span class="p">,</span> <span class="s1">&#39;_edge_weight&#39;</span><span class="p">,</span> <span class="s1">&#39;m&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="n">h_self</span> <span class="o">=</span> <span class="n">feat_dst</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="c1"># Handle the case of graphs without edges</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">graph</span><span class="o">.</span><span class="n">number_of_edges</span><span class="p">()</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">graph</span><span class="o">.</span><span class="n">dstdata</span><span class="p">[</span><span class="s1">&#39;neigh&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">zeros</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                    <span class="n">feat_dst</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="bp">self</span><span class="o">.</span><span class="n">_in_src_feats</span><span class="p">)</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="n">feat_dst</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="c1"># Determine whether to apply linear transformation before message passing A(XW)</span>
</span></span><span class="line"><span class="cl">            <span class="n">lin_before_mp</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_in_src_feats</span> <span class="o">&gt;</span> <span class="bp">self</span><span class="o">.</span><span class="n">_out_feats</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="c1"># Message Passing</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_aggre_type</span> <span class="o">==</span> <span class="s1">&#39;mean&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">graph</span><span class="o">.</span><span class="n">srcdata</span><span class="p">[</span><span class="s1">&#39;h&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">fc_neigh</span><span class="p">(</span><span class="n">feat_src</span><span class="p">)</span> <span class="k">if</span> <span class="n">lin_before_mp</span> <span class="k">else</span> <span class="n">feat_src</span>
</span></span><span class="line"><span class="cl">                <span class="c1"># graph.update_all(msg_fn, fn.mean(&#39;m&#39;, &#39;neigh&#39;))</span>
</span></span><span class="line"><span class="cl">                <span class="c1">#########################################################################</span>
</span></span><span class="line"><span class="cl">                <span class="c1"># consdier datatype with different weight, g.edata[&#39;he&#39;] as weight here</span>
</span></span><span class="line"><span class="cl">                <span class="n">g</span><span class="o">.</span><span class="n">update_all</span><span class="p">(</span><span class="n">fn</span><span class="o">.</span><span class="n">u_mul_e</span><span class="p">(</span><span class="s1">&#39;h&#39;</span><span class="p">,</span> <span class="s1">&#39;he&#39;</span><span class="p">,</span> <span class="s1">&#39;m&#39;</span><span class="p">),</span> <span class="n">fn</span><span class="o">.</span><span class="n">mean</span><span class="p">(</span><span class="s1">&#39;m&#39;</span><span class="p">,</span> <span class="s1">&#39;h&#39;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">                <span class="c1">#########################################################################</span>
</span></span><span class="line"><span class="cl">                <span class="n">h_neigh</span> <span class="o">=</span> <span class="n">graph</span><span class="o">.</span><span class="n">dstdata</span><span class="p">[</span><span class="s1">&#39;neigh&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="ow">not</span> <span class="n">lin_before_mp</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                    <span class="n">h_neigh</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">fc_neigh</span><span class="p">(</span><span class="n">h_neigh</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="k">elif</span> <span class="bp">self</span><span class="o">.</span><span class="n">_aggre_type</span> <span class="o">==</span> <span class="s1">&#39;gcn&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">check_eq_shape</span><span class="p">(</span><span class="n">feat</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="n">graph</span><span class="o">.</span><span class="n">srcdata</span><span class="p">[</span><span class="s1">&#39;h&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">fc_neigh</span><span class="p">(</span><span class="n">feat_src</span><span class="p">)</span> <span class="k">if</span> <span class="n">lin_before_mp</span> <span class="k">else</span> <span class="n">feat_src</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">feat</span><span class="p">,</span> <span class="nb">tuple</span><span class="p">):</span>  <span class="c1"># heterogeneous</span>
</span></span><span class="line"><span class="cl">                    <span class="n">graph</span><span class="o">.</span><span class="n">dstdata</span><span class="p">[</span><span class="s1">&#39;h&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">fc_neigh</span><span class="p">(</span><span class="n">feat_dst</span><span class="p">)</span> <span class="k">if</span> <span class="n">lin_before_mp</span> <span class="k">else</span> <span class="n">feat_dst</span>
</span></span><span class="line"><span class="cl">                <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                    <span class="k">if</span> <span class="n">graph</span><span class="o">.</span><span class="n">is_block</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                        <span class="n">graph</span><span class="o">.</span><span class="n">dstdata</span><span class="p">[</span><span class="s1">&#39;h&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">graph</span><span class="o">.</span><span class="n">srcdata</span><span class="p">[</span><span class="s1">&#39;h&#39;</span><span class="p">][:</span><span class="n">graph</span><span class="o">.</span><span class="n">num_dst_nodes</span><span class="p">()]</span>
</span></span><span class="line"><span class="cl">                    <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                        <span class="n">graph</span><span class="o">.</span><span class="n">dstdata</span><span class="p">[</span><span class="s1">&#39;h&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">graph</span><span class="o">.</span><span class="n">srcdata</span><span class="p">[</span><span class="s1">&#39;h&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">                <span class="n">graph</span><span class="o">.</span><span class="n">update_all</span><span class="p">(</span><span class="n">msg_fn</span><span class="p">,</span> <span class="n">fn</span><span class="o">.</span><span class="n">sum</span><span class="p">(</span><span class="s1">&#39;m&#39;</span><span class="p">,</span> <span class="s1">&#39;neigh&#39;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">                <span class="n">graph</span><span class="o">.</span><span class="n">update_all</span><span class="p">(</span><span class="n">fn</span><span class="o">.</span><span class="n">copy_e</span><span class="p">(</span><span class="s1">&#39;he&#39;</span><span class="p">,</span> <span class="s1">&#39;m&#39;</span><span class="p">),</span> <span class="n">fn</span><span class="o">.</span><span class="n">sum</span><span class="p">(</span><span class="s1">&#39;m&#39;</span><span class="p">,</span> <span class="s1">&#39;neigh&#39;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">                <span class="c1"># divide in_degrees</span>
</span></span><span class="line"><span class="cl">                <span class="n">degs</span> <span class="o">=</span> <span class="n">graph</span><span class="o">.</span><span class="n">in_degrees</span><span class="p">()</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="n">feat_dst</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="n">h_neigh</span> <span class="o">=</span> <span class="p">(</span><span class="n">graph</span><span class="o">.</span><span class="n">dstdata</span><span class="p">[</span><span class="s1">&#39;neigh&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="n">graph</span><span class="o">.</span><span class="n">dstdata</span><span class="p">[</span><span class="s1">&#39;h&#39;</span><span class="p">])</span> <span class="o">/</span> <span class="p">(</span><span class="n">degs</span><span class="o">.</span><span class="n">unsqueeze</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="ow">not</span> <span class="n">lin_before_mp</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                    <span class="n">h_neigh</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">fc_neigh</span><span class="p">(</span><span class="n">h_neigh</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="k">elif</span> <span class="bp">self</span><span class="o">.</span><span class="n">_aggre_type</span> <span class="o">==</span> <span class="s1">&#39;pool&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">graph</span><span class="o">.</span><span class="n">srcdata</span><span class="p">[</span><span class="s1">&#39;h&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">F</span><span class="o">.</span><span class="n">relu</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">fc_pool</span><span class="p">(</span><span class="n">feat_src</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">                <span class="n">graph</span><span class="o">.</span><span class="n">update_all</span><span class="p">(</span><span class="n">msg_fn</span><span class="p">,</span> <span class="n">fn</span><span class="o">.</span><span class="n">max</span><span class="p">(</span><span class="s1">&#39;m&#39;</span><span class="p">,</span> <span class="s1">&#39;neigh&#39;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">                <span class="n">graph</span><span class="o">.</span><span class="n">update_all</span><span class="p">(</span><span class="n">fn</span><span class="o">.</span><span class="n">copy_e</span><span class="p">(</span><span class="s1">&#39;he&#39;</span><span class="p">,</span> <span class="s1">&#39;m&#39;</span><span class="p">),</span> <span class="n">fn</span><span class="o">.</span><span class="n">max</span><span class="p">(</span><span class="s1">&#39;m&#39;</span><span class="p">,</span> <span class="s1">&#39;neigh&#39;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">                <span class="n">h_neigh</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">fc_neigh</span><span class="p">(</span><span class="n">graph</span><span class="o">.</span><span class="n">dstdata</span><span class="p">[</span><span class="s1">&#39;neigh&#39;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">            <span class="k">elif</span> <span class="bp">self</span><span class="o">.</span><span class="n">_aggre_type</span> <span class="o">==</span> <span class="s1">&#39;lstm&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">graph</span><span class="o">.</span><span class="n">srcdata</span><span class="p">[</span><span class="s1">&#39;h&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">feat_src</span>
</span></span><span class="line"><span class="cl">                <span class="n">graph</span><span class="o">.</span><span class="n">update_all</span><span class="p">(</span><span class="n">msg_fn</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_lstm_reducer</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="n">h_neigh</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">fc_neigh</span><span class="p">(</span><span class="n">graph</span><span class="o">.</span><span class="n">dstdata</span><span class="p">[</span><span class="s1">&#39;neigh&#39;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">            <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="k">raise</span> <span class="ne">KeyError</span><span class="p">(</span><span class="s1">&#39;Aggregator type </span><span class="si">{}</span><span class="s1"> not recognized.&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_aggre_type</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="c1"># GraphSAGE GCN does not require fc_self.</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_aggre_type</span> <span class="o">==</span> <span class="s1">&#39;gcn&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">rst</span> <span class="o">=</span> <span class="n">h_neigh</span>
</span></span><span class="line"><span class="cl">            <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">rst</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">fc_self</span><span class="p">(</span><span class="n">h_self</span><span class="p">)</span> <span class="o">+</span> <span class="n">h_neigh</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="c1"># bias term</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">bias</span> <span class="ow">is</span> <span class="ow">not</span> <span class="kc">None</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">rst</span> <span class="o">=</span> <span class="n">rst</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">bias</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="c1"># activation</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">activation</span> <span class="ow">is</span> <span class="ow">not</span> <span class="kc">None</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">rst</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">activation</span><span class="p">(</span><span class="n">rst</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># normalization</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">norm</span> <span class="ow">is</span> <span class="ow">not</span> <span class="kc">None</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">rst</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">norm</span><span class="p">(</span><span class="n">rst</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="n">rst</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>定义模型</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">SAGE</span><span class="p">(</span><span class="n">nn</span><span class="o">.</span><span class="n">Module</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">in_size</span><span class="p">,</span> <span class="n">hid_size</span><span class="p">,</span> <span class="n">out_size</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="nb">super</span><span class="p">()</span><span class="o">.</span><span class="fm">__init__</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">layers</span> <span class="o">=</span> <span class="n">nn</span><span class="o">.</span><span class="n">ModuleList</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># three-layer GraphSAGE-mean</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">layers</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">dglnn</span><span class="o">.</span><span class="n">SAGEConv</span><span class="p">(</span><span class="n">in_size</span><span class="p">,</span> <span class="n">hid_size</span><span class="p">,</span> <span class="s1">&#39;mean&#39;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">layers</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">dglnn</span><span class="o">.</span><span class="n">SAGEConv</span><span class="p">(</span><span class="n">hid_size</span><span class="p">,</span> <span class="n">hid_size</span><span class="p">,</span> <span class="s1">&#39;mean&#39;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">layers</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">dglnn</span><span class="o">.</span><span class="n">SAGEConv</span><span class="p">(</span><span class="n">hid_size</span><span class="p">,</span> <span class="n">out_size</span><span class="p">,</span> <span class="s1">&#39;mean&#39;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">dropout</span> <span class="o">=</span> <span class="n">nn</span><span class="o">.</span><span class="n">Dropout</span><span class="p">(</span><span class="mf">0.5</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">hid_size</span> <span class="o">=</span> <span class="n">hid_size</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">out_size</span> <span class="o">=</span> <span class="n">out_size</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">forward</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">blocks</span><span class="p">,</span> <span class="n">x</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="n">h</span> <span class="o">=</span> <span class="n">x</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">l</span><span class="p">,</span> <span class="p">(</span><span class="n">layer</span><span class="p">,</span> <span class="n">block</span><span class="p">)</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="nb">zip</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">layers</span><span class="p">,</span> <span class="n">blocks</span><span class="p">)):</span>
</span></span><span class="line"><span class="cl">            <span class="n">h</span> <span class="o">=</span> <span class="n">layer</span><span class="p">(</span><span class="n">block</span><span class="p">,</span> <span class="n">h</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">l</span> <span class="o">!=</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">layers</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">h</span> <span class="o">=</span> <span class="n">F</span><span class="o">.</span><span class="n">relu</span><span class="p">(</span><span class="n">h</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="n">h</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">dropout</span><span class="p">(</span><span class="n">h</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">h</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">inference</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">g</span><span class="p">,</span> <span class="n">device</span><span class="p">,</span> <span class="n">batch_size</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;Conduct layer-wise inference to get all the node embeddings.&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">feat</span> <span class="o">=</span> <span class="n">g</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;feat&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="n">sampler</span> <span class="o">=</span> <span class="n">MultiLayerFullNeighborSampler</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">prefetch_node_feats</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;feat&#39;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">        <span class="n">dataloader</span> <span class="o">=</span> <span class="n">DataLoader</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                <span class="n">g</span><span class="p">,</span> <span class="n">torch</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="n">g</span><span class="o">.</span><span class="n">num_nodes</span><span class="p">())</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="n">g</span><span class="o">.</span><span class="n">device</span><span class="p">),</span> <span class="n">sampler</span><span class="p">,</span> <span class="n">device</span><span class="o">=</span><span class="n">device</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="n">batch_size</span><span class="o">=</span><span class="n">batch_size</span><span class="p">,</span> <span class="n">shuffle</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">drop_last</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="n">num_workers</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">buffer_device</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">device</span><span class="p">(</span><span class="s1">&#39;cpu&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">pin_memory</span> <span class="o">=</span> <span class="p">(</span><span class="n">buffer_device</span> <span class="o">!=</span> <span class="n">device</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">l</span><span class="p">,</span> <span class="n">layer</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">layers</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="n">y</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">empty</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                <span class="n">g</span><span class="o">.</span><span class="n">num_nodes</span><span class="p">(),</span> <span class="bp">self</span><span class="o">.</span><span class="n">hid_size</span> <span class="k">if</span> <span class="n">l</span> <span class="o">!=</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">layers</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span> <span class="k">else</span> <span class="bp">self</span><span class="o">.</span><span class="n">out_size</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="n">device</span><span class="o">=</span><span class="n">buffer_device</span><span class="p">,</span> <span class="n">pin_memory</span><span class="o">=</span><span class="n">pin_memory</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">feat</span> <span class="o">=</span> <span class="n">feat</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="n">device</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="k">for</span> <span class="n">input_nodes</span><span class="p">,</span> <span class="n">output_nodes</span><span class="p">,</span> <span class="n">blocks</span> <span class="ow">in</span> <span class="n">tqdm</span><span class="o">.</span><span class="n">tqdm</span><span class="p">(</span><span class="n">dataloader</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">                <span class="n">x</span> <span class="o">=</span> <span class="n">feat</span><span class="p">[</span><span class="n">input_nodes</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">                <span class="n">h</span> <span class="o">=</span> <span class="n">layer</span><span class="p">(</span><span class="n">blocks</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">x</span><span class="p">)</span> <span class="c1"># len(blocks) = 1</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="n">l</span> <span class="o">!=</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">layers</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                    <span class="n">h</span> <span class="o">=</span> <span class="n">F</span><span class="o">.</span><span class="n">relu</span><span class="p">(</span><span class="n">h</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                    <span class="n">h</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">dropout</span><span class="p">(</span><span class="n">h</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="c1"># by design, our output nodes are contiguous</span>
</span></span><span class="line"><span class="cl">                <span class="n">y</span><span class="p">[</span><span class="n">output_nodes</span><span class="p">[</span><span class="mi">0</span><span class="p">]:</span><span class="n">output_nodes</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">h</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="n">buffer_device</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">feat</span> <span class="o">=</span> <span class="n">y</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">y</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>定义训练、推理的函数</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">evaluate</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">graph</span><span class="p">,</span> <span class="n">dataloader</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">model</span><span class="o">.</span><span class="n">eval</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">ys</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">    <span class="n">y_hats</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">it</span><span class="p">,</span> <span class="p">(</span><span class="n">input_nodes</span><span class="p">,</span> <span class="n">output_nodes</span><span class="p">,</span> <span class="n">blocks</span><span class="p">)</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">dataloader</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="k">with</span> <span class="n">torch</span><span class="o">.</span><span class="n">no_grad</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">            <span class="n">x</span> <span class="o">=</span> <span class="n">blocks</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">srcdata</span><span class="p">[</span><span class="s1">&#39;feat&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="n">ys</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">blocks</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">dstdata</span><span class="p">[</span><span class="s1">&#39;label&#39;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">            <span class="n">y_hats</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">model</span><span class="p">(</span><span class="n">blocks</span><span class="p">,</span> <span class="n">x</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">MF</span><span class="o">.</span><span class="n">accuracy</span><span class="p">(</span><span class="n">torch</span><span class="o">.</span><span class="n">cat</span><span class="p">(</span><span class="n">y_hats</span><span class="p">),</span> <span class="n">torch</span><span class="o">.</span><span class="n">cat</span><span class="p">(</span><span class="n">ys</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">layerwise_infer</span><span class="p">(</span><span class="n">device</span><span class="p">,</span> <span class="n">graph</span><span class="p">,</span> <span class="n">nid</span><span class="p">,</span> <span class="n">model</span><span class="p">,</span> <span class="n">batch_size</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">model</span><span class="o">.</span><span class="n">eval</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="k">with</span> <span class="n">torch</span><span class="o">.</span><span class="n">no_grad</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">        <span class="n">pred</span> <span class="o">=</span> <span class="n">model</span><span class="o">.</span><span class="n">inference</span><span class="p">(</span><span class="n">graph</span><span class="p">,</span> <span class="n">device</span><span class="p">,</span> <span class="n">batch_size</span><span class="p">)</span> <span class="c1"># pred in buffer_device</span>
</span></span><span class="line"><span class="cl">        <span class="n">pred</span> <span class="o">=</span> <span class="n">pred</span><span class="p">[</span><span class="n">nid</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="n">label</span> <span class="o">=</span> <span class="n">graph</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;label&#39;</span><span class="p">][</span><span class="n">nid</span><span class="p">]</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="n">pred</span><span class="o">.</span><span class="n">device</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">MF</span><span class="o">.</span><span class="n">accuracy</span><span class="p">(</span><span class="n">pred</span><span class="p">,</span> <span class="n">label</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">train</span><span class="p">(</span><span class="n">device</span><span class="p">,</span> <span class="n">g</span><span class="p">,</span> <span class="n">model</span><span class="p">,</span> <span class="n">train_idx</span><span class="p">,</span> <span class="n">val_idx</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># create sampler &amp; dataloader</span>
</span></span><span class="line"><span class="cl">    <span class="n">sampler</span> <span class="o">=</span> <span class="n">NeighborSampler</span><span class="p">([</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">],</span>  <span class="c1"># fanout for [layer-0, layer-1, layer-2]</span>
</span></span><span class="line"><span class="cl">                              <span class="n">prefetch_node_feats</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;feat&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">                              <span class="n">prefetch_labels</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;label&#39;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">    <span class="n">use_uva</span> <span class="o">=</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">    <span class="n">train_dataloader</span> <span class="o">=</span> <span class="n">DataLoader</span><span class="p">(</span><span class="n">g</span><span class="p">,</span> <span class="n">train_idx</span><span class="p">,</span> <span class="n">sampler</span><span class="p">,</span> <span class="n">device</span><span class="o">=</span><span class="n">device</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                                  <span class="n">batch_size</span><span class="o">=</span><span class="mi">1024</span><span class="p">,</span> <span class="n">shuffle</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                                  <span class="n">drop_last</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">num_workers</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                                  <span class="n">use_uva</span><span class="o">=</span><span class="n">use_uva</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">val_dataloader</span> <span class="o">=</span> <span class="n">DataLoader</span><span class="p">(</span><span class="n">g</span><span class="p">,</span> <span class="n">val_idx</span><span class="p">,</span> <span class="n">sampler</span><span class="p">,</span> <span class="n">device</span><span class="o">=</span><span class="n">device</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                                <span class="n">batch_size</span><span class="o">=</span><span class="mi">1024</span><span class="p">,</span> <span class="n">shuffle</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                                <span class="n">drop_last</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">num_workers</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                                <span class="n">use_uva</span><span class="o">=</span><span class="n">use_uva</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">opt</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">optim</span><span class="o">.</span><span class="n">Adam</span><span class="p">(</span><span class="n">model</span><span class="o">.</span><span class="n">parameters</span><span class="p">(),</span> <span class="n">lr</span><span class="o">=</span><span class="mf">1e-3</span><span class="p">,</span> <span class="n">weight_decay</span><span class="o">=</span><span class="mf">5e-4</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">epoch</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="n">model</span><span class="o">.</span><span class="n">train</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">total_loss</span> <span class="o">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">it</span><span class="p">,</span> <span class="p">(</span><span class="n">input_nodes</span><span class="p">,</span> <span class="n">output_nodes</span><span class="p">,</span> <span class="n">blocks</span><span class="p">)</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">train_dataloader</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="n">x</span> <span class="o">=</span> <span class="n">blocks</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">srcdata</span><span class="p">[</span><span class="s1">&#39;feat&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="n">y</span> <span class="o">=</span> <span class="n">blocks</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">dstdata</span><span class="p">[</span><span class="s1">&#39;label&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="n">y_hat</span> <span class="o">=</span> <span class="n">model</span><span class="p">(</span><span class="n">blocks</span><span class="p">,</span> <span class="n">x</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">loss</span> <span class="o">=</span> <span class="n">F</span><span class="o">.</span><span class="n">cross_entropy</span><span class="p">(</span><span class="n">y_hat</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">opt</span><span class="o">.</span><span class="n">zero_grad</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="n">loss</span><span class="o">.</span><span class="n">backward</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="n">opt</span><span class="o">.</span><span class="n">step</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="n">total_loss</span> <span class="o">+=</span> <span class="n">loss</span><span class="o">.</span><span class="n">item</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">acc</span> <span class="o">=</span> <span class="n">evaluate</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">g</span><span class="p">,</span> <span class="n">val_dataloader</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;Epoch </span><span class="si">{:05d}</span><span class="s2"> | Loss </span><span class="si">{:.4f}</span><span class="s2"> | Accuracy </span><span class="si">{:.4f}</span><span class="s2"> &#34;</span>
</span></span><span class="line"><span class="cl">              <span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">epoch</span><span class="p">,</span> <span class="n">total_loss</span> <span class="o">/</span> <span class="p">(</span><span class="n">it</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span> <span class="n">acc</span><span class="o">.</span><span class="n">item</span><span class="p">()))</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>从 NebulaGraph 中加载图到 DGL，得到的是一个异构图（一类点、三类边）</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">nebula_dgl</span> <span class="kn">import</span> <span class="n">NebulaLoader</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">nebula_config</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;graph_hosts&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                <span class="p">(</span><span class="s1">&#39;graphd&#39;</span><span class="p">,</span> <span class="mi">9669</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">                <span class="p">(</span><span class="s1">&#39;graphd1&#39;</span><span class="p">,</span> <span class="mi">9669</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">                <span class="p">(</span><span class="s1">&#39;graphd2&#39;</span><span class="p">,</span> <span class="mi">9669</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;nebula_user&#34;</span><span class="p">:</span> <span class="s2">&#34;root&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;nebula_password&#34;</span><span class="p">:</span> <span class="s2">&#34;nebula&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;nebulagraph_yelp_dgl_mapper.yaml&#39;</span><span class="p">,</span> <span class="s1">&#39;r&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">     <span class="n">feature_mapper</span> <span class="o">=</span> <span class="n">yaml</span><span class="o">.</span><span class="n">safe_load</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">nebula_loader</span> <span class="o">=</span> <span class="n">NebulaLoader</span><span class="p">(</span><span class="n">nebula_config</span><span class="p">,</span> <span class="n">feature_mapper</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">g</span> <span class="o">=</span> <span class="n">nebula_loader</span><span class="o">.</span><span class="n">load</span><span class="p">()</span> <span class="c1"># This will take you some time</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 作为穷人，我们用 CPU</span>
</span></span><span class="line"><span class="cl"><span class="n">g</span> <span class="o">=</span> <span class="n">g</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="s1">&#39;cpu&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">device</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">device</span><span class="p">(</span><span class="s1">&#39;cpu&#39;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>分出训练、验证、测试集，然后转换成同构图。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># Split the graph into train, validation and test sets</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">train_test_split</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># features are g.ndata[&#39;f0&#39;], g.ndata[&#39;f1&#39;], g.ndata[&#39;f2&#39;], ... g.ndata[&#39;f31&#39;]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># label is in g.ndata[&#39;is_fraud&#39;]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># concatenate all features</span>
</span></span><span class="line"><span class="cl"><span class="n">features</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">32</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">features</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">g</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;f&#39;</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)])</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">g</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;feat&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">stack</span><span class="p">(</span><span class="n">features</span><span class="p">,</span> <span class="n">dim</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">g</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;label&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">g</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;is_fraud&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># numpy array as index of range n</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">idx</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">tensor</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="n">g</span><span class="o">.</span><span class="n">number_of_nodes</span><span class="p">()),</span> <span class="n">device</span><span class="o">=</span><span class="n">device</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="o">.</span><span class="n">int64</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># features.append(idx)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># concatenate one dim with index of node</span>
</span></span><span class="line"><span class="cl"><span class="c1"># feature_and_idx = torch.stack(features, dim=1)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># split based on value distribution of label: the property &#34;is_fraud&#34;, which is a binary variable.</span>
</span></span><span class="line"><span class="cl"><span class="n">X_train_and_val_idx</span><span class="p">,</span> <span class="n">X_test_idx</span><span class="p">,</span> <span class="n">y_train_and_val</span><span class="p">,</span> <span class="n">y_test</span> <span class="o">=</span> <span class="n">train_test_split</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">idx</span><span class="p">,</span> <span class="n">g</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;is_fraud&#39;</span><span class="p">],</span> <span class="n">test_size</span><span class="o">=</span><span class="mf">0.2</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">,</span> <span class="n">stratify</span><span class="o">=</span><span class="n">g</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;is_fraud&#39;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># split train and val</span>
</span></span><span class="line"><span class="cl"><span class="n">X_train_idx</span><span class="p">,</span> <span class="n">X_val_idx</span><span class="p">,</span> <span class="n">y_train</span><span class="p">,</span> <span class="n">y_val</span> <span class="o">=</span> <span class="n">train_test_split</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">X_train_and_val_idx</span><span class="p">,</span> <span class="n">y_train_and_val</span><span class="p">,</span> <span class="n">test_size</span><span class="o">=</span><span class="mf">0.2</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">,</span> <span class="n">stratify</span><span class="o">=</span><span class="n">y_train_and_val</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># list of index to mask</span>
</span></span><span class="line"><span class="cl"><span class="n">train_mask</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">zeros</span><span class="p">(</span><span class="n">g</span><span class="o">.</span><span class="n">number_of_nodes</span><span class="p">(),</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="o">.</span><span class="n">bool</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">train_mask</span><span class="p">[</span><span class="n">X_train_idx</span><span class="p">]</span> <span class="o">=</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">val_mask</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">zeros</span><span class="p">(</span><span class="n">g</span><span class="o">.</span><span class="n">number_of_nodes</span><span class="p">(),</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="o">.</span><span class="n">bool</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">val_mask</span><span class="p">[</span><span class="n">X_val_idx</span><span class="p">]</span> <span class="o">=</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">test_mask</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">zeros</span><span class="p">(</span><span class="n">g</span><span class="o">.</span><span class="n">number_of_nodes</span><span class="p">(),</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="o">.</span><span class="n">bool</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">test_mask</span><span class="p">[</span><span class="n">X_test_idx</span><span class="p">]</span> <span class="o">=</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">g</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;train_mask&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">train_mask</span>
</span></span><span class="line"><span class="cl"><span class="n">g</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;val_mask&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">val_mask</span>
</span></span><span class="line"><span class="cl"><span class="n">g</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;test_mask&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">test_mask</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># shares_restaurant_in_one_month_with: 1, b&#34;001&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># shares_restaurant_rating_with: 2, b&#34;010&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># shares_user_with: 4, b&#34;100&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># set edata of shares_restaurant_in_one_month_with to n of 1 tensor array</span>
</span></span><span class="line"><span class="cl"><span class="n">g</span><span class="o">.</span><span class="n">edges</span><span class="p">[</span><span class="s1">&#39;shares_restaurant_in_one_month_with&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">data</span><span class="p">[</span><span class="s1">&#39;he&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">ones</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">g</span><span class="o">.</span><span class="n">number_of_edges</span><span class="p">(</span><span class="s1">&#39;shares_restaurant_in_one_month_with&#39;</span><span class="p">),</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="o">.</span><span class="n">float32</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">g</span><span class="o">.</span><span class="n">edges</span><span class="p">[</span><span class="s1">&#39;shares_restaurant_rating_with&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">data</span><span class="p">[</span><span class="s1">&#39;he&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">full</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="p">(</span><span class="n">g</span><span class="o">.</span><span class="n">number_of_edges</span><span class="p">(</span><span class="s1">&#39;shares_restaurant_rating_with&#39;</span><span class="p">),),</span> <span class="mi">2</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="o">.</span><span class="n">float32</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">g</span><span class="o">.</span><span class="n">edges</span><span class="p">[</span><span class="s1">&#39;shares_user_with&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">data</span><span class="p">[</span><span class="s1">&#39;he&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">full</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="p">(</span><span class="n">g</span><span class="o">.</span><span class="n">number_of_edges</span><span class="p">(</span><span class="s1">&#39;shares_user_with&#39;</span><span class="p">),),</span> <span class="mi">4</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="o">.</span><span class="n">float32</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># heterogeneous graph to heterogeneous graph, keep ndata and edata</span>
</span></span><span class="line"><span class="cl"><span class="n">hg</span> <span class="o">=</span> <span class="n">dgl</span><span class="o">.</span><span class="n">to_homogeneous</span><span class="p">(</span><span class="n">g</span><span class="p">,</span> <span class="n">edata</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;he&#39;</span><span class="p">],</span> <span class="n">ndata</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;feat&#39;</span><span class="p">,</span> <span class="s1">&#39;label&#39;</span><span class="p">,</span> <span class="s1">&#39;train_mask&#39;</span><span class="p">,</span> <span class="s1">&#39;val_mask&#39;</span><span class="p">,</span> <span class="s1">&#39;test_mask&#39;</span><span class="p">])</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>训练、测试模型！</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># create GraphSAGE model</span>
</span></span><span class="line"><span class="cl"><span class="n">in_size</span> <span class="o">=</span> <span class="n">hg</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;feat&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">out_size</span> <span class="o">=</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl"><span class="n">model</span> <span class="o">=</span> <span class="n">SAGE</span><span class="p">(</span><span class="n">in_size</span><span class="p">,</span> <span class="mi">256</span><span class="p">,</span> <span class="n">out_size</span><span class="p">)</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="n">device</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># model training</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Training...&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">train</span><span class="p">(</span><span class="n">device</span><span class="p">,</span> <span class="n">hg</span><span class="p">,</span> <span class="n">model</span><span class="p">,</span> <span class="n">X_train_idx</span><span class="p">,</span> <span class="n">X_val_idx</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># test the model</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Testing...&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">acc</span> <span class="o">=</span> <span class="n">layerwise_infer</span><span class="p">(</span><span class="n">device</span><span class="p">,</span> <span class="n">hg</span><span class="p">,</span> <span class="n">X_test_idx</span><span class="p">,</span> <span class="n">model</span><span class="p">,</span> <span class="n">batch_size</span><span class="o">=</span><span class="mi">4096</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;Test Accuracy </span><span class="si">{:.4f}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">acc</span><span class="o">.</span><span class="n">item</span><span class="p">()))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 运行结果</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Test Accuracy 0.9996</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>有了模型之后，我们可以把它序列化成文件，在需要的时候，只需要把模型的形式和这个序列化文件再加载成一个 pyTorch 就可以用它进行推理了。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># save model</span>
</span></span><span class="line"><span class="cl"><span class="n">torch</span><span class="o">.</span><span class="n">save</span><span class="p">(</span><span class="n">model</span><span class="o">.</span><span class="n">state_dict</span><span class="p">(),</span> <span class="s2">&#34;fraud_d.model&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># load model</span>
</span></span><span class="line"><span class="cl"><span class="n">device</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">device</span><span class="p">(</span><span class="s1">&#39;cpu&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">model</span> <span class="o">=</span> <span class="n">SAGE</span><span class="p">(</span><span class="mi">32</span><span class="p">,</span> <span class="mi">256</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="n">device</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">model</span><span class="o">.</span><span class="n">load_state_dict</span><span class="p">(</span><span class="n">torch</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="s2">&#34;fraud_d.model&#34;</span><span class="p">))</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>最后，我们如何把模型放到我们的线上欺诈检测系统里呢？</p>
<h5 id="推理接口" class="headerLink">
    <a href="#%e6%8e%a8%e7%90%86%e6%8e%a5%e5%8f%a3" class="header-mark"></a>1.5.1.4 推理接口</h5><p>前边提到过， GraphSAGE 是最简单的支持 Inductive Learning 的模型，而上边我们的训练推理过程实际上还不是这样的我们的测试和训练的图是同一张，虽然标注了训练的点的索引，但实际上是整张图作为输入的。为了做到Inductive Learning 我们只需要把训练和测试分成两个无交集的子图来做训练和最终测试：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># Inductive Learning, our test dataset are new nodes and new edges</span>
</span></span><span class="line"><span class="cl"><span class="n">hg_train</span> <span class="o">=</span> <span class="n">hg</span><span class="o">.</span><span class="n">subgraph</span><span class="p">(</span><span class="n">torch</span><span class="o">.</span><span class="n">cat</span><span class="p">([</span><span class="n">X_train_idx</span><span class="p">,</span> <span class="n">X_val_idx</span><span class="p">]))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># model training</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Training...&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">train</span><span class="p">(</span><span class="n">device</span><span class="p">,</span> <span class="n">hg_train</span><span class="p">,</span> <span class="n">model</span><span class="p">,</span> <span class="n">torch</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="n">X_train_idx</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span> <span class="n">torch</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="n">X_train_idx</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">hg_train</span><span class="o">.</span><span class="n">num_nodes</span><span class="p">()))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># test the model</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Testing...&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">hg_test</span> <span class="o">=</span> <span class="n">hg</span><span class="o">.</span><span class="n">subgraph</span><span class="p">(</span><span class="n">torch</span><span class="o">.</span><span class="n">cat</span><span class="p">([</span><span class="n">X_test_idx</span><span class="p">]))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">sg_X_test_idx</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="n">hg_test</span><span class="o">.</span><span class="n">num_nodes</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">acc</span> <span class="o">=</span> <span class="n">layerwise_infer</span><span class="p">(</span><span class="n">device</span><span class="p">,</span> <span class="n">hg_test</span><span class="p">,</span> <span class="n">sg_X_test_idx</span><span class="p">,</span> <span class="n">model</span><span class="p">,</span> <span class="n">batch_size</span><span class="o">=</span><span class="mi">4096</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;Test Accuracy </span><span class="si">{:.4f}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">acc</span><span class="o">.</span><span class="n">item</span><span class="p">()))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 运行结果</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Test Accuracy 0.9990</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>可以看到，我们上边的代码里，测试所用到的图和训练的图是完全不同的两组数据，这使得我们的线上系统可以是之前完全没有遇到的数据，我们只要把对新来的一个交易请求数据写进 NebulaGraph，然后再从这个点获取一个线上系统可以返回的小子图，就可以把它作为模型推理的输入，获得子图的标签了！</p>
<p><strong>新的交易请求</strong>：</p>
<p>还记得我们前边画的线上推理系统的流程图么？</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">      ┌─────────────────────┐                          ┌─────────────────┐      
</span></span><span class="line"><span class="cl">      │                     │                          │                 │
</span></span><span class="line"><span class="cl">─────▶│ Transaction Record  ├──────2. Fraud Risk ─────▶│  Inference API  │◀────┐
</span></span><span class="line"><span class="cl">      │                     │◀────Prediction with ─────┤                 │     │
</span></span><span class="line"><span class="cl">      │                     │        Sub Graph         │                 │     │
</span></span><span class="line"><span class="cl">      └─────────────────────┘                          └─────────────────┘     │
</span></span><span class="line"><span class="cl">           │           ▲                                        │              │
</span></span><span class="line"><span class="cl">           │           │                                        │              │
</span></span><span class="line"><span class="cl">       0. Insert   1. Get New                              3.req: Node         │
</span></span><span class="line"><span class="cl">         Record    Record Sub                            Classification        │
</span></span><span class="line"><span class="cl">           │         Graph                                      │              │
</span></span><span class="line"><span class="cl">           ▼           │                                        │              │
</span></span><span class="line"><span class="cl">┌──────────────────────┴─────────────────┐ ┌────────────────────┘      3.resp: │
</span></span><span class="line"><span class="cl">│┌──────────────────────────────────────┐│ │                          Predicted│
</span></span><span class="line"><span class="cl">││   Graph of Historical Transactions   ││ │                             Risk  │
</span></span><span class="line"><span class="cl">│└──────────────────────────────────────┘│ │                                   │
</span></span><span class="line"><span class="cl">│                   .─.              .   │ │                                   │
</span></span><span class="line"><span class="cl">│                  (   )◀───────────( )  │ │                                   │
</span></span><span class="line"><span class="cl">│                   `─&#39;              &#39;   │ │      ┌──────────────────────┐     │
</span></span><span class="line"><span class="cl">│  .       .─.       ╲             ◁     │ │      │ GNN Model Λ          │     │
</span></span><span class="line"><span class="cl">│ ( )◀────(   )       ╲           ╱      │ │  ┌───┴─┐        ╱ ╲      ┌──┴──┐  │
</span></span><span class="line"><span class="cl">│  &#39;       `─&#39;         ╲       . ╱       │ │  ├─────┤       ╱   ╲     ├─────┤  │
</span></span><span class="line"><span class="cl">│  ╲       ◀            ╲     ( )        │ └─▶├─────┼─────▶▕     ─────├─────┤──┘
</span></span><span class="line"><span class="cl">│   ╲  .  ╱              ◁     &#39;         │    ├─────┤       ╲   ╱     ├─────┤   
</span></span><span class="line"><span class="cl">│    ◀( )╱               .─.         .─. │    └───┬─┘        ╲ ╱      └──┬──┘   
</span></span><span class="line"><span class="cl">│      &#39;                (   )◀──────(   )│        │           V          │      
</span></span><span class="line"><span class="cl">│                        `─&#39;         `─&#39; │        └──────────────────────┘      
</span></span><span class="line"><span class="cl">└────────────────────────────────────────┘        
</span></span></code></pre></td></tr></table>
</div>
</div><p>现在，我们假设这个新的交易请求已经发起了，这条交易记录已经被更新在图谱里了，咱们随便取一个点作为这样的请求吧</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-graphql" data-lang="graphql"><span class="line"><span class="cl"><span class="py">MATCH</span><span class="w"> </span><span class="p">(</span><span class="py">n</span><span class="p">:</span><span class="nc">review</span><span class="p">)</span><span class="w"> </span><span class="py">RETURN</span><span class="w"> </span><span class="py">n</span><span class="w"> </span><span class="py">LIMIT</span><span class="w"> </span><span class="py">1</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-GRAPHQL" data-lang="GRAPHQL"><span class="line"><span class="cl"><span class="errspan><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">|</span><span class="w"> </span><span class="py">n</span><span class="wspan><span class="p">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="errspan><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">|</span><span class="w"> </span><span class="p">(</span><span class="py">2048</span><span class="w"> </span><span class="p">:</span><span class="nc">review</span><span class="p">{</span><span class="py">f0</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.0</span><span class="p">,</span><span class="w"> </span><span class="py">f1</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.08034700155258179</span><span class="p">,</span><span class="w"> </span><span class="py">f10</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.3952670097351074</span><span class="p">,</span><span class="w"> </span><span class="py">f11</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.18671999871730804</span><span class="p">,</span><span class="w"> </span><span class="py">f12</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.2836120128631592</span><span class="p">,</span><span class="w"> </span><span class="py">f13</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.2843089997768402</span><span class="p">,</span><span class="w"> </span><span class="py">f14</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.38148200511932373</span><span class="p">,</span><span class="w"> </span><span class="py">f15</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.3816460072994232</span><span class="p">,</span><span class="w"> </span><span class="py">f16</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.9999740123748779</span><span class="p">,</span><span class="w"> </span><span class="py">f17</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.6430919766426086</span><span class="p">,</span><span class="w"> </span><span class="py">f18</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.9999740123748779</span><span class="p">,</span><span class="w"> </span><span class="py">f19</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.5051100254058838</span><span class="p">,</span><span class="w"> </span><span class="py">f2</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.12382200360298157</span><span class="p">,</span><span class="w"> </span><span class="py">f20</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.4940490126609802</span><span class="p">,</span><span class="w"> </span><span class="py">f21</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.7766339778900146</span><span class="p">,</span><span class="w"> </span><span class="py">f22</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.7705119848251343</span><span class="p">,</span><span class="w"> </span><span class="py">f23</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.9480599761009216</span><span class="p">,</span><span class="w"> </span><span class="py">f24</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.4032529890537262</span><span class="p">,</span><span class="w"> </span><span class="py">f25</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.12437800318002701</span><span class="p">,</span><span class="w"> </span><span class="py">f26</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.3184080123901367</span><span class="p">,</span><span class="w"> </span><span class="py">f27</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.5223879814147949</span><span class="p">,</span><span class="w"> </span><span class="py">f28</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.4278610050678253</span><span class="p">,</span><span class="w"> </span><span class="py">f29</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.343284010887146</span><span class="p">,</span><span class="w"> </span><span class="py">f3</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.42868199944496155</span><span class="p">,</span><span class="w"> </span><span class="py">f30</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.37313398718833923</span><span class="p">,</span><span class="w"> </span><span class="py">f31</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.328357994556427</span><span class="p">,</span><span class="w"> </span><span class="py">f4</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.9999849796295166</span><span class="p">,</span><span class="w"> </span><span class="py">f5</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.9999849796295166</span><span class="p">,</span><span class="w"> </span><span class="py">f6</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.9999849796295166</span><span class="p">,</span><span class="w"> </span><span class="py">f7</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.4850809872150421</span><span class="p">,</span><span class="w"> </span><span class="py">f8</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.454602986574173</span><span class="p">,</span><span class="w"> </span><span class="py">f9</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="mf">.8863419890403748</span><span class="p">,</span><span class="w"> </span><span class="py">is_fraud</span><span class="p">:</span><span class="w"> </span><span class="nc">0</span><span class="p">})</span><span class="w"> </span><span class="p">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="errspan><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>好，它是 2048 这个点。它的下一步是 <code>1. Get New Record Subgraph</code> 我们来获取它的子图：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-SQL" data-lang="SQL"><span class="line"><span class="cl"><span class="k">GET</span><span class="w"> </span><span class="n">SUBGRAPH</span><span class="w"> </span><span class="k">WITH</span><span class="w"> </span><span class="n">PROP</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="mi">2048</span><span class="w"> </span><span class="n">YIELD</span><span class="w"> </span><span class="n">VERTICES</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">nodes</span><span class="p">,</span><span class="w"> </span><span class="n">EDGES</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">relationships</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>可以看到返回的结果其实还是很多的，不过对于 NebulaGraph 来说，这个子图结果返回是在 10 ms 左右获取的，这里我就不贴出来了，如果我们在 NebulaGraph Studio 或者 Explorer 中可以把结果渲染出来（可视化展示的 Query 可以去掉 <code>WITH PROP</code> ，可以给浏览器省点内存），结果就更容易让人脑理解了：</p>
<p><a class="lightgallery" href="./subgraph_console_view.webp" title="./subgraph_console_view.webp" data-thumbnail="./subgraph_console_view.webp">
        
    </a></p>
<p><a class="lightgallery" href="./subgraph_viz.webp" title="./subgraph_viz.webp" data-thumbnail="./subgraph_viz.webp">
        
    </a></p>
<p>现在我们就来实现这一步的代码吧，它的输入是点的 id：<code>vertex_id</code>。输出是一个 <code>dgl_graph</code>，用来传给推理接口。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># get SUBGRAPH of one node</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">json</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">torch</span> <span class="kn">import</span> <span class="n">tensor</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">dgl</span> <span class="kn">import</span> <span class="n">DGLHeteroGraph</span><span class="p">,</span> <span class="n">heterograph</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">nebula3.gclient.net</span> <span class="kn">import</span> <span class="n">ConnectionPool</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">nebula3.Config</span> <span class="kn">import</span> <span class="n">Config</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">config</span> <span class="o">=</span> <span class="n">Config</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">config</span><span class="o">.</span><span class="n">max_connection_pool_size</span> <span class="o">=</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl"><span class="n">connection_pool</span> <span class="o">=</span> <span class="n">ConnectionPool</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">connection_pool</span><span class="o">.</span><span class="n">init</span><span class="p">([(</span><span class="s1">&#39;graphd&#39;</span><span class="p">,</span> <span class="mi">9669</span><span class="p">)],</span> <span class="n">config</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">vertex_id</span> <span class="o">=</span> <span class="mi">2048</span>
</span></span><span class="line"><span class="cl"><span class="n">client</span> <span class="o">=</span> <span class="n">connection_pool</span><span class="o">.</span><span class="n">get_session</span><span class="p">(</span><span class="s1">&#39;root&#39;</span><span class="p">,</span> <span class="s1">&#39;nebula&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">r</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="n">execute_json</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;USE yelp;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="sa">f</span><span class="s2">&#34;GET SUBGRAPH WITH PROP 2 STEPS FROM </span><span class="si">{</span><span class="n">vertex_id</span><span class="si">}</span><span class="s2"> YIELD VERTICES AS nodes, EDGES AS relationships;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">r</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">loads</span><span class="p">(</span><span class="n">r</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">data</span> <span class="o">=</span> <span class="n">r</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;results&#39;</span><span class="p">,</span> <span class="p">[{}])[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;data&#39;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>这里我用到了 Nebula-Python 这个 NebulaGraph 的 Python SDK/Client，通过 <code>execute_json</code> 执行获得了这个交易的子图。下一步，咱们需要把它构造成一个 <code>dgl_graph</code>：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># create node and nodedata</span>
</span></span><span class="line"><span class="cl"><span class="n">node_id_map</span> <span class="o">=</span> <span class="p">{}</span> <span class="c1"># key: vertex id in NebulaGraph, value: node id in dgl_graph</span>
</span></span><span class="line"><span class="cl"><span class="n">node_idx</span> <span class="o">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl"><span class="n">features</span> <span class="o">=</span> <span class="p">[[]</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">32</span><span class="p">)]</span> <span class="o">+</span> <span class="p">[[]]</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">data</span><span class="p">)):</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">index</span><span class="p">,</span> <span class="n">node</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s1">&#39;meta&#39;</span><span class="p">][</span><span class="mi">0</span><span class="p">]):</span>
</span></span><span class="line"><span class="cl">        <span class="n">nodeid</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s1">&#39;meta&#39;</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="n">index</span><span class="p">][</span><span class="s1">&#39;id&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">nodeid</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">node_id_map</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">node_id_map</span><span class="p">[</span><span class="n">nodeid</span><span class="p">]</span> <span class="o">=</span> <span class="n">node_idx</span>
</span></span><span class="line"><span class="cl">            <span class="n">node_idx</span> <span class="o">+=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">            <span class="k">for</span> <span class="n">f</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">32</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">                <span class="n">features</span><span class="p">[</span><span class="n">f</span><span class="p">]</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s1">&#39;row&#39;</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="n">index</span><span class="p">][</span><span class="sa">f</span><span class="s2">&#34;review.f</span><span class="si">{</span><span class="n">f</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">            <span class="n">features</span><span class="p">[</span><span class="mi">32</span><span class="p">]</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s1">&#39;row&#39;</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="n">index</span><span class="p">][</span><span class="s1">&#39;review.is_fraud&#39;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="s2">&#34;&#34;&#34;
</span></span></span><span class="line"><span class="cl"><span class="s2">- R-U-R：两个评价由同一个用户发出 shares_user_with
</span></span></span><span class="line"><span class="cl"><span class="s2">- R-S-R：两个评价是同餐厅同评分（评分可以是1到5） shares_restaurant_rating_with
</span></span></span><span class="line"><span class="cl"><span class="s2">- R-T-R：两个评价是同餐厅同提交月份 shares_restaurant_in_one_month_with
</span></span></span><span class="line"><span class="cl"><span class="s2">&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">rur_start</span><span class="p">,</span> <span class="n">rur_end</span><span class="p">,</span> <span class="n">rsr_start</span><span class="p">,</span> <span class="n">rsr_end</span><span class="p">,</span> <span class="n">rtr_start</span><span class="p">,</span> <span class="n">rtr_end</span> <span class="o">=</span> <span class="p">[],</span> <span class="p">[],</span> <span class="p">[],</span> <span class="p">[],</span> <span class="p">[],</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">data</span><span class="p">)):</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">edge</span> <span class="ow">in</span> <span class="n">data</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s1">&#39;meta&#39;</span><span class="p">][</span><span class="mi">1</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">        <span class="n">edge</span> <span class="o">=</span> <span class="n">edge</span><span class="p">[</span><span class="s1">&#39;id&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">edge</span><span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;shares_user_with&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">rur_start</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">node_id_map</span><span class="p">[</span><span class="n">edge</span><span class="p">[</span><span class="s1">&#39;src&#39;</span><span class="p">]])</span>
</span></span><span class="line"><span class="cl">            <span class="n">rur_end</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">node_id_map</span><span class="p">[</span><span class="n">edge</span><span class="p">[</span><span class="s1">&#39;dst&#39;</span><span class="p">]])</span>
</span></span><span class="line"><span class="cl">        <span class="k">elif</span> <span class="n">edge</span><span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;shares_restaurant_rating_with&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">rsr_start</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">node_id_map</span><span class="p">[</span><span class="n">edge</span><span class="p">[</span><span class="s1">&#39;src&#39;</span><span class="p">]])</span>
</span></span><span class="line"><span class="cl">            <span class="n">rsr_end</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">node_id_map</span><span class="p">[</span><span class="n">edge</span><span class="p">[</span><span class="s1">&#39;dst&#39;</span><span class="p">]])</span>
</span></span><span class="line"><span class="cl">        <span class="k">elif</span> <span class="n">edge</span><span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;shares_restaurant_in_one_month_with&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">rtr_start</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">node_id_map</span><span class="p">[</span><span class="n">edge</span><span class="p">[</span><span class="s1">&#39;src&#39;</span><span class="p">]])</span>
</span></span><span class="line"><span class="cl">            <span class="n">rtr_end</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">node_id_map</span><span class="p">[</span><span class="n">edge</span><span class="p">[</span><span class="s1">&#39;dst&#39;</span><span class="p">]])</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">data_dict</span> <span class="o">=</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="n">rur_start</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">data_dict</span><span class="p">[(</span><span class="s1">&#39;review&#39;</span><span class="p">,</span> <span class="s1">&#39;shares_user_with&#39;</span><span class="p">,</span> <span class="s1">&#39;review&#39;</span><span class="p">)]</span> <span class="o">=</span> <span class="n">tensor</span><span class="p">(</span><span class="n">rur_start</span><span class="p">),</span> <span class="n">tensor</span><span class="p">(</span><span class="n">rur_end</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="n">rsr_start</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">data_dict</span><span class="p">[(</span><span class="s1">&#39;review&#39;</span><span class="p">,</span> <span class="s1">&#39;shares_restaurant_rating_with&#39;</span><span class="p">,</span> <span class="s1">&#39;review&#39;</span><span class="p">)]</span> <span class="o">=</span> <span class="n">tensor</span><span class="p">(</span><span class="n">rsr_start</span><span class="p">),</span> <span class="n">tensor</span><span class="p">(</span><span class="n">rsr_end</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="n">rtr_start</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">data_dict</span><span class="p">[(</span><span class="s1">&#39;review&#39;</span><span class="p">,</span> <span class="s1">&#39;shares_restaurant_in_one_month_with&#39;</span><span class="p">,</span> <span class="s1">&#39;review&#39;</span><span class="p">)]</span> <span class="o">=</span> <span class="n">tensor</span><span class="p">(</span><span class="n">rtr_start</span><span class="p">),</span> <span class="n">tensor</span><span class="p">(</span><span class="n">rtr_end</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># construct a dgl_graph</span>
</span></span><span class="line"><span class="cl"><span class="n">dgl_graph</span><span class="p">:</span> <span class="n">DGLHeteroGraph</span> <span class="o">=</span> <span class="n">heterograph</span><span class="p">(</span><span class="n">data_dict</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>实际上我就是按照 DGL 文档：https://docs.dgl.ai/en/0.9.x/generated/dgl.heterograph.html，中的方式去构造 <code>data_dict</code>，然后用 <code>heterograph()</code> 就把结果转换为想要的 dgl_graph 了，其中 <code>node_id_map</code> 是 NebulaGraph 之中 Vertex_ID 到这个对象中 node_id 的字典。</p>
<p>最后，我们再把 node feature 也加载进去。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># load node features to dgl_graph</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">32</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">dgl_graph</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="sa">f</span><span class="s2">&#34;f</span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="n">tensor</span><span class="p">(</span><span class="n">features</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
</span></span><span class="line"><span class="cl"><span class="n">dgl_graph</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;label&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">tensor</span><span class="p">(</span><span class="n">features</span><span class="p">[</span><span class="mi">32</span><span class="p">])</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>在开始推理之前，我们还需要把它转换成同构图，和前边完全一样：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">torch</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># to homogeneous graph</span>
</span></span><span class="line"><span class="cl"><span class="n">features</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">32</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">features</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">dgl_graph</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="sa">f</span><span class="s2">&#34;f</span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">dgl_graph</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;feat&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">stack</span><span class="p">(</span><span class="n">features</span><span class="p">,</span> <span class="n">dim</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">dgl_graph</span><span class="o">.</span><span class="n">edges</span><span class="p">[</span><span class="s1">&#39;shares_restaurant_in_one_month_with&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">data</span><span class="p">[</span><span class="s1">&#39;he&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">ones</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">dgl_graph</span><span class="o">.</span><span class="n">number_of_edges</span><span class="p">(</span><span class="s1">&#39;shares_restaurant_in_one_month_with&#39;</span><span class="p">),</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="o">.</span><span class="n">float32</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">dgl_graph</span><span class="o">.</span><span class="n">edges</span><span class="p">[</span><span class="s1">&#39;shares_restaurant_rating_with&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">data</span><span class="p">[</span><span class="s1">&#39;he&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">full</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="p">(</span><span class="n">dgl_graph</span><span class="o">.</span><span class="n">number_of_edges</span><span class="p">(</span><span class="s1">&#39;shares_restaurant_rating_with&#39;</span><span class="p">),),</span> <span class="mi">2</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="o">.</span><span class="n">float32</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">dgl_graph</span><span class="o">.</span><span class="n">edges</span><span class="p">[</span><span class="s1">&#39;shares_user_with&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">data</span><span class="p">[</span><span class="s1">&#39;he&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">full</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="p">(</span><span class="n">dgl_graph</span><span class="o">.</span><span class="n">number_of_edges</span><span class="p">(</span><span class="s1">&#39;shares_user_with&#39;</span><span class="p">),),</span> <span class="mi">4</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="o">.</span><span class="n">float32</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># heterogeneous graph to heterogeneous graph, keep ndata and edata</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">dgl</span>
</span></span><span class="line"><span class="cl"><span class="n">hg</span> <span class="o">=</span> <span class="n">dgl</span><span class="o">.</span><span class="n">to_homogeneous</span><span class="p">(</span><span class="n">dgl_graph</span><span class="p">,</span> <span class="n">edata</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;he&#39;</span><span class="p">],</span> <span class="n">ndata</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;feat&#39;</span><span class="p">,</span> <span class="s1">&#39;label&#39;</span><span class="p">])</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>最后，我们的推理接口就是：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">do_inference</span><span class="p">(</span><span class="n">device</span><span class="p">,</span> <span class="n">graph</span><span class="p">,</span> <span class="n">node_idx</span><span class="p">,</span> <span class="n">model</span><span class="p">,</span> <span class="n">batch_size</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">model</span><span class="o">.</span><span class="n">eval</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="k">with</span> <span class="n">torch</span><span class="o">.</span><span class="n">no_grad</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">        <span class="n">pred</span> <span class="o">=</span> <span class="n">model</span><span class="o">.</span><span class="n">inference</span><span class="p">(</span><span class="n">graph</span><span class="p">,</span> <span class="n">device</span><span class="p">,</span> <span class="n">batch_size</span><span class="p">)</span> <span class="c1"># pred in buffer_device</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">pred</span><span class="p">[</span><span class="n">node_idx</span><span class="p">]</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>我们可以调用一个一下试试推理我们这个新的点：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">node_idx</span> <span class="o">=</span> <span class="n">node_id_map</span><span class="p">[</span><span class="n">vertex_id</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">batch_size</span> <span class="o">=</span> <span class="mi">4096</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">result</span> <span class="o">=</span> <span class="n">do_inference</span><span class="p">(</span><span class="n">device</span><span class="p">,</span> <span class="n">hg</span><span class="p">,</span> <span class="n">node_idx</span><span class="p">,</span> <span class="n">model</span><span class="p">,</span> <span class="n">batch_size</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>当然，我们也能在这个小子图上计算他的正确率：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">test_inference</span><span class="p">(</span><span class="n">device</span><span class="p">,</span> <span class="n">graph</span><span class="p">,</span> <span class="n">nid</span><span class="p">,</span> <span class="n">model</span><span class="p">,</span> <span class="n">batch_size</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">model</span><span class="o">.</span><span class="n">eval</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="k">with</span> <span class="n">torch</span><span class="o">.</span><span class="n">no_grad</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">        <span class="n">pred</span> <span class="o">=</span> <span class="n">model</span><span class="o">.</span><span class="n">inference</span><span class="p">(</span><span class="n">graph</span><span class="p">,</span> <span class="n">device</span><span class="p">,</span> <span class="n">batch_size</span><span class="p">)</span> <span class="c1"># pred in buffer_device</span>
</span></span><span class="line"><span class="cl">        <span class="n">pred</span> <span class="o">=</span> <span class="n">pred</span><span class="p">[</span><span class="n">nid</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="n">label</span> <span class="o">=</span> <span class="n">graph</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;label&#39;</span><span class="p">][</span><span class="n">nid</span><span class="p">]</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="n">pred</span><span class="o">.</span><span class="n">device</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">MF</span><span class="o">.</span><span class="n">accuracy</span><span class="p">(</span><span class="n">pred</span><span class="p">,</span> <span class="n">label</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">node_idx</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">tensor</span><span class="p">(</span><span class="nb">list</span><span class="p">(</span><span class="n">node_id_map</span><span class="o">.</span><span class="n">values</span><span class="p">()))</span>
</span></span><span class="line"><span class="cl"><span class="n">acc</span> <span class="o">=</span> <span class="n">test_inference</span><span class="p">(</span><span class="n">device</span><span class="p">,</span> <span class="n">hg</span><span class="p">,</span> <span class="n">node_idx</span><span class="p">,</span> <span class="n">model</span><span class="p">,</span> <span class="n">batch_size</span><span class="o">=</span><span class="mi">4096</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;Test Accuracy </span><span class="si">{:.4f}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">acc</span><span class="o">.</span><span class="n">item</span><span class="p">()))</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>输出结果：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">In</span> <span class="p">[</span><span class="mi">307</span><span class="p">]:</span> <span class="k">def</span> <span class="nf">test_inference</span><span class="p">(</span><span class="n">device</span><span class="p">,</span> <span class="n">graph</span><span class="p">,</span> <span class="n">nid</span><span class="p">,</span> <span class="n">model</span><span class="p">,</span> <span class="n">batch_size</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">     <span class="o">...</span><span class="p">:</span>     <span class="n">model</span><span class="o">.</span><span class="n">eval</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">     <span class="o">...</span><span class="p">:</span>     <span class="k">with</span> <span class="n">torch</span><span class="o">.</span><span class="n">no_grad</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">     <span class="o">...</span><span class="p">:</span>         <span class="n">pred</span> <span class="o">=</span> <span class="n">model</span><span class="o">.</span><span class="n">inference</span><span class="p">(</span><span class="n">graph</span><span class="p">,</span> <span class="n">device</span><span class="p">,</span> <span class="n">batch_size</span><span class="p">)</span> <span class="c1"># pred in buffer</span>
</span></span><span class="line"><span class="cl">     <span class="o">...</span><span class="p">:</span> <span class="n">_device</span>
</span></span><span class="line"><span class="cl">     <span class="o">...</span><span class="p">:</span>         <span class="n">pred</span> <span class="o">=</span> <span class="n">pred</span><span class="p">[</span><span class="n">nid</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">     <span class="o">...</span><span class="p">:</span>         <span class="n">label</span> <span class="o">=</span> <span class="n">graph</span><span class="o">.</span><span class="n">ndata</span><span class="p">[</span><span class="s1">&#39;label&#39;</span><span class="p">][</span><span class="n">nid</span><span class="p">]</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="n">pred</span><span class="o">.</span><span class="n">device</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">     <span class="o">...</span><span class="p">:</span>         <span class="k">return</span> <span class="n">MF</span><span class="o">.</span><span class="n">accuracy</span><span class="p">(</span><span class="n">pred</span><span class="p">,</span> <span class="n">label</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">     <span class="o">...</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">     <span class="o">...</span><span class="p">:</span> <span class="n">node_idx</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">tensor</span><span class="p">(</span><span class="nb">list</span><span class="p">(</span><span class="n">node_id_map</span><span class="o">.</span><span class="n">values</span><span class="p">()))</span>
</span></span><span class="line"><span class="cl">     <span class="o">...</span><span class="p">:</span> <span class="n">acc</span> <span class="o">=</span> <span class="n">test_inference</span><span class="p">(</span><span class="n">device</span><span class="p">,</span> <span class="n">hg</span><span class="p">,</span> <span class="n">node_idx</span><span class="p">,</span> <span class="n">model</span><span class="p">,</span> <span class="n">batch_size</span><span class="o">=</span><span class="mi">4096</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">     <span class="o">...</span><span class="p">:</span> <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;Test Accuracy </span><span class="si">{:.4f}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">acc</span><span class="o">.</span><span class="n">item</span><span class="p">()))</span>
</span></span><span class="line"><span class="cl">     <span class="o">...</span><span class="p">:</span>
</span></span><span class="line"><span class="cl"><span class="mi">100</span><span class="o">%|</span><span class="err">████████████████████████████████████████████████</span><span class="o">|</span> <span class="mi">1</span><span class="o">/</span><span class="mi">1</span> <span class="p">[</span><span class="mi">00</span><span class="p">:</span><span class="mi">00</span><span class="o">&lt;</span><span class="mi">00</span><span class="p">:</span><span class="mi">00</span><span class="p">,</span> <span class="mf">130.31</span><span class="n">it</span><span class="o">/</span><span class="n">s</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="mi">100</span><span class="o">%|</span><span class="err">████████████████████████████████████████████████</span><span class="o">|</span> <span class="mi">1</span><span class="o">/</span><span class="mi">1</span> <span class="p">[</span><span class="mi">00</span><span class="p">:</span><span class="mi">00</span><span class="o">&lt;</span><span class="mi">00</span><span class="p">:</span><span class="mi">00</span><span class="p">,</span> <span class="mf">152.29</span><span class="n">it</span><span class="o">/</span><span class="n">s</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="mi">100</span><span class="o">%|</span><span class="err">████████████████████████████████████████████████</span><span class="o">|</span> <span class="mi">1</span><span class="o">/</span><span class="mi">1</span> <span class="p">[</span><span class="mi">00</span><span class="p">:</span><span class="mi">00</span><span class="o">&lt;</span><span class="mi">00</span><span class="p">:</span><span class="mi">00</span><span class="p">,</span> <span class="mf">173.55</span><span class="n">it</span><span class="o">/</span><span class="n">s</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">Test</span> <span class="n">Accuracy</span> <span class="mf">0.9688</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>这个示例项目的代码在：<a href="https://github.com/wey-gu/NebulaGraph-Fraud-Detection-GNN" target="_blank" rel="noopener noreffer">github.com/wey-gu/NebulaGraph-Fraud-Detection-GNN</a> ，如有问题欢迎留言、ISSUE。</p>
<h3 id="总结" class="headerLink">
    <a href="#%e6%80%bb%e7%bb%93" class="header-mark"></a>1.6 总结</h3><p>总结起来，欺诈检测的方法有：</p>
<ul>
<li>在一个交易历史、风控的图谱上，通过图模式查询直接获得风险提示</li>
<li>定期利用图算法扩充风险标注，写回图库</li>
<li>定期计算图谱中的图特征，和其他特征一起用传统机器学习方法离线预测风险</li>
<li>将图谱中的属性处理成为点、边特征，用图神经网络方法离线预测风险，部分可以 Inductive Learning 的方法结合图库可以实现在线风险预测</li>
</ul>
<blockquote>
<p>Feature Image credit goes to <a href="https://unsplash.com/photos/BW0vK-FA3eg" target="_blank" rel="noopener noreffer">https://unsplash.com/photos/BW0vK-FA3eg</a></p>
</blockquote>]]></description>
</item><item>
    <title>一文了解 Nebula Graph 上的 Spark 项目</title>
    <link>https://siwei.io/spark-on-nebula-graph/</link>
    <pubDate>Mon, 06 Jun 2022 10:19:11 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/spark-on-nebula-graph/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/spark-on-nebula-graph/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p>Nebula Graph 生态中有哪些 Spark 项目？ 本文为大家介绍 Spark-connector（包括 PySpark）， Nebula Algorithm 和 Nebula Exchange。</p>
</blockquote>
<p>最近我试着搭建了方便大家一键试玩的 Nebula Graph 中的 <a href="https://spark.apache.org/" target="_blank" rel="noopener noreffer">Spark</a> 相关的项目，今天就把它们整理成文分享给大家。而且，我趟出来了 PySpark 下的 Nebula Spark Connector 的使用方式，后边也会一并贡献到文档里。</p>
<h2 id="nebula-graph-的三个-spark-子项目" class="headerLink">
    <a href="#nebula-graph-%e7%9a%84%e4%b8%89%e4%b8%aa-spark-%e5%ad%90%e9%a1%b9%e7%9b%ae" class="header-mark"></a>1 Nebula Graph 的三个 Spark 子项目</h2><p>我曾经围绕 Nebula Graph 的所有数据导入方法画过一个<a href="https://www.siwei.io/sketches/nebula-data-import-options/" target="_blank" rel="noopener noreffer">草图</a>，其中已经包含了 Spark Connector，Nebula Exchange 的简单介绍。在这篇文章中我将它们和另外的 Nebula Algorithm 进行稍微深入的探讨。</p>
<p>TL;DR</p>
<ul>
<li>Nebula Spark Connector 是一个 Spark Lib，它能让 Spark 应用程序能够以 <code>dataframe</code> 的形式从 Nebula Graph 中读取和写入图数据。</li>
<li>Nebula Exchange 建立在 Nebula Spark Connector 之上，作为一个 Spark Lib 同时可以直接被 Spark 提交 JAR 包执行的应用程序，它的设计目标是和 Nebula Graph 交换不同的数据源（对于开源版本，它是单向的：写入，而对于企业版本，它是双向的）。Nebula Exchange 支持的很多不同类型的数据源如：<a href="https://www.mysql.com/cn/" target="_blank" rel="noopener noreffer">MySQL</a>、<a href="https://neo4j.com/" target="_blank" rel="noopener noreffer">Neo4j</a>、<a href="https://www.postgresql.org/" target="_blank" rel="noopener noreffer">PostgreSQL</a>、<a href="https://clickhouse.com/" target="_blank" rel="noopener noreffer">ClickHouse</a>、<a href="https://hive.apache.org/" target="_blank" rel="noopener noreffer">Hive</a> 等。除了直接写入 Nebula Graph，它还可以选择生成 SST 文件，并将其注入 Nebula Graph，以便使用 Nebula Graph 集群之外算力帮助排序底层。</li>
<li>Nebula Algorithm，建立在 Nebula Spark Connector 和 GraphX 之上，也是一个Spark Lib 和 Spark 上的应用程序，它用来在 Nebula Graph 的图上运行常用的图算法（pagerank，LPA等）。</li>
</ul>
<h2 id="nebula-spark-connector" class="headerLink">
    <a href="#nebula-spark-connector" class="header-mark"></a>2 Nebula Spark Connector</h2><ul>
<li>代码：https://github.com/vesoft-inc/nebula-spark-connector</li>
<li>文档：https://docs.nebula-graph.io/3.1.0/nebula-spark-connector/</li>
<li>JAR 包：https://repo1.maven.org/maven2/com/vesoft/nebula-spark-connector/</li>
<li>代码例子：<a href="https://github.com/vesoft-inc/nebula-spark-connector/tree/master/example" target="_blank" rel="noopener noreffer">example</a></li>
</ul>
<h3 id="nebula-graph-spark-reader" class="headerLink">
    <a href="#nebula-graph-spark-reader" class="header-mark"></a>2.1 Nebula Graph Spark Reader</h3><p>为了从 Nebula Graph 中读取数据，比如读 vertex，Nebula Spark Connector 将扫描所有带有给定 TAG 的 Nebula StorageD，比如这样表示扫描 <code>player</code> 这个 TAG ：<code>withLabel(&quot;player&quot;)</code>，我们还可以指定 vertex 的属性：<code>withReturnCols(List(&quot;name&quot;, &quot;age&quot;))</code>。</p>
<p>指定好所有的读 TAG 相关的配置之后，调用 <code>spark.read.nebula.loadVerticesToDF</code> 返回得到的就是扫描 Nebula Graph 之后转换为 Dataframe 的图数据，像这样：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-scala" data-lang="scala"><span class="line"><span class="cl">  <span class="k">def</span> <span class="n">readVertex</span><span class="o">(</span><span class="n">spark</span><span class="k">:</span> <span class="kt">SparkSession</span><span class="o">)</span><span class="k">:</span> <span class="kt">Unit</span> <span class="o">=</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="nc">LOG</span><span class="o">.</span><span class="n">info</span><span class="o">(</span><span class="s">&#34;start to read nebula vertices&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">val</span> <span class="n">config</span> <span class="k">=</span>
</span></span><span class="line"><span class="cl">      <span class="nc">NebulaConnectionConfig</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span><span class="n">builder</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span><span class="n">withMetaAddress</span><span class="o">(</span><span class="s">&#34;metad0:9559,metad1:9559,metad2:9559&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span><span class="n">withConenctionRetry</span><span class="o">(</span><span class="mi">2</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span><span class="n">build</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="k">val</span> <span class="n">nebulaReadVertexConfig</span><span class="k">:</span> <span class="kt">ReadNebulaConfig</span> <span class="o">=</span> <span class="nc">ReadNebulaConfig</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">builder</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withSpace</span><span class="o">(</span><span class="s">&#34;basketballplayer&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withLabel</span><span class="o">(</span><span class="s">&#34;player&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withNoColumn</span><span class="o">(</span><span class="kc">false</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withReturnCols</span><span class="o">(</span><span class="nc">List</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;age&#34;</span><span class="o">))</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withLimit</span><span class="o">(</span><span class="mi">10</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withPartitionNum</span><span class="o">(</span><span class="mi">10</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">build</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="k">val</span> <span class="n">vertex</span> <span class="k">=</span> <span class="n">spark</span><span class="o">.</span><span class="n">read</span><span class="o">.</span><span class="n">nebula</span><span class="o">(</span><span class="n">config</span><span class="o">,</span> <span class="n">nebulaReadVertexConfig</span><span class="o">).</span><span class="n">loadVerticesToDF</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">vertex</span><span class="o">.</span><span class="n">printSchema</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">vertex</span><span class="o">.</span><span class="n">show</span><span class="o">(</span><span class="mi">20</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">println</span><span class="o">(</span><span class="s">&#34;vertex count: &#34;</span> <span class="o">+</span> <span class="n">vertex</span><span class="o">.</span><span class="n">count</span><span class="o">())</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>写入的例子我这里不列出，不过，前边给出的代码示例的链接里是有更详细的例子，这里值得一提的是，<strong>Spark Connector 读数据为了满足图分析、图计算的大量数据场景</strong>，和大部分其他客户端非常不同，它直接绕过了 GraphD，通过扫描 MetaD 和 StorageD 获得数据，但是写入的情况则是通过 GraphD 发起 nGQL DML 语句写入的。</p>
<p>接下来我们来做一个上手练习吧。</p>
<h3 id="上手-nebula-spark-connector" class="headerLink">
    <a href="#%e4%b8%8a%e6%89%8b-nebula-spark-connector" class="header-mark"></a>2.2 上手 Nebula Spark Connector</h3><p>先决条件：假设下面的程序是在一台有互联网连接的 Linux 机器上运行的，最好是预装了 Docker 和 Docker-Compose。</p>
<h4 id="拉起环境" class="headerLink">
    <a href="#%e6%8b%89%e8%b5%b7%e7%8e%af%e5%a2%83" class="header-mark"></a>2.2.1 拉起环境</h4><p>首先，让我们用 <a href="https://github.com/wey-gu/nebula-up/" target="_blank" rel="noopener noreffer">Nebula-Up</a> 部署基于容器的 Nebula Graph Core v3、Nebula Studio、Nebula Console 和 Spark、Hadoop 环境，如果还没安装好它也会尝试为我们安装 Docker 和 Docker-Compose。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Install Core with Spark Connector, Nebula Algorithm, Nebula Exchange</span>
</span></span><span class="line"><span class="cl">curl -fsSL nebula-up.siwei.io/all-in-one.sh <span class="p">|</span> bash -s -- v3 spark
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>你知道吗 <a href="https://github.com/wey-gu/nebula-up/" target="_blank" rel="noopener noreffer">Nebula-UP</a> 可以一键装更多东西，如果你的环境配置大一点（比如 8 GB RAM）<code>curl -fsSL nebula-up.siwei.io/all-in-one.sh | bash</code> 可以装更多东西，但是请注意 <a href="https://github.com/wey-gu/nebula-up/" target="_blank" rel="noopener noreffer">Nebula-UP</a> 不是为生产环境准备的。</p>
</blockquote>
<p>上述边脚本执行后，让我们用 <a href="https://docs.nebula-graph.com.cn/3.1.0/nebula-console/" target="_blank" rel="noopener noreffer">Nebula-Console</a>（Nebula Graph 的命令行客户端）来连接它。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Connect to nebula with console</span>
</span></span><span class="line"><span class="cl">~/.nebula-up/console.sh
</span></span><span class="line"><span class="cl"><span class="c1"># Execute any queryies like</span>
</span></span><span class="line"><span class="cl">~/.nebula-up/console.sh -e <span class="s2">&#34;SHOW HOSTS&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>加载一份数据进去，并执行一个图查询：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Load the sample dataset</span>
</span></span><span class="line"><span class="cl">~/.nebula-up/load-basketballplayer-dataset.sh
</span></span><span class="line"><span class="cl"><span class="c1"># 等一分钟左右</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Make a Graph Query the sample dataset</span>
</span></span><span class="line"><span class="cl">~/.nebula-up/console.sh -e <span class="s1">&#39;USE basketballplayer; FIND ALL PATH FROM &#34;player100&#34; TO &#34;team204&#34; OVER * WHERE follow.degree is EMPTY or follow.degree &gt;=0 YIELD path AS p;&#39;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="进入-spark-环境" class="headerLink">
    <a href="#%e8%bf%9b%e5%85%a5-spark-%e7%8e%af%e5%a2%83" class="header-mark"></a>2.2.2 进入 Spark 环境</h4><p>执行下面这一行，我们就可以进入到 Spark 环境：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker <span class="nb">exec</span> -it sparkmaster bash
</span></span></code></pre></td></tr></table>
</div>
</div><p>如果我们想执行编译，可以在里边安装 <code>mvn</code>：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker <span class="nb">exec</span> -it sparkmaster bash
</span></span><span class="line"><span class="cl"><span class="c1"># in the container shell</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">MAVEN_VERSION</span><span class="o">=</span>3.5.4
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">MAVEN_HOME</span><span class="o">=</span>/usr/lib/mvn
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">PATH</span><span class="o">=</span><span class="nv">$MAVEN_HOME</span>/bin:<span class="nv">$PATH</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">wget http://archive.apache.org/dist/maven/maven-3/<span class="nv">$MAVEN_VERSION</span>/binaries/apache-maven-<span class="nv">$MAVEN_VERSION</span>-bin.tar.gz <span class="o">&amp;&amp;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  tar -zxvf apache-maven-<span class="nv">$MAVEN_VERSION</span>-bin.tar.gz <span class="o">&amp;&amp;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  rm apache-maven-<span class="nv">$MAVEN_VERSION</span>-bin.tar.gz <span class="o">&amp;&amp;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  mv apache-maven-<span class="nv">$MAVEN_VERSION</span> /usr/lib/mvn
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="跑-spark-connector-的例子" class="headerLink">
    <a href="#%e8%b7%91-spark-connector-%e7%9a%84%e4%be%8b%e5%ad%90" class="header-mark"></a>2.2.3 跑 Spark Connector 的例子</h4><h5 id="选项-1推荐通过-pyspark" class="headerLink">
    <a href="#%e9%80%89%e9%a1%b9-1%e6%8e%a8%e8%8d%90%e9%80%9a%e8%bf%87-pyspark" class="header-mark"></a>2.2.3.1 选项 1（推荐）：通过 PySpark</h5><ul>
<li>进入 PySpark Shell</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">~/.nebula-up/nebula-pyspark.sh
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>调用 Nebula Spark Reader</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># call Nebula Spark Connector Reader</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span> <span class="o">=</span> <span class="n">spark</span><span class="o">.</span><span class="n">read</span><span class="o">.</span><span class="n">format</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;com.vesoft.nebula.connector.NebulaDataSource&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">option</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;type&#34;</span><span class="p">,</span> <span class="s2">&#34;vertex&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">option</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;spaceName&#34;</span><span class="p">,</span> <span class="s2">&#34;basketballplayer&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">option</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;label&#34;</span><span class="p">,</span> <span class="s2">&#34;player&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">option</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;returnCols&#34;</span><span class="p">,</span> <span class="s2">&#34;name,age&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">option</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;metaAddress&#34;</span><span class="p">,</span> <span class="s2">&#34;metad0:9559&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">option</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;partitionNumber&#34;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">load</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># show the dataframe with limit of 2</span>
</span></span><span class="line"><span class="cl"><span class="n">df</span><span class="o">.</span><span class="n">show</span><span class="p">(</span><span class="n">n</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>返回结果例子</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">      <span class="n">____</span>              <span class="n">__</span>
</span></span><span class="line"><span class="cl">     <span class="o">/</span> <span class="n">__</span><span class="o">/</span><span class="n">__</span>  <span class="n">___</span> <span class="n">_____</span><span class="o">/</span> <span class="o">/</span><span class="n">__</span>
</span></span><span class="line"><span class="cl">    <span class="n">_</span>\ \<span class="o">/</span> <span class="n">_</span> \<span class="o">/</span> <span class="n">_</span> <span class="err">`</span><span class="o">/</span> <span class="n">__</span><span class="o">/</span>  <span class="s1">&#39;_/</span>
</span></span><span class="line"><span class="cl">   <span class="o">/</span><span class="n">__</span> <span class="o">/</span> <span class="o">.</span><span class="n">__</span><span class="o">/</span>\<span class="n">_</span><span class="p">,</span><span class="n">_</span><span class="o">/</span><span class="n">_</span><span class="o">/</span> <span class="o">/</span><span class="n">_</span><span class="o">/</span>\<span class="n">_</span>\   <span class="n">version</span> <span class="mf">2.4.5</span>
</span></span><span class="line"><span class="cl">      <span class="o">/</span><span class="n">_</span><span class="o">/</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Using</span> <span class="n">Python</span> <span class="n">version</span> <span class="mf">2.7.16</span> <span class="p">(</span><span class="n">default</span><span class="p">,</span> <span class="n">Jan</span> <span class="mi">14</span> <span class="mi">2020</span> <span class="mi">07</span><span class="p">:</span><span class="mi">22</span><span class="p">:</span><span class="mi">06</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">SparkSession</span> <span class="n">available</span> <span class="k">as</span> <span class="s1">&#39;spark&#39;</span><span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="o">&gt;&gt;&gt;</span> <span class="n">df</span> <span class="o">=</span> <span class="n">spark</span><span class="o">.</span><span class="n">read</span><span class="o">.</span><span class="n">format</span><span class="p">(</span>
</span></span><span class="line"><span class="cl"><span class="o">...</span>   <span class="s2">&#34;com.vesoft.nebula.connector.NebulaDataSource&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">option</span><span class="p">(</span>
</span></span><span class="line"><span class="cl"><span class="o">...</span>     <span class="s2">&#34;type&#34;</span><span class="p">,</span> <span class="s2">&#34;vertex&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">option</span><span class="p">(</span>
</span></span><span class="line"><span class="cl"><span class="o">...</span>     <span class="s2">&#34;spaceName&#34;</span><span class="p">,</span> <span class="s2">&#34;basketballplayer&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">option</span><span class="p">(</span>
</span></span><span class="line"><span class="cl"><span class="o">...</span>     <span class="s2">&#34;label&#34;</span><span class="p">,</span> <span class="s2">&#34;player&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">option</span><span class="p">(</span>
</span></span><span class="line"><span class="cl"><span class="o">...</span>     <span class="s2">&#34;returnCols&#34;</span><span class="p">,</span> <span class="s2">&#34;name,age&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">option</span><span class="p">(</span>
</span></span><span class="line"><span class="cl"><span class="o">...</span>     <span class="s2">&#34;metaAddress&#34;</span><span class="p">,</span> <span class="s2">&#34;metad0:9559&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">option</span><span class="p">(</span>
</span></span><span class="line"><span class="cl"><span class="o">...</span>     <span class="s2">&#34;partitionNumber&#34;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">load</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="o">.</span><span class="n">show</span><span class="p">(</span><span class="n">n</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="o">+---------+--------------+---+</span>
</span></span><span class="line"><span class="cl"><span class="o">|</span><span class="n">_vertexId</span><span class="o">|</span>          <span class="n">name</span><span class="o">|</span><span class="n">age</span><span class="o">|</span>
</span></span><span class="line"><span class="cl"><span class="o">+---------+--------------+---+</span>
</span></span><span class="line"><span class="cl"><span class="o">|</span><span class="n">player105</span><span class="o">|</span>   <span class="n">Danny</span> <span class="n">Green</span><span class="o">|</span> <span class="mi">31</span><span class="o">|</span>
</span></span><span class="line"><span class="cl"><span class="o">|</span><span class="n">player109</span><span class="o">|</span><span class="n">Tiago</span> <span class="n">Splitter</span><span class="o">|</span> <span class="mi">34</span><span class="o">|</span>
</span></span><span class="line"><span class="cl"><span class="o">+---------+--------------+---+</span>
</span></span><span class="line"><span class="cl"><span class="n">only</span> <span class="n">showing</span> <span class="n">top</span> <span class="mi">2</span> <span class="n">rows</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="选项-2编译提交示例-jar-包" class="headerLink">
    <a href="#%e9%80%89%e9%a1%b9-2%e7%bc%96%e8%af%91%e6%8f%90%e4%ba%a4%e7%a4%ba%e4%be%8b-jar-%e5%8c%85" class="header-mark"></a>2.2.3.2 选项 2：编译、提交示例 JAR 包</h5><ul>
<li>先克隆 Spark Connector 和它示例代码的代码仓库，然后编译：</li>
</ul>
<blockquote>
<p>注意，我们使用了 master 分支，因为当下 master 分支是兼容 3.x 的，一定要保证 spark connector 和数据库内核版本是匹配的，版本对应关系参考代码仓库的 <code>README.md</code> 。</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> ~/.nebula-up/nebula-up/spark
</span></span><span class="line"><span class="cl">git clone https://github.com/vesoft-inc/nebula-spark-connector.git
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">docker <span class="nb">exec</span> -it sparkmaster bash
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> /root/nebula-spark-connector
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>替换示例项目的代码</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">echo</span> &gt; example/src/main/scala/com/vesoft/nebula/examples/connector/NebulaSparkReaderExample.scala
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">vi example/src/main/scala/com/vesoft/nebula/examples/connector/NebulaSparkReaderExample.scala
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>把如下的代码粘贴进去，这里边我们对前边加载的图： <code>basketballplayer</code> 上做了顶点和边的读操作：分别调用 <code>readVertex</code> 和 <code>readEdges</code>。</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-scala" data-lang="scala"><span class="line"><span class="cl"><span class="k">package</span> <span class="nn">com.vesoft.nebula.examples.connector</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">import</span> <span class="nn">com.facebook.thrift.protocol.TCompactProtocol</span>
</span></span><span class="line"><span class="cl"><span class="k">import</span> <span class="nn">com.vesoft.nebula.connector.connector.NebulaDataFrameReader</span>
</span></span><span class="line"><span class="cl"><span class="k">import</span> <span class="nn">com.vesoft.nebula.connector.</span><span class="o">{</span><span class="nc">NebulaConnectionConfig</span><span class="o">,</span> <span class="nc">ReadNebulaConfig</span><span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="k">import</span> <span class="nn">org.apache.spark.SparkConf</span>
</span></span><span class="line"><span class="cl"><span class="k">import</span> <span class="nn">org.apache.spark.sql.SparkSession</span>
</span></span><span class="line"><span class="cl"><span class="k">import</span> <span class="nn">org.slf4j.LoggerFactory</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">object</span> <span class="nc">NebulaSparkReaderExample</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">private</span> <span class="k">val</span> <span class="nc">LOG</span> <span class="k">=</span> <span class="nc">LoggerFactory</span><span class="o">.</span><span class="n">getLogger</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="n">getClass</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">def</span> <span class="n">main</span><span class="o">(</span><span class="n">args</span><span class="k">:</span> <span class="kt">Array</span><span class="o">[</span><span class="kt">String</span><span class="o">])</span><span class="k">:</span> <span class="kt">Unit</span> <span class="o">=</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">val</span> <span class="n">sparkConf</span> <span class="k">=</span> <span class="k">new</span> <span class="nc">SparkConf</span>
</span></span><span class="line"><span class="cl">    <span class="n">sparkConf</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">set</span><span class="o">(</span><span class="s">&#34;spark.serializer&#34;</span><span class="o">,</span> <span class="s">&#34;org.apache.spark.serializer.KryoSerializer&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">registerKryoClasses</span><span class="o">(</span><span class="nc">Array</span><span class="o">[</span><span class="kt">Class</span><span class="o">[</span><span class="k">_</span><span class="o">]](</span><span class="n">classOf</span><span class="o">[</span><span class="kt">TCompactProtocol</span><span class="o">]))</span>
</span></span><span class="line"><span class="cl">    <span class="k">val</span> <span class="n">spark</span> <span class="k">=</span> <span class="nc">SparkSession</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">builder</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">master</span><span class="o">(</span><span class="s">&#34;local&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">config</span><span class="o">(</span><span class="n">sparkConf</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">getOrCreate</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">readVertex</span><span class="o">(</span><span class="n">spark</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">readEdges</span><span class="o">(</span><span class="n">spark</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">spark</span><span class="o">.</span><span class="n">close</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">def</span> <span class="n">readVertex</span><span class="o">(</span><span class="n">spark</span><span class="k">:</span> <span class="kt">SparkSession</span><span class="o">)</span><span class="k">:</span> <span class="kt">Unit</span> <span class="o">=</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="nc">LOG</span><span class="o">.</span><span class="n">info</span><span class="o">(</span><span class="s">&#34;start to read nebula vertices&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">val</span> <span class="n">config</span> <span class="k">=</span>
</span></span><span class="line"><span class="cl">      <span class="nc">NebulaConnectionConfig</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span><span class="n">builder</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span><span class="n">withMetaAddress</span><span class="o">(</span><span class="s">&#34;metad0:9559,metad1:9559,metad2:9559&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span><span class="n">withConenctionRetry</span><span class="o">(</span><span class="mi">2</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span><span class="n">build</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="k">val</span> <span class="n">nebulaReadVertexConfig</span><span class="k">:</span> <span class="kt">ReadNebulaConfig</span> <span class="o">=</span> <span class="nc">ReadNebulaConfig</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">builder</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withSpace</span><span class="o">(</span><span class="s">&#34;basketballplayer&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withLabel</span><span class="o">(</span><span class="s">&#34;player&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withNoColumn</span><span class="o">(</span><span class="kc">false</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withReturnCols</span><span class="o">(</span><span class="nc">List</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;age&#34;</span><span class="o">))</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withLimit</span><span class="o">(</span><span class="mi">10</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withPartitionNum</span><span class="o">(</span><span class="mi">10</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">build</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="k">val</span> <span class="n">vertex</span> <span class="k">=</span> <span class="n">spark</span><span class="o">.</span><span class="n">read</span><span class="o">.</span><span class="n">nebula</span><span class="o">(</span><span class="n">config</span><span class="o">,</span> <span class="n">nebulaReadVertexConfig</span><span class="o">).</span><span class="n">loadVerticesToDF</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">vertex</span><span class="o">.</span><span class="n">printSchema</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">vertex</span><span class="o">.</span><span class="n">show</span><span class="o">(</span><span class="mi">20</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">println</span><span class="o">(</span><span class="s">&#34;vertex count: &#34;</span> <span class="o">+</span> <span class="n">vertex</span><span class="o">.</span><span class="n">count</span><span class="o">())</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">def</span> <span class="n">readEdges</span><span class="o">(</span><span class="n">spark</span><span class="k">:</span> <span class="kt">SparkSession</span><span class="o">)</span><span class="k">:</span> <span class="kt">Unit</span> <span class="o">=</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="nc">LOG</span><span class="o">.</span><span class="n">info</span><span class="o">(</span><span class="s">&#34;start to read nebula edges&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">val</span> <span class="n">config</span> <span class="k">=</span>
</span></span><span class="line"><span class="cl">      <span class="nc">NebulaConnectionConfig</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span><span class="n">builder</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span><span class="n">withMetaAddress</span><span class="o">(</span><span class="s">&#34;metad0:9559,metad1:9559,metad2:9559&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span><span class="n">withTimeout</span><span class="o">(</span><span class="mi">6000</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span><span class="n">withConenctionRetry</span><span class="o">(</span><span class="mi">2</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span><span class="n">build</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="k">val</span> <span class="n">nebulaReadEdgeConfig</span><span class="k">:</span> <span class="kt">ReadNebulaConfig</span> <span class="o">=</span> <span class="nc">ReadNebulaConfig</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">builder</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withSpace</span><span class="o">(</span><span class="s">&#34;basketballplayer&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withLabel</span><span class="o">(</span><span class="s">&#34;follow&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withNoColumn</span><span class="o">(</span><span class="kc">false</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withReturnCols</span><span class="o">(</span><span class="nc">List</span><span class="o">(</span><span class="s">&#34;degree&#34;</span><span class="o">))</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withLimit</span><span class="o">(</span><span class="mi">10</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">withPartitionNum</span><span class="o">(</span><span class="mi">10</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">      <span class="o">.</span><span class="n">build</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="k">val</span> <span class="n">edge</span> <span class="k">=</span> <span class="n">spark</span><span class="o">.</span><span class="n">read</span><span class="o">.</span><span class="n">nebula</span><span class="o">(</span><span class="n">config</span><span class="o">,</span> <span class="n">nebulaReadEdgeConfig</span><span class="o">).</span><span class="n">loadEdgesToDF</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">edge</span><span class="o">.</span><span class="n">printSchema</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">edge</span><span class="o">.</span><span class="n">show</span><span class="o">(</span><span class="mi">20</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">println</span><span class="o">(</span><span class="s">&#34;edge count: &#34;</span> <span class="o">+</span> <span class="n">edge</span><span class="o">.</span><span class="n">count</span><span class="o">())</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>然后打包成 JAR 包</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">/usr/lib/mvn/bin/mvn install -Dgpg.skip -Dmaven.javadoc.skip<span class="o">=</span><span class="nb">true</span> -Dmaven.test.skip<span class="o">=</span><span class="nb">true</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>最后，把它提交到 Spark 里执行：</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> example
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/spark/bin/spark-submit --master <span class="s2">&#34;local&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --class com.vesoft.nebula.examples.connector.NebulaSparkReaderExample <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --driver-memory 4g target/example-3.0-SNAPSHOT.jar
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 退出 spark 容器</span>
</span></span><span class="line"><span class="cl"><span class="nb">exit</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>成功之后，我们会得到返回结果：</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">22/04/19 07:29:34 INFO DAGScheduler: Job 1 finished: show at NebulaSparkReaderExample.scala:57, took 0.199310 s
</span></span><span class="line"><span class="cl">+---------+------------------+---+
</span></span><span class="line"><span class="cl">|_vertexId|              name|age|
</span></span><span class="line"><span class="cl">+---------+------------------+---+
</span></span><span class="line"><span class="cl">|player105|       Danny Green| 31|
</span></span><span class="line"><span class="cl">|player109|    Tiago Splitter| 34|
</span></span><span class="line"><span class="cl">|player111|        David West| 38|
</span></span><span class="line"><span class="cl">|player118| Russell Westbrook| 30|
</span></span><span class="line"><span class="cl">|player143|Kristaps Porzingis| 23|
</span></span><span class="line"><span class="cl">|player114|     Tracy McGrady| 39|
</span></span><span class="line"><span class="cl">|player150|       Luka Doncic| 20|
</span></span><span class="line"><span class="cl">|player103|          Rudy Gay| 32|
</span></span><span class="line"><span class="cl">|player113|   Dejounte Murray| 29|
</span></span><span class="line"><span class="cl">|player121|        Chris Paul| 33|
</span></span><span class="line"><span class="cl">|player128|   Carmelo Anthony| 34|
</span></span><span class="line"><span class="cl">|player130|       Joel Embiid| 25|
</span></span><span class="line"><span class="cl">|player136|        Steve Nash| 45|
</span></span><span class="line"><span class="cl">|player108|        Boris Diaw| 36|
</span></span><span class="line"><span class="cl">|player122|    DeAndre Jordan| 30|
</span></span><span class="line"><span class="cl">|player123|       Ricky Rubio| 28|
</span></span><span class="line"><span class="cl">|player139|        Marc Gasol| 34|
</span></span><span class="line"><span class="cl">|player142|     Klay Thompson| 29|
</span></span><span class="line"><span class="cl">|player145|      JaVale McGee| 31|
</span></span><span class="line"><span class="cl">|player102| LaMarcus Aldridge| 33|
</span></span><span class="line"><span class="cl">+---------+------------------+---+
</span></span><span class="line"><span class="cl">only showing top 20 rows
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">22/04/19 07:29:36 INFO DAGScheduler: Job 4 finished: show at NebulaSparkReaderExample.scala:82, took 0.135543 s
</span></span><span class="line"><span class="cl">+---------+---------+-----+------+
</span></span><span class="line"><span class="cl">|   _srcId|   _dstId|_rank|degree|
</span></span><span class="line"><span class="cl">+---------+---------+-----+------+
</span></span><span class="line"><span class="cl">|player105|player100|    0|    70|
</span></span><span class="line"><span class="cl">|player105|player104|    0|    83|
</span></span><span class="line"><span class="cl">|player105|player116|    0|    80|
</span></span><span class="line"><span class="cl">|player109|player100|    0|    80|
</span></span><span class="line"><span class="cl">|player109|player125|    0|    90|
</span></span><span class="line"><span class="cl">|player118|player120|    0|    90|
</span></span><span class="line"><span class="cl">|player118|player131|    0|    90|
</span></span><span class="line"><span class="cl">|player143|player150|    0|    90|
</span></span><span class="line"><span class="cl">|player114|player103|    0|    90|
</span></span><span class="line"><span class="cl">|player114|player115|    0|    90|
</span></span><span class="line"><span class="cl">|player114|player140|    0|    90|
</span></span><span class="line"><span class="cl">|player150|player120|    0|    80|
</span></span><span class="line"><span class="cl">|player150|player137|    0|    90|
</span></span><span class="line"><span class="cl">|player150|player143|    0|    90|
</span></span><span class="line"><span class="cl">|player103|player102|    0|    70|
</span></span><span class="line"><span class="cl">|player113|player100|    0|    99|
</span></span><span class="line"><span class="cl">|player113|player101|    0|    99|
</span></span><span class="line"><span class="cl">|player113|player104|    0|    99|
</span></span><span class="line"><span class="cl">|player113|player105|    0|    99|
</span></span><span class="line"><span class="cl">|player113|player106|    0|    99|
</span></span><span class="line"><span class="cl">+---------+---------+-----+------+
</span></span><span class="line"><span class="cl">only showing top 20 rows
</span></span></code></pre></td></tr></table>
</div>
</div><p>事实上，在这个代码仓库下还有更多的例子，特别是 <a href="https://spark.apache.org/docs/latest/graphx-programming-guide.html" target="_blank" rel="noopener noreffer">GraphX</a> 的例子，你可以尝试自己去探索这部分。</p>
<blockquote>
<p>请注意，在 GraphX 假定顶点 ID 是数字类型的，因此对于字符串类型的顶点 ID 情况，需要进行实时转换，请参考 <a href="https://github.com/vesoft-inc/nebula-algorithm/blob/a82d7092d928a2f3abc45a727c24afb888ff8e4f/example/src/main/scala/com/vesoft/nebula/algorithm/PageRankExample.scala#L31" target="_blank" rel="noopener noreffer">Nebula Algorithom 中的例子</a>，了解如何绕过这一问题。</p>
</blockquote>
<h2 id="nebula-exchange" class="headerLink">
    <a href="#nebula-exchange" class="header-mark"></a>3 Nebula Exchange</h2><ul>
<li>代码：https://github.com/vesoft-inc/nebula-exchange/</li>
<li>文档：https://docs.nebula-graph.com.cn/3.1.0/nebula-exchange/about-exchange/ex-ug-what-is-exchange/</li>
<li>JAR 包：https://github.com/vesoft-inc/nebula-exchange/releases</li>
<li>配置例子： <a href="https://github.com/vesoft-inc/nebula-exchange/blob/master/exchange-common/src/test/resources/application.conf" target="_blank" rel="noopener noreffer">exchange-common/src/test/resources/application.conf</a></li>
</ul>
<p>Nebula Exchange 是一个 Spark Lib，也是一个可以直接提交执行的 Spark 应用，它被用来从多个数据源读取数据写入 Nebula Graph 或者输出 <a href="https://docs.nebula-graph.com.cn/3.1.0/nebula-exchange/use-exchange/ex-ug-import-from-sst/#step_5_import_the_sst_file" target="_blank" rel="noopener noreffer">Nebula Graph SST 文件</a>。</p>
<p><a class="lightgallery" href="https://docs-cdn.nebula-graph.com.cn/figures/ex-ug-003.png" title="https://docs-cdn.nebula-graph.com.cn/figures/ex-ug-003.png" data-thumbnail="https://docs-cdn.nebula-graph.com.cn/figures/ex-ug-003.png">
        
    </a></p>
<p>通过 spark-submit 的方式使用 Nebula Exchange 的方法很直接：</p>
<ul>
<li>首先创建配置文件，让 Exchange 知道应该如何获取和写入数据</li>
<li>然后用指定的配置文件调用 Exchange 包</li>
</ul>
<p>现在，让我们用上一章中创建的相同环境做一个实际测试。</p>
<h3 id="一键试玩-exchange" class="headerLink">
    <a href="#%e4%b8%80%e9%94%ae%e8%af%95%e7%8e%a9-exchange" class="header-mark"></a>3.1 一键试玩 Exchange</h3><h4 id="先跑起来看看吧" class="headerLink">
    <a href="#%e5%85%88%e8%b7%91%e8%b5%b7%e6%9d%a5%e7%9c%8b%e7%9c%8b%e5%90%a7" class="header-mark"></a>3.1.1 先跑起来看看吧</h4><blockquote>
<p>请参考前边<a href="#%e6%8b%89%e8%b5%b7%e7%8e%af%e5%a2%83" rel="">拉起环境</a>这一章节，先一键装好环境。</p>
</blockquote>
<p>一键执行：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">~/.nebula-up/nebula-exchange-example.sh
</span></span></code></pre></td></tr></table>
</div>
</div><p>恭喜你，已经第一次执行成功一个 Exchange 的数据导入任务啦！</p>
<h4 id="再看看一些细节" class="headerLink">
    <a href="#%e5%86%8d%e7%9c%8b%e7%9c%8b%e4%b8%80%e4%ba%9b%e7%bb%86%e8%8a%82" class="header-mark"></a>3.1.2 再看看一些细节</h4><p>这个例子里，我们实际上是用 Exchange 从 CSV 文件这一其中支持的数据源中读取数据写入 Nebula Graph 集群的。这个 CSV 文件中第一列是顶点 ID，第二和第三列是 &ldquo;姓名 &ldquo;和 &ldquo;年龄 &ldquo;的属性：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">player800,<span class="s2">&#34;Foo Bar&#34;</span>,23
</span></span><span class="line"><span class="cl">player801,<span class="s2">&#34;Another Name&#34;</span>,21
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>咱们可以进到 Spark 环境里看看</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker <span class="nb">exec</span> -it sparkmaster bash
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> /root
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>可以看到我们提交 Exchange 任务时候指定的配置文件 <code>exchange.conf</code> 它是一个 <code>HOCON</code> 格式的文件：
<ul>
<li>在 <code>.nebula</code> 中描述了 Nebula Graph 集群的相关信息</li>
<li>在 <code>.tags</code> 中描述了如何将必填字段对应到我们的数据源（这里是 CSV 文件）等有关 Vertecies 的信息。</li>
</ul>
</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span><span class="lnt">89
</span><span class="lnt">90
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zed" data-lang="zed"><span class="line"><span class="cl"><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="err">#</span><span class="w"> </span><span class="n">Spark</span><span class="w"> </span><span class="kn">relation</span><span class="w"> </span><span class="n">config</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="n">spark</span><span class="o">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">app</span><span class="o">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">name</span><span class="o">:</span><span class="w"> </span><span class="n">Nebula</span><span class="w"> </span><span class="n">Exchange</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">master</span><span class="o">:</span><span class="n">local</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">driver</span><span class="o">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">cores</span><span class="o">:</span><span class="w"> </span><span class="err">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">maxResultSize</span><span class="o">:</span><span class="w"> </span><span class="err">1</span><span class="n">G</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">executor</span><span class="o">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">memory</span><span class="o">:</span><span class="w"> </span><span class="err">1</span><span class="n">G</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">cores</span><span class="o">:</span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">max</span><span class="o">:</span><span class="w"> </span><span class="err">16</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="err">#</span><span class="w"> </span><span class="n">Nebula</span><span class="w"> </span><span class="n">Graph</span><span class="w"> </span><span class="kn">relation</span><span class="w"> </span><span class="n">config</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="n">nebula</span><span class="o">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">address</span><span class="o">:</span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">graph</span><span class="o">:</span><span class="p">[</span><span class="err">&#34;</span><span class="n">graphd</span><span class="o">:</span><span class="err">9669&#34;</span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">meta</span><span class="o">:</span><span class="p">[</span><span class="err">&#34;</span><span class="n">metad0</span><span class="o">:</span><span class="err">9559&#34;</span><span class="p">,</span><span class="w"> </span><span class="err">&#34;</span><span class="n">metad1</span><span class="o">:</span><span class="err">9559&#34;</span><span class="p">,</span><span class="w"> </span><span class="err">&#34;</span><span class="n">metad2</span><span class="o">:</span><span class="err">9559&#34;</span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">user</span><span class="o">:</span><span class="w"> </span><span class="n">root</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">pswd</span><span class="o">:</span><span class="w"> </span><span class="n">nebula</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">space</span><span class="o">:</span><span class="w"> </span><span class="n">basketballplayer</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="err">#</span><span class="w"> </span><span class="n">parameters</span><span class="w"> </span><span class="n">for</span><span class="w"> </span><span class="n">SST</span><span class="w"> </span><span class="n">import</span><span class="p">,</span><span class="w"> </span><span class="n">not</span><span class="w"> </span><span class="n">required</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">path</span><span class="o">:</span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">local</span><span class="o">:</span><span class="err">&#34;</span><span class="o">/</span><span class="n">tmp</span><span class="err">&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">remote</span><span class="o">:</span><span class="err">&#34;</span><span class="o">/</span><span class="n">sst</span><span class="err">&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">hdfs</span><span class="p">.</span><span class="n">namenode</span><span class="o">:</span><span class="w"> </span><span class="err">&#34;</span><span class="n">hdfs</span><span class="o">:</span><span class="c1">//localhost:9000&#34;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="err">#</span><span class="w"> </span><span class="n">nebula</span><span class="w"> </span><span class="n">client</span><span class="w"> </span><span class="n">connection</span><span class="w"> </span><span class="n">parameters</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">connection</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">#</span><span class="w"> </span><span class="n">socket</span><span class="w"> </span><span class="n">connect</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="n">execute</span><span class="w"> </span><span class="n">timeout</span><span class="p">,</span><span class="w"> </span><span class="n">unit</span><span class="o">:</span><span class="w"> </span><span class="n">millisecond</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">timeout</span><span class="o">:</span><span class="w"> </span><span class="err">30000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">error</span><span class="o">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">#</span><span class="w"> </span><span class="n">max</span><span class="w"> </span><span class="n">number</span><span class="w"> </span><span class="n">of</span><span class="w"> </span><span class="n">failures</span><span class="p">,</span><span class="w"> </span><span class="n">if</span><span class="w"> </span><span class="n">the</span><span class="w"> </span><span class="n">number</span><span class="w"> </span><span class="n">of</span><span class="w"> </span><span class="n">failures</span><span class="w"> </span><span class="n">is</span><span class="w"> </span><span class="n">bigger</span><span class="w"> </span><span class="n">than</span><span class="w"> </span><span class="n">max</span><span class="p">,</span><span class="w"> </span><span class="n">then</span><span class="w"> </span><span class="n">exit</span><span class="w"> </span><span class="n">the</span><span class="w"> </span><span class="n">application</span><span class="p">.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">max</span><span class="o">:</span><span class="w"> </span><span class="err">32</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">#</span><span class="w"> </span><span class="n">failed</span><span class="w"> </span><span class="n">import</span><span class="w"> </span><span class="n">job</span><span class="w"> </span><span class="n">will</span><span class="w"> </span><span class="n">be</span><span class="w"> </span><span class="n">recorded</span><span class="w"> </span><span class="n">in</span><span class="w"> </span><span class="n">output</span><span class="w"> </span><span class="n">path</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">output</span><span class="o">:</span><span class="w"> </span><span class="o">/</span><span class="nn">tmp/</span><span class="n">errors</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="err">#</span><span class="w"> </span><span class="n">use</span><span class="w"> </span><span class="n">google</span><span class="err">&#39;</span><span class="n">s</span><span class="w"> </span><span class="n">RateLimiter</span><span class="w"> </span><span class="n">to</span><span class="w"> </span><span class="n">limit</span><span class="w"> </span><span class="n">the</span><span class="w"> </span><span class="n">requests</span><span class="w"> </span><span class="n">send</span><span class="w"> </span><span class="n">to</span><span class="w"> </span><span class="n">NebulaGraph</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">rate</span><span class="o">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">#</span><span class="w"> </span><span class="n">the</span><span class="w"> </span><span class="n">stable</span><span class="w"> </span><span class="n">throughput</span><span class="w"> </span><span class="n">of</span><span class="w"> </span><span class="n">RateLimiter</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">limit</span><span class="o">:</span><span class="w"> </span><span class="err">1024</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">#</span><span class="w"> </span><span class="n">Acquires</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="n">permit</span><span class="w"> </span><span class="n">from</span><span class="w"> </span><span class="n">RateLimiter</span><span class="p">,</span><span class="w"> </span><span class="n">unit</span><span class="o">:</span><span class="w"> </span><span class="n">MILLISECONDS</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">#</span><span class="w"> </span><span class="n">if</span><span class="w"> </span><span class="n">it</span><span class="w"> </span><span class="n">can</span><span class="err">&#39;</span><span class="n">t</span><span class="w"> </span><span class="n">be</span><span class="w"> </span><span class="n">obtained</span><span class="w"> </span><span class="n">within</span><span class="w"> </span><span class="n">the</span><span class="w"> </span><span class="n">specified</span><span class="w"> </span><span class="n">timeout</span><span class="p">,</span><span class="w"> </span><span class="n">then</span><span class="w"> </span><span class="n">give</span><span class="w"> </span><span class="n">up</span><span class="w"> </span><span class="n">the</span><span class="w"> </span><span class="n">request</span><span class="p">.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">timeout</span><span class="o">:</span><span class="w"> </span><span class="err">1000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="err">#</span><span class="w"> </span><span class="n">Processing</span><span class="w"> </span><span class="n">tags</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="err">#</span><span class="w"> </span><span class="n">There</span><span class="w"> </span><span class="n">are</span><span class="w"> </span><span class="n">tag</span><span class="w"> </span><span class="n">config</span><span class="w"> </span><span class="n">examples</span><span class="w"> </span><span class="n">for</span><span class="w"> </span><span class="n">different</span><span class="w"> </span><span class="n">dataSources</span><span class="p">.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="n">tags</span><span class="o">:</span><span class="w"> </span><span class="p">[</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="err">#</span><span class="w"> </span><span class="n">HDFS</span><span class="w"> </span><span class="n">csv</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="err">#</span><span class="w"> </span><span class="n">Import</span><span class="w"> </span><span class="n">mode</span><span class="w"> </span><span class="n">is</span><span class="w"> </span><span class="n">client</span><span class="p">,</span><span class="w"> </span><span class="n">just</span><span class="w"> </span><span class="n">change</span><span class="w"> </span><span class="n">type</span><span class="p">.</span><span class="n">sink</span><span class="w"> </span><span class="n">to</span><span class="w"> </span><span class="n">sst</span><span class="w"> </span><span class="n">if</span><span class="w"> </span><span class="n">you</span><span class="w"> </span><span class="n">want</span><span class="w"> </span><span class="n">to</span><span class="w"> </span><span class="n">use</span><span class="w"> </span><span class="n">client</span><span class="w"> </span><span class="n">import</span><span class="w"> </span><span class="n">mode</span><span class="p">.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">name</span><span class="o">:</span><span class="w"> </span><span class="n">player</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">type</span><span class="o">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">source</span><span class="o">:</span><span class="w"> </span><span class="n">csv</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">sink</span><span class="o">:</span><span class="w"> </span><span class="n">client</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">path</span><span class="o">:</span><span class="w"> </span><span class="err">&#34;</span><span class="n">file</span><span class="o">:</span><span class="c1">///root/player.csv&#34;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="w">      </span><span class="err">#</span><span class="w"> </span><span class="n">if</span><span class="w"> </span><span class="n">your</span><span class="w"> </span><span class="n">csv</span><span class="w"> </span><span class="n">file</span><span class="w"> </span><span class="n">has</span><span class="w"> </span><span class="n">no</span><span class="w"> </span><span class="n">header</span><span class="p">,</span><span class="w"> </span><span class="n">then</span><span class="w"> </span><span class="n">use</span><span class="w"> </span><span class="n">_c0</span><span class="p">,</span><span class="n">_c1</span><span class="p">,</span><span class="n">_c2</span><span class="p">,..</span><span class="w"> </span><span class="n">to</span><span class="w"> </span><span class="n">indicate</span><span class="w"> </span><span class="n">fields</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">fields</span><span class="o">:</span><span class="w"> </span><span class="p">[</span><span class="n">_c1</span><span class="p">,</span><span class="w"> </span><span class="n">_c2</span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">nebula</span><span class="p">.</span><span class="n">fields</span><span class="o">:</span><span class="w"> </span><span class="p">[</span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="n">age</span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">vertex</span><span class="o">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">field</span><span class="o">:</span><span class="n">_c0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">separator</span><span class="o">:</span><span class="w"> </span><span class="err">&#34;</span><span class="p">,</span><span class="err">&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">header</span><span class="o">:</span><span class="w"> </span><span class="n">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">batch</span><span class="o">:</span><span class="w"> </span><span class="err">256</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">partition</span><span class="o">:</span><span class="w"> </span><span class="err">32</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>我们应该能看到那个 CSV 数据源和这个配置文件都在同一个目录下了：</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash-5.0# ls -l
</span></span><span class="line"><span class="cl">total <span class="m">24</span>
</span></span><span class="line"><span class="cl">drwxrwxr-x    <span class="m">2</span> <span class="m">1000</span>     <span class="m">1000</span>          <span class="m">4096</span> Jun  <span class="m">1</span> 04:26 download
</span></span><span class="line"><span class="cl">-rw-rw-r--    <span class="m">1</span> <span class="m">1000</span>     <span class="m">1000</span>          <span class="m">1908</span> Jun  <span class="m">1</span> 04:23 exchange.conf
</span></span><span class="line"><span class="cl">-rw-rw-r--    <span class="m">1</span> <span class="m">1000</span>     <span class="m">1000</span>          <span class="m">2593</span> Jun  <span class="m">1</span> 04:23 hadoop.env
</span></span><span class="line"><span class="cl">drwxrwxr-x    <span class="m">7</span> <span class="m">1000</span>     <span class="m">1000</span>          <span class="m">4096</span> Jun  <span class="m">6</span> 03:27 nebula-spark-connector
</span></span><span class="line"><span class="cl">-rw-rw-r--    <span class="m">1</span> <span class="m">1000</span>     <span class="m">1000</span>            <span class="m">51</span> Jun  <span class="m">1</span> 04:23 player.csv
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>然后，实际上我们可以手动再次提交一下这个 Exchange 任务</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">/spark/bin/spark-submit --master <span class="nb">local</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --class com.vesoft.nebula.exchange.Exchange download/nebula-exchange.jar <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -c exchange.conf
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>部分返回结果</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">22/06/06 03:56:26 INFO Exchange$: Processing Tag player
</span></span><span class="line"><span class="cl">22/06/06 03:56:26 INFO Exchange$: field keys: _c1, _c2
</span></span><span class="line"><span class="cl">22/06/06 03:56:26 INFO Exchange$: nebula keys: name, age
</span></span><span class="line"><span class="cl">22/06/06 03:56:26 INFO Exchange$: Loading CSV files from file:///root/player.csv
</span></span><span class="line"><span class="cl">...
</span></span><span class="line"><span class="cl">22/06/06 03:56:41 INFO Exchange$: import for tag player cost time: 3.35 s
</span></span><span class="line"><span class="cl">22/06/06 03:56:41 INFO Exchange$: Client-Import: batchSuccess.player: 2
</span></span><span class="line"><span class="cl">22/06/06 03:56:41 INFO Exchange$: Client-Import: batchFailure.player: 0
</span></span><span class="line"><span class="cl">...
</span></span></code></pre></td></tr></table>
</div>
</div><p>更多的数据源，请参考文档和配置的例子。</p>
<blockquote>
<p>关于 Exchange 输出 SST 文件的实践，你可以参考文档和我的旧文 <a href="https://www.siwei.io/nebula-exchange-sst-2.x/" target="_blank" rel="noopener noreffer">Nebula Exchange SST 2.x实践指南</a>。</p>
</blockquote>
<h2 id="nebula-algorithm" class="headerLink">
    <a href="#nebula-algorithm" class="header-mark"></a>4 Nebula Algorithm</h2><ul>
<li>代码仓库： <a href="https://github.com/vesoft-inc/nebula-algorithm" target="_blank" rel="noopener noreffer">https://github.com/vesoft-inc/nebula-algorithm</a></li>
<li>文档：https://docs.nebula-graph.com.cn/3.1.0/nebula-algorithm/</li>
<li>JAR 包：https://repo1.maven.org/maven2/com/vesoft/nebula-algorithm/</li>
<li>示例代码：<a href="example/src/main/scala/com/vesoft/nebula/algorithm" rel="">example/src/main/scala/com/vesoft/nebula/algorithm</a></li>
</ul>
<h3 id="通过-spark-submit-提交任务" class="headerLink">
    <a href="#%e9%80%9a%e8%bf%87-spark-submit-%e6%8f%90%e4%ba%a4%e4%bb%bb%e5%8a%a1" class="header-mark"></a>4.1 通过 spark-submit 提交任务</h3><blockquote>
<p>我在<a href="https://github.com/wey-gu/nebula-livejournal" target="_blank" rel="noopener noreffer">这个代码仓库</a>里给出了例子，今天我们借助 Nebula-UP 可以更方便体验它。</p>
<p>参考前边<a href="#%e6%8b%89%e8%b5%b7%e7%8e%af%e5%a2%83" rel="">拉起环境</a>这一章节，先一键装好环境。</p>
</blockquote>
<p>在如上通过 Nebula-UP 的 Spark 模式部署了需要的依赖之后</p>
<ul>
<li>加载 <a href="https://snap.stanford.edu/data/soc-LiveJournal1.html" target="_blank" rel="noopener noreffer">LiveJournal</a> 数据集</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">~/.nebula-up/load-LiveJournal-dataset.sh
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>在 LiveJournal 数据集上执行一个 PageRank 算法，结果输出到 CSV 文件中</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">~/.nebula-up/nebula-algo-pagerank-example.sh
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>检查输出结果：</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker <span class="nb">exec</span> -it sparkmaster bash
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">head /output/part*000.csv
</span></span><span class="line"><span class="cl">_id,pagerank
</span></span><span class="line"><span class="cl">637100,0.9268620883822242
</span></span><span class="line"><span class="cl">108150,1.1855749056722755
</span></span><span class="line"><span class="cl">957460,0.923720299211093
</span></span><span class="line"><span class="cl">257320,0.9967932799358413
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="配置文件解读" class="headerLink">
    <a href="#%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6%e8%a7%a3%e8%af%bb" class="header-mark"></a>4.1.1 配置文件解读</h4><p>完整文件在<a href="https://github.com/wey-gu/nebula-livejournal/blob/main/nebula-algorithm/algo-pagerank.conf" target="_blank" rel="noopener noreffer">这里</a>，这里，我们介绍一下主要的字段：</p>
<ul>
<li><code>.data</code> 指定了源是 Nebula，表示从集群获取图数据，输出<code>sink</code>是 <code>csv</code>，表示写到本地文件里。</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">  data: {
</span></span><span class="line"><span class="cl">    # data source. optional of nebula,csv,json
</span></span><span class="line"><span class="cl">    source: nebula
</span></span><span class="line"><span class="cl">    # data sink, means the algorithm result will be write into this sink. optional of nebula,csv,text
</span></span><span class="line"><span class="cl">    sink: csv
</span></span><span class="line"><span class="cl">    # if your algorithm needs weight
</span></span><span class="line"><span class="cl">    hasWeight: false
</span></span><span class="line"><span class="cl">  }
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li><code>.nebula.read</code> 规定了读 Nebula Graph 集群的对应关系，这里是读取所有 edge type: <code>follow</code> 的边数据为一整张图</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">  nebula: {
</span></span><span class="line"><span class="cl">    # algo&#39;s data source from Nebula. If data.source is nebula, then this nebula.read config can be valid.
</span></span><span class="line"><span class="cl">    read: {
</span></span><span class="line"><span class="cl">        # Nebula metad server address, multiple addresses are split by English comma
</span></span><span class="line"><span class="cl">        metaAddress: &#34;metad0:9559&#34;
</span></span><span class="line"><span class="cl">        # Nebula space
</span></span><span class="line"><span class="cl">        space: livejournal
</span></span><span class="line"><span class="cl">        # Nebula edge types, multiple labels means that data from multiple edges will union together
</span></span><span class="line"><span class="cl">        labels: [&#34;follow&#34;]
</span></span><span class="line"><span class="cl">        # Nebula edge property name for each edge type, this property will be as weight col for algorithm.
</span></span><span class="line"><span class="cl">        # Make sure the weightCols are corresponding to labels.
</span></span><span class="line"><span class="cl">        weightCols: []
</span></span><span class="line"><span class="cl">    }
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li><code>.algorithm</code> 里配置了我们要调用的算法，和算法的配置</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">  algorithm: {
</span></span><span class="line"><span class="cl">    executeAlgo: pagerank
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    # PageRank parameter
</span></span><span class="line"><span class="cl">    pagerank: {
</span></span><span class="line"><span class="cl">        maxIter: 10
</span></span><span class="line"><span class="cl">        resetProb: 0.15  # default 0.15
</span></span><span class="line"><span class="cl">    }
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="作为一个库在-spark-中调用-nebula-algoritm" class="headerLink">
    <a href="#%e4%bd%9c%e4%b8%ba%e4%b8%80%e4%b8%aa%e5%ba%93%e5%9c%a8-spark-%e4%b8%ad%e8%b0%83%e7%94%a8-nebula-algoritm" class="header-mark"></a>4.2 作为一个库在 Spark 中调用 Nebula Algoritm</h3><p>请注意另一方面，我们可以将 Nebula Algoritm 作为一个库调用，它的好处在于：</p>
<ul>
<li>
<p>对算法的输出格式有更多的控制/定制功能</p>
</li>
<li>
<p>可以对非数字 ID 的情况进行转换，见<a href="https://github.com/vesoft-inc/nebula-algorithm/blob/a82d7092d928a2f3abc45a727c24afb888ff8e4f/example/src/main/scala/com/vesoft/nebula/algorithm/PageRankExample.scala#L48" target="_blank" rel="noopener noreffer">这里</a></p>
</li>
</ul>
<p>这里我先不给出例子了，如果大家感兴趣可以给 Nebula-UP 提需求，我也会增加相应的例子。</p>
<blockquote>
<p>题图来源： <a href="https://unsplash.com/photos/KABfjuSOx74" target="_blank" rel="noopener noreffer">Sander</a></p>
</blockquote>]]></description>
</item><item>
    <title>Nebula Graph on Pi</title>
    <link>https://siwei.io/nebula-graph-on-pi/</link>
    <pubDate>Wed, 23 Mar 2022 22:11:03 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/nebula-graph-on-pi/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/nebula-graph-on-pi/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p>得益于 Nebula 的原生 ARM64v8 的支持，在树莓派等 ARM 单板上跑 Nebula Graph 非常容易。</p>
</blockquote>
<h2 id="背景" class="headerLink">
    <a href="#%e8%83%8c%e6%99%af" class="header-mark"></a>1 背景</h2><p>最近，在 Nebula Graph 社区 Yee 老师的（再）一次修复了 Nebula Graph 的构建依赖的 ARM 支持问题（<a href="https://github.com/vesoft-inc/nebula-third-party/pull/37" target="_blank" rel="noopener noreffer">nebula-third-party#37</a>）之后，我们又可以愉快地在 M1 Mac 上玩这个分布式开源图数据库了。</p>
<p>苦于树莓派的价格，一直没找机会把 Nebula 跑在小板子上玩玩。至于为什么要跑在树莓派上我的回答当然是 <del>Because I can</del> 在非常非常边缘计算的场景下（这里挖个坑，我一定要找一个这样的场景分享出来）。</p>
<p>终于，一周多之前在 <a href="https://twitter.com/laixintao" target="_blank" rel="noopener noreffer">@laixintao</a> 和 <a href="https://twitter.com/andelf/status/1504295476958404608" target="_blank" rel="noopener noreffer">@andelf</a> 的一个讨论下我决定找一个树莓派的 alternative，最后下单了 <a href="https://wiki.radxa.com/Rock3/" target="_blank" rel="noopener noreffer">Rock Pi 3A</a>，在因为深圳疫情影响下拖到了这个礼拜才终于发货了！</p>
<p><a class="lightgallery" href="./tweet-RPi-alternative.webp" title="tweet-RPi-alternative" data-thumbnail="./tweet-RPi-alternative.webp">
        
    </a></p>
<p>它看起来真的很棒！</p>
<p><a class="lightgallery" href="./rockspi_before.webp" title="rockspi_before" data-thumbnail="./rockspi_before.webp">
        
    </a></p>
<h2 id="在-arm64-板子上装-nebula-graph-图数据库" class="headerLink">
    <a href="#%e5%9c%a8-arm64-%e6%9d%bf%e5%ad%90%e4%b8%8a%e8%a3%85-nebula-graph-%e5%9b%be%e6%95%b0%e6%8d%ae%e5%ba%93" class="header-mark"></a>2 在 ARM64 板子上装 Nebula Graph 图数据库</h2><blockquote>
<p>实际上 Nebula Graph 在 3.0 之后提供了一个<a href="https://docs.nebula-graph.com.cn/3.0.1/4.deployment-and-installation/standalone-deployment/" target="_blank" rel="noopener noreffer">单机版</a>，这使得 Nebula 在边缘计算情况下有了更小的 footprint，不过这次我还没有使用这个版本，下次试试再给大家分享。</p>
</blockquote>
<p>我在附录列出了安装 Ubuntu Server 的步骤，这里假设大家已经在树莓派或者其他单板 ARM 电脑里拉起来了 64 位的 Linux Server。</p>
<h3 id="第-0-步安装-docker-和-docker-compose" class="headerLink">
    <a href="#%e7%ac%ac-0-%e6%ad%a5%e5%ae%89%e8%a3%85-docker-%e5%92%8c-docker-compose" class="header-mark"></a>2.1 第 0 步，安装 Docker 和 Docker-Compose</h3><p>这里，我假设是 Debian/Ubuntu，其他分发版直接参考<a href="https://docs.docker.com/engine/install/" target="_blank" rel="noopener noreffer">这里</a>就好。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo apt-get update
</span></span><span class="line"><span class="cl">sudo apt-get install <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    ca-certificates <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    curl <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    gnupg <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    lsb-release
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  <span class="s2">&#34;deb [arch=</span><span class="k">$(</span>dpkg --print-architecture<span class="k">)</span><span class="s2"> signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
</span></span></span><span class="line"><span class="cl"><span class="s2">  </span><span class="k">$(</span>lsb_release -cs<span class="k">)</span><span class="s2"> stable&#34;</span> <span class="p">|</span> sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">sudo apt-get update
</span></span><span class="line"><span class="cl">sudo apt-get install docker-ce docker-ce-cli containerd.io
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># follow https://docs.docker.com/engine/install/linux-postinstall/</span>
</span></span><span class="line"><span class="cl">sudo groupadd docker
</span></span><span class="line"><span class="cl">sudo usermod -aG docker <span class="nv">$USER</span>
</span></span><span class="line"><span class="cl"><span class="nb">exit</span>
</span></span><span class="line"><span class="cl"><span class="c1"># login again</span>
</span></span><span class="line"><span class="cl">newgrp docker
</span></span></code></pre></td></tr></table>
</div>
</div><p>安装好了 Docker 之后，安装 Compose，它 Docker 官方的步骤是有问题的，因为它其实是一个 Python 的包，我们通过 PIP 去装就好了。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo apt-get install -y python3 python3-pip
</span></span><span class="line"><span class="cl">sudo pip3 install docker-compose
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="第-1-步拉起-nebula-graph" class="headerLink">
    <a href="#%e7%ac%ac-1-%e6%ad%a5%e6%8b%89%e8%b5%b7-nebula-graph" class="header-mark"></a>2.2 第 1 步，拉起 Nebula Graph</h3><p>首先，我们克隆 Nebula Docker Compose 这个 Repo，在 Master Branch，用 Compose 把服务拉起来。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git clone https://github.com/vesoft-inc/nebula-docker-compose.git <span class="o">&amp;&amp;</span> <span class="nb">cd</span> nebula-docker-compose
</span></span><span class="line"><span class="cl">docker-compose up -d
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后，我们下载 Console，连上 GraphD 服务。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">wget https://github.com/vesoft-inc/nebula-console/releases/download/v3.0.0/nebula-console-linux-arm64-v3.0.0
</span></span><span class="line"><span class="cl">chmod +x nebula-console-linux-arm64-v3.0.0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">./nebula-console-linux-arm64-v3.0.0 -addr localhost -port <span class="m">9669</span> -u root -p nebula
</span></span></code></pre></td></tr></table>
</div>
</div><p>并激活 Storage 服务。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">ADD HOSTS <span class="s2">&#34;storaged0&#34;</span>:9779,<span class="s2">&#34;storaged1&#34;</span>:9779,<span class="s2">&#34;storaged2&#34;</span>:9779<span class="p">;</span>
</span></span><span class="line"><span class="cl">SHOW HOSTS<span class="p">;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="第-2-步玩转-nebula-graph-on-pi" class="headerLink">
    <a href="#%e7%ac%ac-2-%e6%ad%a5%e7%8e%a9%e8%bd%ac-nebula-graph-on-pi" class="header-mark"></a>2.3 第 2 步，玩转 Nebula Graph on Pi</h3><p>这时候，透过 <code>SHOW HOSTS</code> 看到三个 StorageD 服务都是 ONLINE 之后，我们可以给 Nebula 里加载进去测试数据集。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$:play basketballplayer<span class="p">;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>差不多一分钟之后，数据库加载成功，我们进入这个图空间，玩一下吧！</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">USE basketballplayer<span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">GO FROM <span class="s2">&#34;player100&#34;</span> OVER follow YIELD dst<span class="o">(</span>edge<span class="o">)</span><span class="p">;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Check this out and&hellip;</p>
<p>Happy Graphing!</p>
<p><a class="lightgallery" href="./Nebula-on-Pi.webp" title="Nebula-on-Pi" data-thumbnail="./Nebula-on-Pi.webp">
        
    </a></p>
<h2 id="附录安装-ubuntu-server-在-rock-pi-3a-上" class="headerLink">
    <a href="#%e9%99%84%e5%bd%95%e5%ae%89%e8%a3%85-ubuntu-server-%e5%9c%a8-rock-pi-3a-%e4%b8%8a" class="header-mark"></a>3 附录：安装 Ubuntu Server 在 Rock Pi 3A 上</h2><ul>
<li>
<p>准备一个 micro SD card，在  <a href="https://wiki.radxa.com/Rock3/downloads" target="_blank" rel="noopener noreffer">https://wiki.radxa.com/Rock3/downloads</a> 下载镜像，解压为 <code>.img</code> 文件</p>
</li>
<li>
<p>把镜像写进 SD card，比如用 <a href="https://www.balena.io/etcher/" target="_blank" rel="noopener noreffer">etcher</a></p>
</li>
<li>
<p>插入电源（5V，3A）启动！</p>
</li>
</ul>
<blockquote>
<p>feature image credit: <a href="https://unsplash.com/@_louisreed" target="_blank" rel="noopener noreffer">@_louisreed</a></p>
</blockquote>]]></description>
</item><item>
    <title>图数据库体操：用 Nebula Graph 搭成语图谱解汉兜</title>
    <link>https://siwei.io/resolve-wordle/</link>
    <pubDate>Mon, 28 Feb 2022 19:18:59 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/resolve-wordle/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/resolve-wordle/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p>我发现用 Nebula Graph 的图查询解 Antfu 的汉兜（最好的中文成语版 wordle 👉🏻 handle.antfu.me）特别有意思，很适合每天写图库语句的体操练习，本文揭示如何用知识图谱<del>作弊</del>解汉兜😁</p>
</blockquote>
<h2 id="什么是汉兜" class="headerLink">
    <a href="#%e4%bb%80%e4%b9%88%e6%98%af%e6%b1%89%e5%85%9c" class="header-mark"></a>1 什么是汉兜？</h2><p>汉兜（https://handle.antfu.me）是由 Vue/Vite 核心团队的 Antfu 的又一个非常酷的作品，一个非常精致的汉字版的 Wordle，他是是一个每日挑战的填字游戏的中文成语版。</p>
<p>每天，汉兜会发起一个猜成语挑战，人们要在十次内才对它才能获胜，每一步之后都会收到相应的文字、声母、韵母、声调的匹配情况的提示，其中：绿色表示这个因素存在并且位置匹配、橘色表示这个元素存在但是位置不对，详细的规则可见如下的网页截图：</p>
<p><a class="lightgallery" href="/resolve-wordle/handle-intro.webp" title="/resolve-wordle/handle-intro.webp" data-thumbnail="/resolve-wordle/handle-intro.webp">
        
    </a></p>
<p>汉兜的乐趣就我们在于在有限的尝试过程中，在大脑中搜寻可能的答案，不断去逼近真理，任何试图作弊、讨巧去泄漏结果的行为都是很无趣、倒胃口的（比如从开源的汉兜代码里窃取信息），这个过程就像在做大脑的体操。</p>
<p>说到大脑的成语词汇量体操，我突然想到，为什么我们不能在大脑之外造一个汉语成语知识图谱，然后基于这个图谱去做图数据库查询语法体操呢？</p>
<h2 id="构造解决汉兜的成语知识图谱" class="headerLink">
    <a href="#%e6%9e%84%e9%80%a0%e8%a7%a3%e5%86%b3%e6%b1%89%e5%85%9c%e7%9a%84%e6%88%90%e8%af%ad%e7%9f%a5%e8%af%86%e5%9b%be%e8%b0%b1" class="header-mark"></a>2 构造解决汉兜的成语知识图谱</h2><h3 id="什么是知识图谱" class="headerLink">
    <a href="#%e4%bb%80%e4%b9%88%e6%98%af%e7%9f%a5%e8%af%86%e5%9b%be%e8%b0%b1" class="header-mark"></a>2.1 什么是知识图谱？</h3><p>简单来说，知识图谱是一个连接实体之间关联关系的网络，它最初由 Google 提出并用来满足搜索引擎中基于知识推理才可获得（而不是网页倒排索引）的搜索问题，比如：”姚明妻子的年龄？“、”火箭队得过几次总冠军？“</p>
<p>这里边，我们关注的条件。到 2022 年的现在，知识图谱已经被广泛应用在推荐系统、问答系统、安全风控等等更多搜索之外的领域。</p>
<h3 id="为什么需要用知识图谱解决汉兜" class="headerLink">
    <a href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e9%9c%80%e8%a6%81%e7%94%a8%e7%9f%a5%e8%af%86%e5%9b%be%e8%b0%b1%e8%a7%a3%e5%86%b3%e6%b1%89%e5%85%9c" class="header-mark"></a>2.2 为什么需要用知识图谱解决汉兜？</h3><p><del>原因就是：because I can</del></p>
<p>实际上，我们在大脑中解决字谜游戏的过程像极了图谱网络中的信息搜寻的过程，汉兜的解谜反馈提示条件天然适合被用图谱的语义来进行表达。在本文后边，你们会发现解谜条件翻译成图语义是非常非常自然的，这个问题就像是一个天然的为图谱而存在的练习一样，我相信这和知识图谱的结构和人脑中的知识结构非常接近有很大的关系。</p>
<h3 id="如何构建面向汉兜解谜的知识图谱" class="headerLink">
    <a href="#%e5%a6%82%e4%bd%95%e6%9e%84%e5%bb%ba%e9%9d%a2%e5%90%91%e6%b1%89%e5%85%9c%e8%a7%a3%e8%b0%9c%e7%9a%84%e7%9f%a5%e8%af%86%e5%9b%be%e8%b0%b1" class="header-mark"></a>2.3 如何构建面向汉兜解谜的知识图谱？</h3><p>知识图谱是由实体（顶点）和关系（边）组成的，用图数据库管理系统（Graph Database MS）可以很方便进行知识的入库、更改、查询、甚至可视化探索。</p>
<p>在本文里，我将利用开源的分布式图数据库 Nebula Graph 开实践这个过程，具体图谱系统的搭建我都会放在文末。</p>
<p>在本章，我们只讨论图谱的建模：如何面向汉兜的解谜去设计“实体”与“关系”。</p>
<h4 id="图建模" class="headerLink">
    <a href="#%e5%9b%be%e5%bb%ba%e6%a8%a1" class="header-mark"></a>2.3.1 图建模</h4><h5 id="最初的想法" class="headerLink">
    <a href="#%e6%9c%80%e5%88%9d%e7%9a%84%e6%83%b3%e6%b3%95" class="header-mark"></a>2.3.1.1 最初的想法</h5><p>首先，一定存在的实体是：</p>
<ul>
<li>成语</li>
<li>汉字</li>
</ul>
<p>成语-[包含]-&gt;汉字，每个汉字-[读作]-&gt;读音。</p>
<p>其次，因为解谜过程中涉及到了声母、韵母以及声调的条件，考虑到图谱本身的量级非常小（千级别），而且字的读音是一对多的关系，我把读音和声母（包涵声母-initial和韵母-final）也作为实体，他们之间的关系则是顺理成章了：</p>
<p><a class="lightgallery" href="./schema_v0.webp" title="schema_v0" data-thumbnail="./schema_v0.webp">
        
    </a></p>
<h5 id="最终的版本" class="headerLink">
    <a href="#%e6%9c%80%e7%bb%88%e7%9a%84%e7%89%88%e6%9c%ac" class="header-mark"></a>2.3.1.2 最终的版本</h5><p>然而，我在后边基于图谱进行查询的时候发现最初的建模会使得(成语)&ndash;&gt;(字)&ndash;&gt;(读音)查询过程中丢失了这个字特定的读法的条件，所以我最终的建模是：</p>
<p><a class="lightgallery" href="./schema_v1.webp" title="schema_v1" data-thumbnail="./schema_v1.webp">
        
    </a></p>
<p>这样，纯文字的条件只涉及了<code>(成语)--&gt;(字)</code> 这一跳，而读音、声母、声调的条件则是另一条关系路径，既没有最初版本条件的冗余，又可以在一个路径模式匹配里带上两种条件（后边的例子里会涉及这样的表达）。</p>
<h4 id="构建成语知识图谱" class="headerLink">
    <a href="#%e6%9e%84%e5%bb%ba%e6%88%90%e8%af%ad%e7%9f%a5%e8%af%86%e5%9b%be%e8%b0%b1" class="header-mark"></a>2.3.2 构建成语知识图谱</h4><p>有了建模、这么简单的图谱的构建就剩下了数据的收集、清洗和入库。</p>
<p>对于所有成语数据和他们的读音，我一方面直接抽取了汉兜代码内部的<a href="https://github.com/antfu/handle/" target="_blank" rel="noopener noreffer">数据</a>、另一方面利用 <a href="https://pypinyin.readthedocs.io/" target="_blank" rel="noopener noreffer">PyPinyin</a> 这个开源的 Python 库将汉兜数据中没有读音的数据获得读音，同时，我也用到了 PyPinyin 里的很多方便的函数比如获取一个拼音的声母、韵母。</p>
<p>构建工具的代码在这里：https://github.com/wey-gu/chinese-graph</p>
<p>更多信息我也放在文末的附录之中。</p>
<h2 id="开始知识图谱查询体操" class="headerLink">
    <a href="#%e5%bc%80%e5%a7%8b%e7%9f%a5%e8%af%86%e5%9b%be%e8%b0%b1%e6%9f%a5%e8%af%a2%e4%bd%93%e6%93%8d" class="header-mark"></a>3 开始知识图谱查询体操</h2><p>至此，我假设咱们都已经有了我帮大家搭建的成语<del>作弊</del>知识图谱了，开始我们的图谱查询体操吧！</p>
<p>首先，打开汉兜 👉🏻 <a href="https://handle.antfu.me/" target="_blank" rel="noopener noreffer">https://handle.antfu.me/</a></p>
<p>假设我们想从一个成语开始，如果你没有想法的话可以试试这个：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-GraphQL" data-lang="GraphQL"><span class="line"><span class="cl"><span class="c"># 匹配成语中的一个结果</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">MATCH</span><span class="w"> </span><span class="p">(</span><span class="py">x</span><span class="p">:</span><span class="nc">idiom</span><span class="p">)</span><span class="w"> </span><span class="py">RETURN</span><span class="w"> </span><span class="py">x</span><span class="w"> </span><span class="py">LIMIT</span><span class="w"> </span><span class="py">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># 返回结果</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">(</span><span class="s">&#34;爱憎分明&#34;</span><span class="w"> </span><span class="p">:</span><span class="nc">idiom</span><span class="p">{</span><span class="py">pinyin</span><span class="p">:</span><span class="w"> </span><span class="s">&#34;[&#39;ai4&#39;, &#39;zeng1&#39;, &#39;fen1&#39;, &#39;ming2&#39;]&#34;</span><span class="p">})</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>然后我们把它填到汉兜之中，获得第一次尝试的提示条件：</p>
<p><a class="lightgallery" href="/resolve-wordle/initial_word.webp" title="/resolve-wordle/initial_word.webp" data-thumbnail="/resolve-wordle/initial_word.webp">
        
    </a></p>
<p>我们运气不错，得到了三个位置上的条件！</p>
<ul>
<li>有一个非第一个位置的字，拼音是 4 声，韵母是 ai，但不是爱（爱）</li>
<li>有一个一声的字，不在第二个位置（憎）</li>
<li>有一个字韵母是 ing，不在第四个位置（明）</li>
<li>第四个字是二声（明）</li>
</ul>
<p>下面，我们开始图数据库语句体操！</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-GraphQL" data-lang="GraphQL"><span class="line"><span class="cl"><span class="c"># 有一个非第一个位置的字，拼音是 4 声，韵母是 ai，但不是爱</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">MATCH</span><span class="w"> </span><span class="p">(</span><span class="py">char0</span><span class="p">:</span><span class="nc">character</span><span class="p">)</span><span class="err">&lt;-</span><span class="p">[</span><span class="py">with_char_0</span><span class="p">:</span><span class="nc">with_character</span><span class="p">]</span><span class="err">-</span><span class="p">(</span><span class="py">x</span><span class="p">:</span><span class="nc">idiom</span><span class="p">)</span><span class="err">-</span><span class="p">[</span><span class="py">with_pinyin_0</span><span class="p">:</span><span class="nc">with_pinyin</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">pinyin_0</span><span class="p">:</span><span class="nc">character_pinyin</span><span class="p">)</span><span class="err">-</span><span class="p">[:</span><span class="nc">with_pinyin_part</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">final_part_0</span><span class="p">:</span><span class="nc">pinyin_part</span><span class="p">{</span><span class="py">part_type</span><span class="p">:</span><span class="w"> </span><span class="s">&#34;final&#34;</span><span class="p">})</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nc">WHERE</span><span class="w"> </span><span class="py">id</span><span class="p">(</span><span class="py">final_part_0</span><span class="p">)</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="s">&#34;ai&#34;</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">pinyin_0</span><span class="err">.</span><span class="py">character_pinyin</span><span class="err">.</span><span class="py">tone</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="py">4</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">with_pinyin_0</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="py">0</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">with_char_0</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="py">0</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">id</span><span class="p">(</span><span class="py">char0</span><span class="p">)</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="sc">&#34;爱&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># 有一个一声的字，不在第二个位置</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">MATCH</span><span class="w"> </span><span class="p">(</span><span class="py">x</span><span class="p">:</span><span class="nc">idiom</span><span class="p">)</span><span class="w"> </span><span class="err">-</span><span class="p">[</span><span class="py">with_pinyin_1</span><span class="p">:</span><span class="nc">with_pinyin</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">pinyin_1</span><span class="p">:</span><span class="nc">character_pinyin</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">WHERE</span><span class="w"> </span><span class="py">pinyin_1</span><span class="err">.</span><span class="py">character_pinyin</span><span class="err">.</span><span class="py">tone</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="py">1</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">with_pinyin_1</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="py">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># 有一个字韵母是 ing，不在第四个位置</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">MATCH</span><span class="w"> </span><span class="p">(</span><span class="py">x</span><span class="p">:</span><span class="nc">idiom</span><span class="p">)</span><span class="w"> </span><span class="err">-</span><span class="p">[</span><span class="py">with_pinyin_2</span><span class="p">:</span><span class="nc">with_pinyin</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(:</span><span class="nc">character_pinyin</span><span class="p">)</span><span class="err">-</span><span class="p">[:</span><span class="nc">with_pinyin_part</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">final_part_2</span><span class="p">:</span><span class="nc">pinyin_part</span><span class="p">{</span><span class="py">part_type</span><span class="p">:</span><span class="w"> </span><span class="s">&#34;final&#34;</span><span class="p">})</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nc">WHERE</span><span class="w"> </span><span class="py">id</span><span class="p">(</span><span class="py">final_part_2</span><span class="p">)</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="s">&#34;ing&#34;</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">with_pinyin_2</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="py">3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># 第四个字是二声</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">MATCH</span><span class="w"> </span><span class="p">(</span><span class="py">x</span><span class="p">:</span><span class="nc">idiom</span><span class="p">)</span><span class="w"> </span><span class="err">-</span><span class="p">[</span><span class="py">with_pinyin_3</span><span class="p">:</span><span class="nc">with_pinyin</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">pinyin_3</span><span class="p">:</span><span class="nc">character_pinyin</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">WHERE</span><span class="w"> </span><span class="py">pinyin_3</span><span class="err">.</span><span class="py">character_pinyin</span><span class="err">.</span><span class="py">tone</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="py">2</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">with_pinyin_3</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="py">3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">RETURN</span><span class="w"> </span><span class="py">x</span><span class="p">,</span><span class="w"> </span><span class="py">count</span><span class="p">(</span><span class="py">x</span><span class="p">)</span><span class="w"> </span><span class="py">as</span><span class="w"> </span><span class="py">c</span><span class="w"> </span><span class="py">ORDER</span><span class="w"> </span><span class="py">BY</span><span class="w"> </span><span class="py">c</span><span class="w"> </span><span class="py">DESC</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>在图数据库之中运行，得到了 7 个答案：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="err">(</span><span class="s2">&#34;惊愚骇俗&#34;</span> <span class="err">:idiom</span><span class="p">{</span><span class="err">pinyin:</span> <span class="nt">&#34;[&#39;jing1&#39;, &#39;yu2&#39;, &#39;hai4&#39;, &#39;su2&#39;]&#34;</span><span class="p">}</span><span class="err">)</span>
</span></span><span class="line"><span class="cl"><span class="err">(</span><span class="s2">&#34;惊世骇俗&#34;</span> <span class="err">:idiom</span><span class="p">{</span><span class="err">pinyin:</span> <span class="nt">&#34;[&#39;jing1&#39;, &#39;shi4&#39;, &#39;hai4&#39;, &#39;su2&#39;]&#34;</span><span class="p">}</span><span class="err">)</span>
</span></span><span class="line"><span class="cl"><span class="err">(</span><span class="s2">&#34;惊见骇闻&#34;</span> <span class="err">:idiom</span><span class="p">{</span><span class="err">pinyin:</span> <span class="nt">&#34;[&#39;jing1&#39;, &#39;jian4&#39;, &#39;hai4&#39;, &#39;wen2&#39;]&#34;</span><span class="p">}</span><span class="err">)</span>
</span></span><span class="line"><span class="cl"><span class="err">(</span><span class="s2">&#34;沽名卖直&#34;</span> <span class="err">:idiom</span><span class="p">{</span><span class="err">pinyin:</span> <span class="nt">&#34;[&#39;gu1&#39;, &#39;ming2&#39;, &#39;mai4&#39;, &#39;zhi2&#39;]&#34;</span><span class="p">}</span><span class="err">)</span>
</span></span><span class="line"><span class="cl"><span class="err">(</span><span class="s2">&#34;惊心骇神&#34;</span> <span class="err">:idiom</span><span class="p">{</span><span class="err">pinyin:</span> <span class="nt">&#34;[&#39;jing1&#39;, &#39;xin1&#39;, &#39;hai4&#39;, &#39;shen2&#39;]&#34;</span><span class="p">}</span><span class="err">)</span>
</span></span><span class="line"><span class="cl"><span class="err">(</span><span class="s2">&#34;荆棘载途&#34;</span> <span class="err">:idiom</span><span class="p">{</span><span class="err">pinyin:</span> <span class="nt">&#34;[&#39;jing1&#39;, &#39;ji2&#39;, &#39;zai4&#39;, &#39;tu2&#39;]&#34;</span><span class="p">}</span><span class="err">)</span>
</span></span><span class="line"><span class="cl"><span class="err">(</span><span class="s2">&#34;出卖灵魂&#34;</span> <span class="err">:idiom</span><span class="p">{</span><span class="err">pinyin:</span> <span class="nt">&#34;[&#39;chu1&#39;, &#39;mai4&#39;, &#39;ling2&#39;, &#39;hun2&#39;]&#34;</span><span class="p">}</span><span class="err">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>看起来 <code>惊世骇俗</code> 比较主流，试试！</p>
<p><a class="lightgallery" href="./D59.webp" title="汉兜 D59" data-thumbnail="./D59.webp">
        
    </a></p>
<p>我们很幸运，借助于成语<del>作弊</del>知识图谱，居然一次就找到了答案，当然这实际上得益于第一次随机选取的词带来的限制条件的个数，不过在大部分情况下，两次尝试获得最终答案的可能性还是非常大的！</p>
<blockquote>
<p>注，这中间很长的253分钟是因为我在查询中发现之前代码里构造的图谱有点 bug，是“披枷带锁”这个词引起的读音图谱的错误数据，还好后来被修复了。</p>
<p>大家知道“披枷带锁”的正确读音么？😭</p>
</blockquote>
<p>接下来，我给大家详细解释一下这个语句的意思。</p>
<h3 id="语句的含义" class="headerLink">
    <a href="#%e8%af%ad%e5%8f%a5%e7%9a%84%e5%90%ab%e4%b9%89" class="header-mark"></a>3.1 语句的含义</h3><p>我们从第一个字的条件开始，这是一个既有声音、又有字形信息的条件。</p>
<ul>
<li>声音信息：存在一个韵母为 <code>ai4</code> 的发音，位置不在第一个字</li>
<li>文字信息：这个韵母为 <code>ai4</code> 的字，不是<code>爱</code>字</li>
</ul>
<p>对于声音信息条件，转换为图模式匹配为：(成语)-一个字发音-(拼音) -包含声母-(韵母) WHERE 拼音韵母为 <code>ai4</code> AND 位置不是第一个。</p>
<p>因为建模的时候，属性名称我用的是英文（其实中文也是支持的），实际上的语句为：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-GraphQL" data-lang="GraphQL"><span class="line"><span class="cl"><span class="c"># 有一个非第一个位置的字，拼音是 4 声，韵母是 ai</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">MATCH</span><span class="w"> </span><span class="p">(</span><span class="py">x</span><span class="p">:</span><span class="nc">idiom</span><span class="p">)</span><span class="err">-</span><span class="p">[</span><span class="py">with_pinyin_0</span><span class="p">:</span><span class="nc">with_pinyin</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">pinyin_0</span><span class="p">:</span><span class="nc">character_pinyin</span><span class="p">)</span><span class="err">-</span><span class="p">[:</span><span class="nc">with_pinyin_part</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">final_part_0</span><span class="p">:</span><span class="nc">pinyin_part</span><span class="p">{</span><span class="py">part_type</span><span class="p">:</span><span class="w"> </span><span class="s">&#34;final&#34;</span><span class="p">})</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nc">WHERE</span><span class="w"> </span><span class="py">id</span><span class="p">(</span><span class="py">final_part_0</span><span class="p">)</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="s">&#34;ai&#34;</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">pinyin_0</span><span class="err">.</span><span class="py">character_pinyin</span><span class="err">.</span><span class="py">tone</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="py">4</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">with_pinyin_0</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="py">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># ...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">RETURN</span><span class="w"> </span><span class="py">x</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>类似的，表示非第一个位置的字，不是<code>爱</code> 的表达是：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-GraphQL" data-lang="GraphQL"><span class="line"><span class="cl"><span class="c"># 有一个非第一个位置的字，拼音是 4 声，韵母是 ai，但不是爱</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">MATCH</span><span class="w"> </span><span class="p">(</span><span class="py">char0</span><span class="p">:</span><span class="nc">character</span><span class="p">)</span><span class="err">&lt;-</span><span class="p">[</span><span class="py">with_char_0</span><span class="p">:</span><span class="nc">with_character</span><span class="p">]</span><span class="err">-</span><span class="p">(</span><span class="py">x</span><span class="p">:</span><span class="nc">idiom</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">WHERE</span><span class="w"> </span><span class="py">with_char_0</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="py">0</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">id</span><span class="p">(</span><span class="py">char0</span><span class="p">)</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="sc">&#34;爱&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># ...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">RETURN</span><span class="w"> </span><span class="py">x</span><span class="p">,</span><span class="w"> </span><span class="py">count</span><span class="p">(</span><span class="py">x</span><span class="p">)</span><span class="w"> </span><span class="py">as</span><span class="w"> </span><span class="py">c</span><span class="w"> </span><span class="py">ORDER</span><span class="w"> </span><span class="py">BY</span><span class="w"> </span><span class="py">c</span><span class="w"> </span><span class="py">DESC</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>而因为这两个条件最终描述的是同一个字，所以它们是可以被写在一个路径下的：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-GraphQL" data-lang="GraphQL"><span class="line"><span class="cl"><span class="c"># 有一个非第一个位置的字，拼音是 4 声，韵母是 ai，但不是爱</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">MATCH</span><span class="w"> </span><span class="p">(</span><span class="py">char0</span><span class="p">:</span><span class="nc">character</span><span class="p">)</span><span class="err">&lt;-</span><span class="p">[</span><span class="py">with_char_0</span><span class="p">:</span><span class="nc">with_character</span><span class="p">]</span><span class="err">-</span><span class="p">(</span><span class="py">x</span><span class="p">:</span><span class="nc">idiom</span><span class="p">)</span><span class="err">-</span><span class="p">[</span><span class="py">with_pinyin_0</span><span class="p">:</span><span class="nc">with_pinyin</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">pinyin_0</span><span class="p">:</span><span class="nc">character_pinyin</span><span class="p">)</span><span class="err">-</span><span class="p">[:</span><span class="nc">with_pinyin_part</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">final_part_0</span><span class="p">:</span><span class="nc">pinyin_part</span><span class="p">{</span><span class="py">part_type</span><span class="p">:</span><span class="w"> </span><span class="s">&#34;final&#34;</span><span class="p">})</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nc">WHERE</span><span class="w"> </span><span class="py">id</span><span class="p">(</span><span class="py">final_part_0</span><span class="p">)</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="s">&#34;ai&#34;</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">pinyin_0</span><span class="err">.</span><span class="py">character_pinyin</span><span class="err">.</span><span class="py">tone</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="py">4</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">with_pinyin_0</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="py">0</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">with_char_0</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="py">0</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">id</span><span class="p">(</span><span class="py">char0</span><span class="p">)</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="sc">&#34;爱&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># ...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">RETURN</span><span class="w"> </span><span class="py">x</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>更多的 <code>MATCH</code> 语法和例子细节，请大家参考文档：</p>
<ul>
<li>MATCH <a href="https://docs.nebula-graph.com.cn/3.0.0/3.ngql-guide/7.general-query-statements/2.match/" target="_blank" rel="noopener noreffer">https://docs.nebula-graph.com.cn/3.0.0/3.ngql-guide/7.general-query-statements/2.match/</a></li>
<li>图模式 <a href="https://docs.nebula-graph.com.cn/3.0.0/3.ngql-guide/1.nGQL-overview/3.graph-patterns/" target="_blank" rel="noopener noreffer">https://docs.nebula-graph.com.cn/3.0.0/3.ngql-guide/1.nGQL-overview/3.graph-patterns/</a></li>
<li>nGQL 命令 cheatsheet <a href="https://docs.nebula-graph.com.cn/3.0.0/2.quick-start/6.cheatsheet-for-ngql-command/" target="_blank" rel="noopener noreffer">https://docs.nebula-graph.com.cn/3.0.0/2.quick-start/6.cheatsheet-for-ngql-command/</a></li>
</ul>
<h2 id="可视化展示线索" class="headerLink">
    <a href="#%e5%8f%af%e8%a7%86%e5%8c%96%e5%b1%95%e7%a4%ba%e7%ba%bf%e7%b4%a2" class="header-mark"></a>4 可视化展示线索</h2><p>我们把每一个条件的匹配路径作为输出，利用 Nebula Graph 的可视化能力，可以得到：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-GraphQL" data-lang="GraphQL"><span class="line"><span class="cl"><span class="c"># 有一个非第一个位置的字，拼音是 4 声，韵母是 ai，但不是爱</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">MATCH</span><span class="w"> </span><span class="py">p0</span><span class="p">=(</span><span class="py">char0</span><span class="p">:</span><span class="nc">character</span><span class="p">)</span><span class="err">&lt;-</span><span class="p">[</span><span class="py">with_char_0</span><span class="p">:</span><span class="nc">with_character</span><span class="p">]</span><span class="err">-</span><span class="p">(</span><span class="py">x</span><span class="p">:</span><span class="nc">idiom</span><span class="p">)</span><span class="err">-</span><span class="p">[</span><span class="py">with_pinyin_0</span><span class="p">:</span><span class="nc">with_pinyin</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">pinyin_0</span><span class="p">:</span><span class="nc">character_pinyin</span><span class="p">)</span><span class="err">-</span><span class="p">[:</span><span class="nc">with_pinyin_part</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">final_part_0</span><span class="p">:</span><span class="nc">pinyin_part</span><span class="p">{</span><span class="py">part_type</span><span class="p">:</span><span class="w"> </span><span class="s">&#34;final&#34;</span><span class="p">})</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nc">WHERE</span><span class="w"> </span><span class="py">id</span><span class="p">(</span><span class="py">final_part_0</span><span class="p">)</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="s">&#34;ai&#34;</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">pinyin_0</span><span class="err">.</span><span class="py">character_pinyin</span><span class="err">.</span><span class="py">tone</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="py">4</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">with_pinyin_0</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="py">0</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">with_char_0</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="py">0</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">id</span><span class="p">(</span><span class="py">char0</span><span class="p">)</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="sc">&#34;爱&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># 有一个一声的字，不在第二个位置</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">MATCH</span><span class="w"> </span><span class="py">p1</span><span class="p">=(</span><span class="py">x</span><span class="p">:</span><span class="nc">idiom</span><span class="p">)</span><span class="w"> </span><span class="err">-</span><span class="p">[</span><span class="py">with_pinyin_1</span><span class="p">:</span><span class="nc">with_pinyin</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">pinyin_1</span><span class="p">:</span><span class="nc">character_pinyin</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">WHERE</span><span class="w"> </span><span class="py">pinyin_1</span><span class="err">.</span><span class="py">character_pinyin</span><span class="err">.</span><span class="py">tone</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="py">1</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">with_pinyin_1</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="py">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># 有一个字韵母是 ing，不在第四个位置</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">MATCH</span><span class="w"> </span><span class="py">p2</span><span class="p">=(</span><span class="py">x</span><span class="p">:</span><span class="nc">idiom</span><span class="p">)</span><span class="w"> </span><span class="err">-</span><span class="p">[</span><span class="py">with_pinyin_2</span><span class="p">:</span><span class="nc">with_pinyin</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(:</span><span class="nc">character_pinyin</span><span class="p">)</span><span class="err">-</span><span class="p">[:</span><span class="nc">with_pinyin_part</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">final_part_2</span><span class="p">:</span><span class="nc">pinyin_part</span><span class="p">{</span><span class="py">part_type</span><span class="p">:</span><span class="w"> </span><span class="s">&#34;final&#34;</span><span class="p">})</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nc">WHERE</span><span class="w"> </span><span class="py">id</span><span class="p">(</span><span class="py">final_part_2</span><span class="p">)</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="s">&#34;ing&#34;</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">with_pinyin_2</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">!=</span><span class="w"> </span><span class="py">3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># 第四个字是二声</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">MATCH</span><span class="w"> </span><span class="py">p3</span><span class="p">=(</span><span class="py">x</span><span class="p">:</span><span class="nc">idiom</span><span class="p">)</span><span class="w"> </span><span class="err">-</span><span class="p">[</span><span class="py">with_pinyin_3</span><span class="p">:</span><span class="nc">with_pinyin</span><span class="p">]</span><span class="err">-&gt;</span><span class="p">(</span><span class="py">pinyin_3</span><span class="p">:</span><span class="nc">character_pinyin</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">WHERE</span><span class="w"> </span><span class="py">pinyin_3</span><span class="err">.</span><span class="py">character_pinyin</span><span class="err">.</span><span class="py">tone</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="py">2</span><span class="w"> </span><span class="py">AND</span><span class="w"> </span><span class="py">with_pinyin_3</span><span class="err">.</span><span class="py">position</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="py">3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="py">RETURN</span><span class="w"> </span><span class="py">p0</span><span class="p">,</span><span class="py">p1</span><span class="p">,</span><span class="py">p2</span><span class="p">,</span><span class="py">p3</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>在可视化工具的 Console 控制台里执行上边的语句之后，选择导入图探索，就可以看到</p>
<p><a class="lightgallery" href="/resolve-wordle/studio.webp" title="/resolve-wordle/studio.webp" data-thumbnail="/resolve-wordle/studio.webp">
        
    </a></p>
<h2 id="下一步" class="headerLink">
    <a href="#%e4%b8%8b%e4%b8%80%e6%ad%a5" class="header-mark"></a>5 下一步</h2><p>如果大家是从本文第一次了解到 Nebula Graph 图数据库，那么大家可以下一步从 <a href="https://github.com/vesoft-inc/nebula" target="_blank" rel="noopener noreffer">Nebula Graph</a> 项目和 Nebula Graph 社区的官方 Bilibili 站点 👉🏻 <a href="https://space.bilibili.com/472621355" target="_blank" rel="noopener noreffer">https://space.bilibili.com/472621355</a> 了解更多有意思的入门知识。</p>
<p>另外，<a href="https://nebula-graph.com.cn/demo/" target="_blank" rel="noopener noreffer">这里</a>是 Nebula Graph 的官方线上试玩环境，大家可以照着<a href="https://docs.nebula-graph.com.cn/" target="_blank" rel="noopener noreffer">文档</a>，利用试玩环境尝鲜。</p>
<p>后边，Nebula Graph 会开展每天的汉兜 nGQL 体操活动，敬请关注哈！</p>
<p>Happy Graphing!</p>
<h2 id="附录搭建成语知识图谱" class="headerLink">
    <a href="#%e9%99%84%e5%bd%95%e6%90%ad%e5%bb%ba%e6%88%90%e8%af%ad%e7%9f%a5%e8%af%86%e5%9b%be%e8%b0%b1" class="header-mark"></a>6 附录：搭建成语知识图谱</h2><h3 id="收集生成图谱数据" class="headerLink">
    <a href="#%e6%94%b6%e9%9b%86%e7%94%9f%e6%88%90%e5%9b%be%e8%b0%b1%e6%95%b0%e6%8d%ae" class="header-mark"></a>6.1 收集、生成图谱数据</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ python3 graph_data_generator.py
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="导入数据到-nebula-graph-图数据库" class="headerLink">
    <a href="#%e5%af%bc%e5%85%a5%e6%95%b0%e6%8d%ae%e5%88%b0-nebula-graph-%e5%9b%be%e6%95%b0%e6%8d%ae%e5%ba%93" class="header-mark"></a>6.2 导入数据到 Nebula Graph 图数据库</h3><h4 id="部署图数据库" class="headerLink">
    <a href="#%e9%83%a8%e7%bd%b2%e5%9b%be%e6%95%b0%e6%8d%ae%e5%ba%93" class="header-mark"></a>6.2.1 部署图数据库</h4><blockquote>
<p>借助于 Nebula-Up <a href="https://github.com/wey-gu/nebula-up/" target="_blank" rel="noopener noreffer">https://github.com/wey-gu/nebula-up/</a> ，一行就可以了。</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -fsSL nebula-up.siwei.io/install.sh <span class="p">|</span> bash -s -- v3.0.0
</span></span></code></pre></td></tr></table>
</div>
</div><p>部署成功的话，会看到这样的结果：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">┌────────────────────────────────────────┐
</span></span><span class="line"><span class="cl">│ 🌌 Nebula-Graph Playground is Up now!  │
</span></span><span class="line"><span class="cl">├────────────────────────────────────────┤
</span></span><span class="line"><span class="cl">│                                        │
</span></span><span class="line"><span class="cl">│ 🎉 Congrats! Your Nebula is Up now!    │
</span></span><span class="line"><span class="cl">│    $ <span class="nb">cd</span> ~/.nebula-up                   │
</span></span><span class="line"><span class="cl">│                                        │
</span></span><span class="line"><span class="cl">│ 🌏 You can access it from browser:     │
</span></span><span class="line"><span class="cl">│      http://127.0.0.1:7001             │
</span></span><span class="line"><span class="cl">│      http://&lt;other_interface&gt;:7001     │
</span></span><span class="line"><span class="cl">│                                        │
</span></span><span class="line"><span class="cl">│ 🔥 Or access via Nebula Console:       │
</span></span><span class="line"><span class="cl">│    $ ~/.nebula-up/console.sh           │
</span></span><span class="line"><span class="cl">│                                        │
</span></span><span class="line"><span class="cl">│    To remove the playground:           │
</span></span><span class="line"><span class="cl">│    $ ~/.nebula-up/uninstall.sh         │
</span></span><span class="line"><span class="cl">│                                        │
</span></span><span class="line"><span class="cl">│ 🚀 Have Fun!                           │
</span></span><span class="line"><span class="cl">│                                        │
</span></span><span class="line"><span class="cl">└────────────────────────────────────────┘
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="图谱入库" class="headerLink">
    <a href="#%e5%9b%be%e8%b0%b1%e5%85%a5%e5%ba%93" class="header-mark"></a>6.2.2 图谱入库</h4><blockquote>
<p>借助于 Nebula-Importer <a href="https://github.com/vesoft-inc/nebula-importer/" target="_blank" rel="noopener noreffer">https://github.com/vesoft-inc/nebula-importer/</a> ，一行就可以了。</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker run --rm -ti <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --network<span class="o">=</span>nebula-docker-compose_nebula-net <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -v <span class="si">${</span><span class="nv">PWD</span><span class="si">}</span>/importer_conf.yaml:/root/importer_conf.yaml <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -v <span class="si">${</span><span class="nv">PWD</span><span class="si">}</span>/output:/root <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    vesoft/nebula-importer:v3.0.0 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --config /root/importer_conf.yaml
</span></span></code></pre></td></tr></table>
</div>
</div><p>大概一两分钟数据就导入成功了，命令也会正常退出。</p>
<blockquote>
<p>连到图数据库的 console</p>
</blockquote>
<p>进入 Console 的容器执行下边的命令：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ~/.nebula-up/console.sh
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># nebula-console -addr graphd -port 9669 -user root -p nebula</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>检查一下导入的数据：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[(</span><span class="k">none</span><span class="p">)]</span><span class="o">&gt;</span><span class="w"> </span><span class="k">show</span><span class="w"> </span><span class="n">spaces</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">--------------------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="n">Name</span><span class="w">               </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">--------------------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;chinese_idiom&#34;</span><span class="w">    </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">--------------------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[(</span><span class="k">none</span><span class="p">)]</span><span class="o">&gt;</span><span class="w"> </span><span class="n">use</span><span class="w"> </span><span class="n">chinese_idiom</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Execution</span><span class="w"> </span><span class="n">succeeded</span><span class="w"> </span><span class="p">(</span><span class="n">time</span><span class="w"> </span><span class="n">spent</span><span class="w"> </span><span class="mi">1510</span><span class="o">/</span><span class="mi">2329</span><span class="w"> </span><span class="n">us</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Fri</span><span class="p">,</span><span class="w"> </span><span class="mi">25</span><span class="w"> </span><span class="n">Feb</span><span class="w"> </span><span class="mi">2022</span><span class="w"> </span><span class="mi">08</span><span class="p">:</span><span class="mi">53</span><span class="p">:</span><span class="mi">11</span><span class="w"> </span><span class="n">UTC</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[</span><span class="n">chinese_idiom</span><span class="p">]</span><span class="o">&gt;</span><span class="w"> </span><span class="k">match</span><span class="w"> </span><span class="n">p</span><span class="o">=</span><span class="p">(</span><span class="err">成语</span><span class="p">:</span><span class="n">idiom</span><span class="p">)</span><span class="w"> </span><span class="k">return</span><span class="w"> </span><span class="n">p</span><span class="w"> </span><span class="k">limit</span><span class="w"> </span><span class="mi">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">------------------------------------------------------------------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="n">p</span><span class="w">                                                                </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">------------------------------------------------------------------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="o">&lt;</span><span class="p">(</span><span class="s2">&#34;一丁不识&#34;</span><span class="w"> </span><span class="p">:</span><span class="n">idiom</span><span class="err">{</span><span class="n">pinyin</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;[&#39;yi1&#39;, &#39;ding1&#39;, &#39;bu4&#39;, &#39;shi2&#39;]&#34;</span><span class="err">}</span><span class="p">)</span><span class="o">&gt;</span><span class="w"> </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="o">&lt;</span><span class="p">(</span><span class="s2">&#34;一丝不挂&#34;</span><span class="w"> </span><span class="p">:</span><span class="n">idiom</span><span class="err">{</span><span class="n">pinyin</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;[&#39;yi1&#39;, &#39;si1&#39;, &#39;bu4&#39;, &#39;gua4&#39;]&#34;</span><span class="err">}</span><span class="p">)</span><span class="o">&gt;</span><span class="w">   </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">------------------------------------------------------------------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[</span><span class="n">chinese_idiom</span><span class="p">]</span><span class="o">&gt;</span><span class="w"> </span><span class="n">SUBMIT</span><span class="w"> </span><span class="n">JOB</span><span class="w"> </span><span class="n">STATS</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">------------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="k">New</span><span class="w"> </span><span class="n">Job</span><span class="w"> </span><span class="n">Id</span><span class="w"> </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">------------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="mi">11</span><span class="w">         </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">------------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[</span><span class="n">chinese_idiom</span><span class="p">]</span><span class="o">&gt;</span><span class="w"> </span><span class="k">SHOW</span><span class="w"> </span><span class="n">STATS</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">---------+--------------------+--------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="k">Type</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="n">Name</span><span class="w">               </span><span class="o">|</span><span class="w"> </span><span class="k">Count</span><span class="w">  </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">---------+--------------------+--------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Tag&#34;</span><span class="w">   </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;character&#34;</span><span class="w">        </span><span class="o">|</span><span class="w"> </span><span class="mi">4847</span><span class="w">   </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Tag&#34;</span><span class="w">   </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;character_pinyin&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">1336</span><span class="w">   </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Tag&#34;</span><span class="w">   </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;idiom&#34;</span><span class="w">            </span><span class="o">|</span><span class="w"> </span><span class="mi">29503</span><span class="w">  </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Tag&#34;</span><span class="w">   </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;pinyin_part&#34;</span><span class="w">      </span><span class="o">|</span><span class="w"> </span><span class="mi">57</span><span class="w">     </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Edge&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;with_character&#34;</span><span class="w">   </span><span class="o">|</span><span class="w"> </span><span class="mi">116090</span><span class="w"> </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Edge&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;with_pinyin&#34;</span><span class="w">      </span><span class="o">|</span><span class="w"> </span><span class="mi">5943</span><span class="w">   </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Edge&#34;</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;with_pinyin_part&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">3290</span><span class="w">   </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Space&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;vertices&#34;</span><span class="w">         </span><span class="o">|</span><span class="w"> </span><span class="mi">35739</span><span class="w">  </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;Space&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;edges&#34;</span><span class="w">            </span><span class="o">|</span><span class="w"> </span><span class="mi">125323</span><span class="w"> </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">---------+--------------------+--------+
</span></span></span></code></pre></td></tr></table>
</div>
</div><h2 id="附录图建模的-schema-ngql" class="headerLink">
    <a href="#%e9%99%84%e5%bd%95%e5%9b%be%e5%bb%ba%e6%a8%a1%e7%9a%84-schema-ngql" class="header-mark"></a>7 附录：图建模的 Schema nGQL</h2><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">CREATE</span><span class="w"> </span><span class="k">SPACE</span><span class="w"> </span><span class="k">IF</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">EXISTS</span><span class="w"> </span><span class="n">chinese_idiom</span><span class="p">(</span><span class="n">partition_num</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span><span class="w"> </span><span class="n">replica_factor</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="n">vid_type</span><span class="o">=</span><span class="n">FIXED_STRING</span><span class="p">(</span><span class="mi">24</span><span class="p">));</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">USE</span><span class="w"> </span><span class="n">chinese_idiom</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="err">创建点的类型</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="n">idiom</span><span class="p">(</span><span class="n">pinyin</span><span class="w"> </span><span class="n">string</span><span class="p">);</span><span class="w"> </span><span class="o">#</span><span class="err">成语</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="nb">character</span><span class="p">();</span><span class="w"> </span><span class="o">#</span><span class="err">汉字</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="n">character_pinyin</span><span class="p">(</span><span class="n">tone</span><span class="w"> </span><span class="nb">int</span><span class="p">);</span><span class="w"> </span><span class="o">#</span><span class="err">单字的拼音</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">TAG</span><span class="w"> </span><span class="n">pinyin_part</span><span class="p">(</span><span class="n">part_type</span><span class="w"> </span><span class="n">string</span><span class="p">);</span><span class="w"> </span><span class="o">#</span><span class="err">拼音的声部</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="err">创建边的类型</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="n">with_character</span><span class="p">(</span><span class="k">position</span><span class="w"> </span><span class="nb">int</span><span class="p">);</span><span class="w"> </span><span class="o">#</span><span class="err">包含汉字</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="n">with_pinyin</span><span class="p">(</span><span class="k">position</span><span class="w"> </span><span class="nb">int</span><span class="p">);</span><span class="w"> </span><span class="o">#</span><span class="err">读作</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">EDGE</span><span class="w"> </span><span class="n">with_pinyin_part</span><span class="p">(</span><span class="n">part_type</span><span class="w"> </span><span class="n">string</span><span class="p">);</span><span class="w"> </span><span class="o">#</span><span class="err">包含声部</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>Nebula Graph 索引详解</title>
    <link>https://siwei.io/nebula-index-explained/</link>
    <pubDate>Sun, 20 Feb 2022 16:35:53 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/nebula-index-explained/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/nebula-index-explained/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p><code>index not found</code>？找不到索引？为什么我要创建 Nebula Graph 索引？什么时候要用到 Nebula Graph 原生索引，一文把这些搞清楚。</p>
</blockquote>
<p>Nebula Graph 的索引其实和传统的关系型数据库中的索引很像，但是又有一些容易让人疑惑的区别。刚开始了解 Nebula 的同学会疑惑于：</p>
<ul>
<li>不清楚 Nebula Graph 图数据库中的索引到的是什么概念</li>
<li>我应该什么时候使用 Nebula Graph 索引</li>
<li>Nebula Graph 索引怎么影响到写入性能</li>
</ul>
<p>这篇文章里，我们就把这些问题回答好。</p>
<h2 id="到底-nebula-graph-索引是什么" class="headerLink">
    <a href="#%e5%88%b0%e5%ba%95-nebula-graph-%e7%b4%a2%e5%bc%95%e6%98%af%e4%bb%80%e4%b9%88" class="header-mark"></a>1 到底 Nebula Graph 索引是什么</h2><p>简而言之，Nebula Graph 索引是用来，且只用来针对纯属性条件出发查询场景的</p>
<ul>
<li>图游走（walk）查询中的属性条件过滤不需要它</li>
<li>纯属性条件出发查询（注：非采样情况）必须创建索引</li>
</ul>
<h3 id="纯属性条件出发查询" class="headerLink">
    <a href="#%e7%ba%af%e5%b1%9e%e6%80%a7%e6%9d%a1%e4%bb%b6%e5%87%ba%e5%8f%91%e6%9f%a5%e8%af%a2" class="header-mark"></a>1.1 纯属性条件出发查询</h3><p>我们知道在传统关系型数据库中，索引是对表数据的一个或多个针对特定<strong>列</strong>重排序的副本，它用来<strong>加速特定列过滤条件的读查询</strong>并带来了额外的数据写入（加速而非这样查询的必须前提）。</p>
<p>在 Nebula Graph 图数据库里，索引则是对<strong>点、边特定属性数据</strong>重排序的副本，用来提供<strong>纯属性条件出发查询</strong>（如下边的查询：从只给定了点边属性条件，而非点的 ID 出发去获取图数据）</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="o">####</span><span class="w"> </span><span class="err">必须</span><span class="w"> </span><span class="n">Nebula</span><span class="w"> </span><span class="n">Graph</span><span class="w"> </span><span class="err">索引存在的查询</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="n">query</span><span class="w"> </span><span class="mi">0</span><span class="w"> </span><span class="err">纯属性条件出发查询</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">LOOKUP</span><span class="w"> </span><span class="k">ON</span><span class="w"> </span><span class="n">tag1</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="n">col1</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="k">AND</span><span class="w"> </span><span class="n">col2</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">&#34;foo&#34;</span><span class="w"> </span><span class="err">\</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">YIELD</span><span class="w"> </span><span class="n">tag1</span><span class="p">.</span><span class="n">col1</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="n">col1</span><span class="p">,</span><span class="w"> </span><span class="n">tag1</span><span class="p">.</span><span class="n">col3</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="n">col3</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="n">query</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="err">纯属性条件出发查询</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">v</span><span class="p">:</span><span class="n">player</span><span class="w"> </span><span class="err">{</span><span class="w"> </span><span class="n">name</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;Tim Duncan&#39;</span><span class="w"> </span><span class="err">}</span><span class="p">)</span><span class="c1">--&gt;(v2:player) \
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="w">        </span><span class="k">RETURN</span><span class="w"> </span><span class="n">v2</span><span class="p">.</span><span class="n">player</span><span class="p">.</span><span class="n">name</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">Name</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>上边这两个纯属性条件出发查询就是字面意思的”根据给定的属性条件获取点或者边本身“ ，反面的例子则是给定了点的 ID：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="o">####</span><span class="w"> </span><span class="err">不基于索引的查询</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="n">query</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span><span class="w"> </span><span class="err">从给定的点做的游走查询</span><span class="w"> </span><span class="n">vertex</span><span class="w"> </span><span class="n">VID</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;player100&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">GO</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="s2">&#34;player100&#34;</span><span class="w"> </span><span class="n">OVER</span><span class="w"> </span><span class="n">follow</span><span class="w"> </span><span class="n">REVERSELY</span><span class="w"> </span><span class="err">\</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">YIELD</span><span class="w"> </span><span class="n">src</span><span class="p">(</span><span class="n">edge</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">id</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="err">\</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">GO</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="err">$</span><span class="o">-</span><span class="p">.</span><span class="n">id</span><span class="w"> </span><span class="n">OVER</span><span class="w"> </span><span class="n">serve</span><span class="w"> </span><span class="err">\</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">WHERE</span><span class="w"> </span><span class="n">properties</span><span class="p">(</span><span class="err">$</span><span class="o">^</span><span class="p">).</span><span class="n">age</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">20</span><span class="w"> </span><span class="err">\</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">YIELD</span><span class="w"> </span><span class="n">properties</span><span class="p">(</span><span class="err">$</span><span class="o">^</span><span class="p">).</span><span class="n">name</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">FriendOf</span><span class="p">,</span><span class="w"> </span><span class="n">properties</span><span class="p">(</span><span class="err">$$</span><span class="p">).</span><span class="n">name</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">Team</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="n">query</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span><span class="w"> </span><span class="err">从给定的点做的游走查询</span><span class="w"> </span><span class="n">vertex</span><span class="w"> </span><span class="n">VID</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;player101&#34;</span><span class="w"> </span><span class="err">或者</span><span class="w"> </span><span class="s2">&#34;player102&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">MATCH</span><span class="w"> </span><span class="p">(</span><span class="n">v</span><span class="p">:</span><span class="n">player</span><span class="w"> </span><span class="err">{</span><span class="w"> </span><span class="n">name</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;Tim Duncan&#39;</span><span class="w"> </span><span class="err">}</span><span class="p">)</span><span class="c1">--(v2) \
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="w">        </span><span class="k">WHERE</span><span class="w"> </span><span class="n">id</span><span class="p">(</span><span class="n">v2</span><span class="p">)</span><span class="w"> </span><span class="k">IN</span><span class="w"> </span><span class="p">[</span><span class="s2">&#34;player101&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;player102&#34;</span><span class="p">]</span><span class="w"> </span><span class="err">\</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">RETURN</span><span class="w"> </span><span class="n">v2</span><span class="p">.</span><span class="n">player</span><span class="p">.</span><span class="n">name</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">Name</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>我们仔细看前边的 <code>query 1</code> 和 <code>query 3</code>，尽管语句中条件都有针对 tag 为 player 的过滤： <code>{ name: 'Tim Duncan' }</code> ：</p>
<ul>
<li>
<p><code>query 3</code>之中不需要索引，因为它可以：</p>
<ul>
<li>更直接的从已知的 <code>v2</code> 顶点： <code>[&quot;player101&quot;, &quot;player102&quot;]</code></li>
<li>向外扩展、游走（GetNeighbors() 获得边的另一端的点，然后GetVertices() 得到下一跳的 <code>v</code>），根据 v.player.name 过滤掉不要的数据</li>
</ul>
</li>
<li>
<p><code>query 1</code> 则不同，它因为没有任何给定的顶点 ID：</p>
<ul>
<li>只能从属性条件入手，<code>{ name: 'Tim Duncan' }</code>，在按照 name 排序了的索引数据中先找到符合的点：IndexScan() 得到 <code>v</code></li>
<li>然后再从 <code>v</code> 做 GetNeighbors() 获得边的另一端 的 <code>v2</code> ，在通过 GetVertices() 去获得下一跳 <code>v2</code> 中的数据</li>
</ul>
</li>
</ul>
<p>其实，这里的关键就是在于是查询是否存在给定的顶点 ID（Vertex ID），下边两个查询的执行计划里更清晰地比较了他们的区别：</p>
<table>
<thead>
<tr>
<th><code>query 1</code>, 需要基于索引，纯属性条件出发查询</th>
<th><code>query 3</code>, 从已知 VID，不需要索引</th>
</tr>
</thead>
<tbody>
<tr>
<td><a class="lightgallery" href="./query-based-on-index.webp" title="query-based-on-index" data-thumbnail="./query-based-on-index.webp">
        
    </a></td>
<td><a class="lightgallery" href="./query-requires-no-index.webp" title="query-requires-no-index" data-thumbnail="./query-requires-no-index.webp">
        
    </a></td>
</tr>
</tbody>
</table>
<h3 id="为什么纯属性条件出发查询里必须要索引呢" class="headerLink">
    <a href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e7%ba%af%e5%b1%9e%e6%80%a7%e6%9d%a1%e4%bb%b6%e5%87%ba%e5%8f%91%e6%9f%a5%e8%af%a2%e9%87%8c%e5%bf%85%e9%a1%bb%e8%a6%81%e7%b4%a2%e5%bc%95%e5%91%a2" class="header-mark"></a>1.2 为什么纯属性条件出发查询里必须要索引呢？</h3><p>因为 Nebula Graph 在存储数据的时候，它的结构是面向分布式与关联关系设计的，类似表结构数据库中无索引的全扫描条件搜索实际上更加昂贵，所以设计上被有意禁止了。</p>
<blockquote>
<p>注: 如果不追求全部数据，只要采样一部分，3.0 里之后是支持不强制索引 LIMIT <n> 的情况的，如下查询（有 LIMIT）不需要索引：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># sample vertex
</span></span><span class="line"><span class="cl">MATCH (v:team) RETURN v LIMIT 3
</span></span><span class="line"><span class="cl"># or sample edge
</span></span><span class="line"><span class="cl">MATCH ()-[e:follow]-&gt;() RETURN e LIMIT 3
</span></span></code></pre></td></tr></table>
</div>
</div></blockquote>
<h3 id="为什么只有纯属性条件出发查询" class="headerLink">
    <a href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e5%8f%aa%e6%9c%89%e7%ba%af%e5%b1%9e%e6%80%a7%e6%9d%a1%e4%bb%b6%e5%87%ba%e5%8f%91%e6%9f%a5%e8%af%a2" class="header-mark"></a>1.3 为什么只有纯属性条件出发查询</h3><p>我们比较一下正常的图查询 <strong>graph-queries</strong> 和纯属性条件出发查询 <strong>pure-prop-condition queries</strong>：</p>
<ul>
<li>graph-queries： 如 <code>query 2</code> 、 <code>query 3</code>是沿着边一路找到特定路径条件的扩展游走</li>
<li>pure-prop-condition queries：如 <code>query 0</code> and <code>query 1</code>  是只通过一定属性条件（或者是无限制条件）找到满足的点、边</li>
</ul>
<p>而在 Nebula Graph 里，graph-queries 在扩展的时候，图的原始数据已经按照 VID（点和边都是）排序过了（或者说在数据里已经索引过了），这个排序带来连续存储（物理上临接）使得扩展游走本身就是优化、很快的。</p>
<h3 id="总结索引是什么索引不是什么" class="headerLink">
    <a href="#%e6%80%bb%e7%bb%93%e7%b4%a2%e5%bc%95%e6%98%af%e4%bb%80%e4%b9%88%e7%b4%a2%e5%bc%95%e4%b8%8d%e6%98%af%e4%bb%80%e4%b9%88" class="header-mark"></a>1.4 总结：索引是什么，索引不是什么？</h3><p>索引是什么？</p>
<ul>
<li>Nebula Graph 索引是为了从给定属性条件查点、边的一份属性数据的排序，它用写入的代价是的这种读查询模式成为可能。</li>
</ul>
<p>索引不是什么？</p>
<ul>
<li>Nebula Graph 索引不是用来加速一般图查询的：从一个点开始向外拓展的查询（即使是过滤属性条件的）不会依赖原生索引，因为 Nebula 数据自身的存储就是面向这种查询优化、排序的。</li>
</ul>
<h2 id="一些-nebula-graph-索引的设计细节" class="headerLink">
    <a href="#%e4%b8%80%e4%ba%9b-nebula-graph-%e7%b4%a2%e5%bc%95%e7%9a%84%e8%ae%be%e8%ae%a1%e7%bb%86%e8%8a%82" class="header-mark"></a>2 一些 Nebula Graph 索引的设计细节</h2><p>为了更好理解索引的限制、代价、能力，咱们来解释更多他的细节</p>
<ul>
<li>
<p>Nebula Graph 索引是在本地（不是分开、中心化）和点数据被一起存储、分片的。</p>
</li>
<li>
<p>它只支持左匹配</p>
<ul>
<li>因为底层是 RocksDB Prefix Scan</li>
</ul>
</li>
<li>
<p>性能代价:</p>
<ul>
<li>写入时候的路径：不只是多一分数据，为了保证一致性，还有昂贵的读操作</li>
<li>读路径：基于规则的优化选择索引，Fan Out 到所有 StorageD</li>
</ul>
</li>
</ul>
<p>这些信息也在我的<a href="https://www.siwei.io/sketch-notes/" target="_blank" rel="noopener noreffer">手绘图和视频</a>里可以看到：</p>
<p><a class="lightgallery" href="https://www.siwei.io/sketches/nebula-index-demystified/nebula-index-demystified.webp" title="https://www.siwei.io/sketches/nebula-index-demystified/nebula-index-demystified.webp" data-thumbnail="https://www.siwei.io/sketches/nebula-index-demystified/nebula-index-demystified.webp">
        
    </a></p>
<blockquote>
<p>因为左匹配的设计，在有更复杂的针对纯属性条件出发查询里涉及到通配、REGEXP这样的全文搜索情况，Nebula Graph 提供了全文索引的功能，它是利用 Raft Listener 去异步将数据写到外部 Elasticsearch 集群之中，并在查询的时候去查 ES 去做到的，见<a href="https://docs.nebula-graph.com.cn/3.0.0/4.deployment-and-installation/6.deploy-text-based-index/2.deploy-es/" target="_blank" rel="noopener noreffer">文档</a>。</p>
</blockquote>
<p>在这个手绘图中，我们还可以看出</p>
<ul>
<li>Write path
<ul>
<li>写入索引数据是同步操作的</li>
</ul>
</li>
<li>Read path
<ul>
<li>这部分画了一个 RBO 的例子，查询里的规则假设 col2 相等匹配排在左边的情况下，性能优于 col1 的大小比较匹配，所以选择了第二个索引</li>
<li>选好了索引之后，扫描索引的请求被 fan out 到存储节点上，这其中有些过滤条件比如 top n 是可以下推的</li>
</ul>
</li>
</ul>
<p>结论：</p>
<ul>
<li>因为写入的代价，只有必须用索引的时候采用，如果采样查询能满足读的要求，可以不创建索引而用 LIMIT <n>。</li>
<li>索引有左匹配的限制
<ul>
<li>符合查询的顺序要仔细设计</li>
<li>有时候需要使用全文索引 <a href="https://docs.nebula-graph.com.cn/3.0.0/4.deployment-and-installation/6.deploy-text-based-index/2.deploy-es/" target="_blank" rel="noopener noreffer">full-text index</a>。</li>
</ul>
</li>
</ul>
<h2 id="索引的使用" class="headerLink">
    <a href="#%e7%b4%a2%e5%bc%95%e7%9a%84%e4%bd%bf%e7%94%a8" class="header-mark"></a>3 索引的使用</h2><p>具体要参考<a href="https://docs.nebula-graph.io/3.0.0/3.ngql-guide/14.native-index-statements/" target="_blank" rel="noopener noreffer">索引文档</a>一些要点是：</p>
<ul>
<li>
<p>在 tag 或者 edge type 上针对想要被条件反查点边的属性创建索引</p>
<ul>
<li><code>CREATE INDEX</code></li>
</ul>
</li>
<li>
<p>创建索引之后的索引部分数据会同步写入，但是如果创建索引之前已经有的点边数据对应的索引是需要明确指定去创建的，这是一个异步的 job：</p>
<ul>
<li><code>REBUILD INDEX</code></li>
</ul>
</li>
<li>
<p>触发了异步的 <code>REBUILD INDEX</code> 之后，可以查询状态：</p>
<ul>
<li><code>SHOW INDEX STATUS</code></li>
</ul>
</li>
<li>
<p>利用到索引的查询可以是 LOOKUP，并且常常可以借助管道符在此之上做拓展查询（Graph Query）：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="n">LOOKUP</span><span class="w"> </span><span class="k">ON</span><span class="w"> </span><span class="n">player</span><span class="w"> </span><span class="err">\</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="k">WHERE</span><span class="w"> </span><span class="n">player</span><span class="p">.</span><span class="n">name</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">&#34;Kobe Bryant&#34;</span><span class="err">\</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="n">YIELD</span><span class="w"> </span><span class="n">id</span><span class="p">(</span><span class="n">vertex</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">VertexID</span><span class="p">,</span><span class="w"> </span><span class="n">properties</span><span class="p">(</span><span class="n">vertex</span><span class="p">).</span><span class="n">name</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">name</span><span class="w"> </span><span class="o">|</span><span class="err">\</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="k">GO</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="err">$</span><span class="o">-</span><span class="p">.</span><span class="n">VertexID</span><span class="w"> </span><span class="n">OVER</span><span class="w"> </span><span class="n">serve</span><span class="w"> </span><span class="err">\</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="n">YIELD</span><span class="w"> </span><span class="err">$</span><span class="o">-</span><span class="p">.</span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="n">properties</span><span class="p">(</span><span class="n">edge</span><span class="p">).</span><span class="n">start_year</span><span class="p">,</span><span class="w"> </span><span class="n">properties</span><span class="p">(</span><span class="n">edge</span><span class="p">).</span><span class="n">end_year</span><span class="p">,</span><span class="w"> </span><span class="n">properties</span><span class="p">(</span><span class="err">$$</span><span class="p">).</span><span class="n">name</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>也可以是 MATCH ，这里边 <code>v</code> 是通过索引得到的，而 <code>v2</code> 则是在数据（非索引）部分拓展查询获得的。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">MATCH (v:player{name:&#34;Tim Duncan&#34;})--(v2:player) \
</span></span><span class="line"><span class="cl">  RETURN v2.player.name AS Name;
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>复合索引的能力与限制</p>
<p>理解原生索引的匹配是左匹配能让我们知道对于超过一个属性的索引：复合索引，并且能帮助我们理解它的能力有限制，这里说几个结论：</p>
<ul>
<li>我们创建针对多个属性的复合索引是顺序有关的
<ul>
<li>比如，我们创建一个双属性复合索引 index_a: <code>(isRisky: bool, age: int)</code>，和 index_b: <code>(age: int, isRisky: bool)</code> 在根据 <code>WHERE n.user.isRisky == true AND n.user.age &gt; 18</code> 这个条件查询时候，index_a 因为左匹配一个相等的短字段，显然效率更高。</li>
</ul>
</li>
<li>只有复合左匹配的被复合索引的属性真子集的过滤条件才能被只支持
<ul>
<li>比如，index_a: <code>(isRisky: bool, age: int)</code>，和 index_b: <code>(age: int, isRisky: bool)</code> 在查询 <code>WHERE n.user.age &gt; 18</code> 这个语句的时候, 只有 index_b 复合最左匹配，能满足这个查询。</li>
</ul>
</li>
<li>针对一些从属性作为查询的起点，找点、边的情况，原生索引是不能满足全文搜索的匹配场景的，这时候，我们应该考虑使用 Nebula 全文索引，它是 Nebula 社区支持的开箱即用的外置 Elastic Search，通过配置，创建了全文索引的数据会通过 Raft listener 异步更新到 Elastic 集群中，他的查询入口也是 <code>LOOKUP</code>，详细的信息请<a href="https://docs.nebula-graph.com.cn/3.0.1/4.deployment-and-installation/6.deploy-text-based-index/2.deploy-es/" target="_blank" rel="noopener noreffer">参考文档</a>。</li>
</ul>
</li>
</ul>
<h2 id="回顾" class="headerLink">
    <a href="#%e5%9b%9e%e9%a1%be" class="header-mark"></a>4 回顾</h2><ul>
<li>Nebula Graph 索引在只提供属性条件情况下通过对属性的排序副本扫描查点、边</li>
<li>Nebula Graph 索引<strong>不是</strong>用来图拓展查询的</li>
<li>Nebula Graph 索引是左匹配，不是用来做模糊全文搜索的</li>
<li>Nebula Graph 索引在写入时候有性能代价</li>
<li>记得如果创建 Nebula Graph 索引之前已经有相应点边上的数据，要重建索引</li>
</ul>
<p>Happy Graphing!</p>
<p>Feture image credit to <a href="https://unsplash.com/photos/ZiQkhI7417A" target="_blank" rel="noopener noreffer">Alina</a></p>
]]></description>
</item><item>
    <title>为什么我的 Nebula-Spark-Connector、Nebula-Algorithm 连不上 K8s 部署的 Nebula Graph 集群？</title>
    <link>https://siwei.io/nebula-algo-spark-k8s/</link>
    <pubDate>Mon, 14 Feb 2022 18:47:53 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/nebula-algo-spark-k8s/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/nebula-algo-spark-k8s/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p>一文了解 K8s 部署的 Nebula Graph 集群的 Nebula-Algorithm 使用方法。</p>
</blockquote>
<h2 id="步骤" class="headerLink">
    <a href="#%e6%ad%a5%e9%aa%a4" class="header-mark"></a>1 步骤</h2><p>最方便的方法是将 Nebula Algorithm/ Spark 运行在与 Nebula-Operator 相同的网络命名空间里，将 <code>show hosts meta</code> 的 MetaD <code>域名:端口</code> 格式的地址填进配置里就可以了。</p>
<blockquote>
<p>注：需要 2.6.2 或者更新的版本，Spark-Connector/Algorithm 才支持域名形式的 MetaD 地址。</p>
</blockquote>
<ul>
<li>获取 MetaD 地址</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">(</span>root@nebula<span class="o">)</span> <span class="o">[(</span>none<span class="o">)]</span>&gt; show hosts meta
</span></span><span class="line"><span class="cl">+------------------------------------------------------------------+------+----------+--------+--------------+---------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> Host                                                             <span class="p">|</span> Port <span class="p">|</span> Status   <span class="p">|</span> Role   <span class="p">|</span> Git Info Sha <span class="p">|</span> Version <span class="p">|</span>
</span></span><span class="line"><span class="cl">+------------------------------------------------------------------+------+----------+--------+--------------+---------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> <span class="s2">&#34;nebula-metad-0.nebula-metad-headless.default.svc.cluster.local&#34;</span> <span class="p">|</span> <span class="m">9559</span> <span class="p">|</span> <span class="s2">&#34;ONLINE&#34;</span> <span class="p">|</span> <span class="s2">&#34;META&#34;</span> <span class="p">|</span> <span class="s2">&#34;d113f4a&#34;</span>    <span class="p">|</span> <span class="s2">&#34;2.6.2&#34;</span> <span class="p">|</span>
</span></span><span class="line"><span class="cl">+------------------------------------------------------------------+------+----------+--------+--------------+---------+
</span></span><span class="line"><span class="cl">Got <span class="m">1</span> rows <span class="o">(</span><span class="nb">time</span> spent 1378/2598 us<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Mon, <span class="m">14</span> Feb <span class="m">2022</span> 08:22:33 UTC
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>填写 Algorithm 的配置文件</li>
</ul>
<blockquote>
<p>Ref: <a href="https://github.com/vesoft-inc/nebula-algorithm/blob/master/nebula-algorithm/src/main/resources/application.conf" target="_blank" rel="noopener noreffer">https://github.com/vesoft-inc/nebula-algorithm/blob/master/nebula-algorithm/src/main/resources/application.conf</a></p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-toml" data-lang="toml"><span class="line"><span class="cl"><span class="c"># ...</span>
</span></span><span class="line"><span class="cl">  <span class="nx">nebula</span><span class="err">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c"># algo&#39;s data source from Nebula. If data.source is nebula, then this nebula.read config can be valid.</span>
</span></span><span class="line"><span class="cl">    <span class="nx">read</span><span class="err">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c"># Nebula metad server address, multiple addresses are split by English comma</span>
</span></span><span class="line"><span class="cl">        <span class="nx">metaAddress</span><span class="err">:</span> <span class="s2">&#34;nebula-metad-0.nebula-metad-headless.default.svc.cluster.local:9559&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c">#...</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>或者是调用 spark-connector 的代码</li>
</ul>
<blockquote>
<p>Ref: <a href="https://github.com/vesoft-inc/nebula-spark-connector" target="_blank" rel="noopener noreffer">https://github.com/vesoft-inc/nebula-spark-connector</a></p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-scala" data-lang="scala"><span class="line"><span class="cl">  <span class="k">val</span> <span class="n">config</span> <span class="k">=</span> <span class="nc">NebulaConnectionConfig</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span><span class="n">builder</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span><span class="n">withMetaAddress</span><span class="o">(</span><span class="s">&#34;nebula-metad-0.nebula-metad-headless.default.svc.cluster.local:9559&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span><span class="n">withConenctionRetry</span><span class="o">(</span><span class="mi">2</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span><span class="n">build</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="n">nebulaReadVertexConfig</span><span class="k">:</span> <span class="kt">ReadNebulaConfig</span> <span class="o">=</span> <span class="nc">ReadNebulaConfig</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span><span class="n">builder</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span><span class="n">withSpace</span><span class="o">(</span><span class="s">&#34;foo_bar_space&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span><span class="n">withLabel</span><span class="o">(</span><span class="s">&#34;person&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span><span class="n">withNoColumn</span><span class="o">(</span><span class="kc">false</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span><span class="n">withReturnCols</span><span class="o">(</span><span class="nc">List</span><span class="o">(</span><span class="s">&#34;birthday&#34;</span><span class="o">))</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span><span class="n">withLimit</span><span class="o">(</span><span class="mi">10</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span><span class="n">withPartitionNum</span><span class="o">(</span><span class="mi">10</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span><span class="n">build</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">  <span class="k">val</span> <span class="n">vertex</span> <span class="k">=</span> <span class="n">spark</span><span class="o">.</span><span class="n">read</span><span class="o">.</span><span class="n">nebula</span><span class="o">(</span><span class="n">config</span><span class="o">,</span> <span class="n">nebulaReadVertexConfig</span><span class="o">).</span><span class="n">loadVerticesToDF</span><span class="o">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>看起来非常简单，那么，为什么这么简单的过程却值得一篇文章呢？</p>
<h3 id="容易忽略的问题" class="headerLink">
    <a href="#%e5%ae%b9%e6%98%93%e5%bf%bd%e7%95%a5%e7%9a%84%e9%97%ae%e9%a2%98" class="header-mark"></a>1.1 容易忽略的问题</h3><p>这里的问题在于：</p>
<p>a. 它隐含地需要保证 StorageD 的地址能被 spark 环境访问；</p>
<p>b. 但是这些 StorageD 地址是从 MetaD 获取的；</p>
<p>c. Nebula K8s Operator 里，MetaD 中存储的 StorageD 地址（服务发现）的来源是 StorageD 的配置文件，而它是 k8s 的内部地址。</p>
<h3 id="背景知识" class="headerLink">
    <a href="#%e8%83%8c%e6%99%af%e7%9f%a5%e8%af%86" class="header-mark"></a>1.2 背景知识</h3><p><strong>a.</strong> 的理由比较直接，和 nebula 的架构有关：图的数据都存在 Storage Service 之中，通常用语句的查询是透过 Graph Service 来透传，只需要 GraphD 的连接就足够，而 Spark-Connector 使用 Nebula Graph 的场景是扫描全图或者子图，这时候计算存储分离的设计使得我们可以绕过查询、计算层直接高效读取图数据。</p>
<p>那么问题来了，为什么需要、且只需要 MetaD 的地址呢？</p>
<p>这也是和架构有关，Meta Service 里包含了全图的分布数据与分布式的 Storage Service 的各个分片和实例的分布，所以一方面因为只有 Meta 才有全图的信息（需要），另一方面因为从 Meta 可以获得这部分信息（只需要）。到这里 <strong>b.</strong> 的答案也有了。</p>
<ul>
<li>详细的 Nebula Graph 架构信息可以参考博客系列文章：<a href="https://nebula-graph.com.cn/tags/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/" target="_blank" rel="noopener noreffer">nebula-graph.com.cn/tags/架构设计</a></li>
<li>另外请确保您已经读了架构介绍的文档哦：<a href="https://docs.nebula-graph.com.cn/3.0.0/1.introduction/3.nebula-graph-architecture/1.architecture-overview/" target="_blank" rel="noopener noreffer">Nebula 架构总览</a></li>
</ul>
<p><a class="lightgallery" href="https://docs-cdn.nebula-graph.com.cn/docs-2.0/1.introduction/2.nebula-graph-architecture/nebula-graph-architecture-1.png" title="https://docs-cdn.nebula-graph.com.cn/docs-2.0/1.introduction/2.nebula-graph-architecture/nebula-graph-architecture-1.png" data-thumbnail="https://docs-cdn.nebula-graph.com.cn/docs-2.0/1.introduction/2.nebula-graph-architecture/nebula-graph-architecture-1.png">
        
    </a></p>
<p>下面我们看看 <strong>c.</strong></p>
<blockquote>
<p>c. Nebula K8s Operator 里，MetaD 中存储的 StorageD 地址（服务发现）的来源是 StorageD 的配置文件，而它是 k8s 的内部地址。</p>
</blockquote>
<p>这和 Nebula Graph 里的服务发现机制有关：在 Nebula Graph 集群中，Graph Service 和 Storage Service 都是通过心跳将自己的信息上报给 Meta Service 的，而这其中服务自身的地址的来源则来自于他们相应的配置文件中的网络配置。</p>
<ul>
<li>
<p>关于服务自身的地址配置请参考文档：<a href="https://docs.nebula-graph.com.cn/3.0.0/5.configurations-and-logs/1.configurations/4.storage-config/#networking" target="_blank" rel="noopener noreffer">Storage networking 配置</a></p>
</li>
<li>
<p>关于服务发现详细的信息请参考四王的文章：<a href="https://nebula-graph.com.cn/posts/cluster-communication-heartbeat/" target="_blank" rel="noopener noreffer">图数据库 Nebula Graph 集群通信：从心跳说起</a>。</p>
</li>
</ul>
<p><a class="lightgallery" href="https://www-cdn.nebula-graph.com.cn/nebula-blog/nebula-graph-metad-storaged-graphd-v-r-family.png" title="metad storaged graphd 通信" data-thumbnail="https://www-cdn.nebula-graph.com.cn/nebula-blog/nebula-graph-metad-storaged-graphd-v-r-family.png">
        
    </a></p>
<p>最后，我们知道 Nebula Operator 是一个在 K8s 集群中按照配置，自动创建、维护、扩缩容 Nebula 集群的 K8s 控制面的应用，它需要抽象一部分内部资源相关的配置，这就包括了 GraphD 和 StorageD 实例的实际地址，他们是被配置的地址实际上是 <a href="https://kubernetes.io/zh/docs/concepts/services-networking/service/#headless-services" target="_blank" rel="noopener noreffer">headless service 地址</a>。</p>
<p>而这些地址（如下）默认是没法被 k8s 外部网络访问的，所以针对 GraphD、MetaD 我们可以方便创建服务将其暴露出来。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[(</span><span class="k">none</span><span class="p">)]</span><span class="o">&gt;</span><span class="w"> </span><span class="k">show</span><span class="w"> </span><span class="n">hosts</span><span class="w"> </span><span class="n">meta</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">------------------------------------------------------------------+------+----------+--------+--------------+---------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="k">Host</span><span class="w">                                                             </span><span class="o">|</span><span class="w"> </span><span class="n">Port</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Status</span><span class="w">   </span><span class="o">|</span><span class="w"> </span><span class="k">Role</span><span class="w">   </span><span class="o">|</span><span class="w"> </span><span class="n">Git</span><span class="w"> </span><span class="n">Info</span><span class="w"> </span><span class="n">Sha</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">Version</span><span class="w"> </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">------------------------------------------------------------------+------+----------+--------+--------------+---------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;nebula-metad-0.nebula-metad-headless.default.svc.cluster.local&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">9559</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;ONLINE&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;META&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;d113f4a&#34;</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;2.6.2&#34;</span><span class="w"> </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">------------------------------------------------------------------+------+----------+--------+--------------+---------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Got</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="k">rows</span><span class="w"> </span><span class="p">(</span><span class="n">time</span><span class="w"> </span><span class="n">spent</span><span class="w"> </span><span class="mi">1378</span><span class="o">/</span><span class="mi">2598</span><span class="w"> </span><span class="n">us</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Mon</span><span class="p">,</span><span class="w"> </span><span class="mi">14</span><span class="w"> </span><span class="n">Feb</span><span class="w"> </span><span class="mi">2022</span><span class="w"> </span><span class="mi">09</span><span class="p">:</span><span class="mi">22</span><span class="p">:</span><span class="mi">33</span><span class="w"> </span><span class="n">UTC</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[(</span><span class="k">none</span><span class="p">)]</span><span class="o">&gt;</span><span class="w"> </span><span class="k">show</span><span class="w"> </span><span class="n">hosts</span><span class="w"> </span><span class="n">graph</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">---------------------------------------------------------------+------+----------+---------+--------------+---------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="k">Host</span><span class="w">                                                          </span><span class="o">|</span><span class="w"> </span><span class="n">Port</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Status</span><span class="w">   </span><span class="o">|</span><span class="w"> </span><span class="k">Role</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="n">Git</span><span class="w"> </span><span class="n">Info</span><span class="w"> </span><span class="n">Sha</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">Version</span><span class="w"> </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">---------------------------------------------------------------+------+----------+---------+--------------+---------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;nebula-graphd-0.nebula-graphd-svc.default.svc.cluster.local&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">9669</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;ONLINE&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;GRAPH&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;d113f4a&#34;</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;2.6.2&#34;</span><span class="w"> </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">---------------------------------------------------------------+------+----------+---------+--------------+---------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Got</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="k">rows</span><span class="w"> </span><span class="p">(</span><span class="n">time</span><span class="w"> </span><span class="n">spent</span><span class="w"> </span><span class="mi">2072</span><span class="o">/</span><span class="mi">3403</span><span class="w"> </span><span class="n">us</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Mon</span><span class="p">,</span><span class="w"> </span><span class="mi">14</span><span class="w"> </span><span class="n">Feb</span><span class="w"> </span><span class="mi">2022</span><span class="w"> </span><span class="mi">10</span><span class="p">:</span><span class="mi">03</span><span class="p">:</span><span class="mi">58</span><span class="w"> </span><span class="n">UTC</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[(</span><span class="k">none</span><span class="p">)]</span><span class="o">&gt;</span><span class="w"> </span><span class="k">show</span><span class="w"> </span><span class="n">hosts</span><span class="w"> </span><span class="k">storage</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">------------------------------------------------------------------------+------+----------+-----------+--------------+---------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="k">Host</span><span class="w">                                                                   </span><span class="o">|</span><span class="w"> </span><span class="n">Port</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Status</span><span class="w">   </span><span class="o">|</span><span class="w"> </span><span class="k">Role</span><span class="w">      </span><span class="o">|</span><span class="w"> </span><span class="n">Git</span><span class="w"> </span><span class="n">Info</span><span class="w"> </span><span class="n">Sha</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">Version</span><span class="w"> </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">------------------------------------------------------------------------+------+----------+-----------+--------------+---------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;nebula-storaged-0.nebula-storaged-headless.default.svc.cluster.local&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">9779</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;ONLINE&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;STORAGE&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;d113f4a&#34;</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;2.6.2&#34;</span><span class="w"> </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;nebula-storaged-1.nebula-storaged-headless.default.svc.cluster.local&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">9779</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;ONLINE&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;STORAGE&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;d113f4a&#34;</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;2.6.2&#34;</span><span class="w"> </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;nebula-storaged-2.nebula-storaged-headless.default.svc.cluster.local&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mi">9779</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;ONLINE&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;STORAGE&#34;</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;d113f4a&#34;</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="s2">&#34;2.6.2&#34;</span><span class="w"> </span><span class="o">|</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">+</span><span class="c1">------------------------------------------------------------------------+------+----------+-----------+--------------+---------+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Got</span><span class="w"> </span><span class="mi">3</span><span class="w"> </span><span class="k">rows</span><span class="w"> </span><span class="p">(</span><span class="n">time</span><span class="w"> </span><span class="n">spent</span><span class="w"> </span><span class="mi">1603</span><span class="o">/</span><span class="mi">2979</span><span class="w"> </span><span class="n">us</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Mon</span><span class="p">,</span><span class="w"> </span><span class="mi">14</span><span class="w"> </span><span class="n">Feb</span><span class="w"> </span><span class="mi">2022</span><span class="w"> </span><span class="mi">10</span><span class="p">:</span><span class="mi">05</span><span class="p">:</span><span class="mi">24</span><span class="w"> </span><span class="n">UTC</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>然而，因为前边提到的 Spark-Connector 通过 Meta Service 去获取 StorageD 的地址，且这个地址是服务发现而得，所以 Spark-Connector 实际上获取的 StorageD 地址就是上边的这种 headless 的服务地址，没法直接从外部访问。</p>
<p>所以，我们在有条件的情况下，只需要让 Spark 运行在和 Nebula Cluster 相同的 K8s 网络里，一切就迎刃而解了，否则，我们需要：</p>
<ol>
<li>
<p>将 MetaD 和 StorageD 的地址利用 Ingress 等方式将其 L4（TCP）暴露出来。</p>
<p>可以参考 Nebula Operator 的文档：<a href="doc/user/client_service.md" rel="">doc/user/client_service.md</a></p>
</li>
<li>
<p>通过反向代理和DNS让这些 headless 服务能被解析到相应的 StorageD。</p>
<p>参考：TBD</p>
</li>
</ol>
<p>那么，有没有更方便的方式？</p>
<p>非常抱歉的是，目前最方便的方式依然是如文章最开头所介绍：让 Spark 运行在 Nebula Cluster 内部。实际上，我在努力推进 Nebula Spark 社区去支持可以配置的 StorageAddresses 选项，有了它之后，前边提到的 <strong>2.</strong> 就是不必要的了。</p>
<h2 id="bonus一键体验-nebula-algorithm--nebula-operator" class="headerLink">
    <a href="#bonus%e4%b8%80%e9%94%ae%e4%bd%93%e9%aa%8c-nebula-algorithm--nebula-operator" class="header-mark"></a>2 Bonus：一键体验 nebula-algorithm + nebula-operator</h2><p>为了方便在 k8s 上尝鲜 nebula-graph nebula-algorithm 的同学，这里我要再次安利一下我写的一个小工具 <a href="https://github.com/wey-gu/nebula-operator-kind" target="_blank" rel="noopener noreffer">Neubla-Operator-KinD</a>，它是一个一键在 Docker 环境内部单独部署一个 k8s 集群并在其中部署 Nebula Operator 以及所有依赖（包括 storage provider）并部署一个小 Nebula Cluster 的工具。有点绕，不过可以看下边的步骤哈：</p>
<p>第一步，部署 K8s+Nebula-Operator+Nebula Cluster：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">curl -sL nebula-kind.siwei.io/install.sh <span class="p">|</span> bash
</span></span></code></pre></td></tr></table>
</div>
</div><p><a class="lightgallery" href="https://github.com/wey-gu/nebula-operator-kind/raw/main/images/install_success.webp" title="install_success" data-thumbnail="https://github.com/wey-gu/nebula-operator-kind/raw/main/images/install_success.webp">
        
    </a></p>
<p>第二步，照着工具文档里的 <a href="https://github.com/wey-gu/nebula-operator-kind#whats-next" target="_blank" rel="noopener noreffer">what&rsquo;s next</a></p>
<p>a. 用 console 连接集群，并加载示例数据集</p>
<p>b. <a href="https://github.com/wey-gu/nebula-operator-kind/blob/main/README.md#try-nebula-algorithm" target="_blank" rel="noopener noreffer">在这个 k8s 里跑一个图算法</a></p>
<ul>
<li>创建一个 Spark 环境</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">kubectl create -f http://nebula-kind.siwei.io/deployment/spark.yaml
</span></span><span class="line"><span class="cl">kubectl wait pod --timeout=-1s --for=condition=Ready -l &#39;!job-name&#39;
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>等上边的 wait 都 ready 之后，进入 spark 的 pod。</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">kubectl exec -it deploy/spark-deployment -- bash
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>下载 nebula-algorithm 比如 <code>2.6.2</code> 这个版本，更多版本请参考 <a href="https://github.com/vesoft-inc/nebula-algorithm/" target="_blank" rel="noopener noreffer">https://github.com/vesoft-inc/nebula-algorithm/</a>。</li>
</ul>
<blockquote>
<p>注意：</p>
<ul>
<li>官方发布的版本在这里可以获取：https://repo1.maven.org/maven2/com/vesoft/nebula-algorithm/</li>
<li>因为这个问题 <a href="https://github.com/vesoft-inc/nebula-algorithm/issues/42" target="_blank" rel="noopener noreffer">https://github.com/vesoft-inc/nebula-algorithm/issues/42</a> 只有 <code>2.6.2</code> 或者更新的版本才支持域名访问 MetaD。</li>
</ul>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># 下载 nebula-algorithm-2.6.2.jar
</span></span><span class="line"><span class="cl">wget https://repo1.maven.org/maven2/com/vesoft/nebula-algorithm/2.6.2/nebula-algorithm-2.6.2.jar
</span></span><span class="line"><span class="cl"># 下载 nebula-algorthm 配置文件
</span></span><span class="line"><span class="cl">wget https://github.com/vesoft-inc/nebula-algorithm/raw/v2.6/nebula-algorithm/src/main/resources/application.conf
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>修改Then we could change the config file of nebula-algorithm on meta and graph addresses:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sed -i &#39;/^        metaAddress/c\        metaAddress: \&#34;nebula-metad-0.nebula-metad-headless.default.svc.cluster.local:9559\&#34;&#39; application.conf
</span></span><span class="line"><span class="cl">sed -i &#39;/^        graphAddress/c\        graphAddress: \&#34;nebula-graphd-0.nebula-graphd-svc.default.svc.cluster.local:9669\&#34;&#39; application.conf
</span></span><span class="line"><span class="cl">##### change space
</span></span><span class="line"><span class="cl">sed -i &#39;/^        space/c\        space: basketballplayer&#39; application.conf
</span></span><span class="line"><span class="cl">##### read data from nebula graph
</span></span><span class="line"><span class="cl">sed -i &#39;/^    source/c\    source: nebula&#39; application.conf
</span></span><span class="line"><span class="cl">##### execute algorithm: labelpropagation
</span></span><span class="line"><span class="cl">sed -i &#39;/^    executeAlgo/c\    executeAlgo: labelpropagation&#39; application.conf
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>执行 LPA 算法在  basketballplayer 图空间</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">/spark/bin/spark-submit --master &#34;local&#34; --conf spark.rpc.askTimeout=6000s \
</span></span><span class="line"><span class="cl">    --class com.vesoft.nebula.algorithm.Main \
</span></span><span class="line"><span class="cl">    nebula-algorithm-2.6.2.jar \
</span></span><span class="line"><span class="cl">    -p application.conf
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>结果如下：</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">bash-5.0# ls /tmp/count/
</span></span><span class="line"><span class="cl">_SUCCESS                                                  part-00000-5475f9f4-66b9-426b-b0c2-704f946e54d3-c000.csv
</span></span><span class="line"><span class="cl">bash-5.0# head /tmp/count/part-00000-5475f9f4-66b9-426b-b0c2-704f946e54d3-c000.csv
</span></span><span class="line"><span class="cl">_id,lpa
</span></span><span class="line"><span class="cl">1100,1104
</span></span><span class="line"><span class="cl">2200,2200
</span></span><span class="line"><span class="cl">2201,2201
</span></span><span class="line"><span class="cl">1101,1104
</span></span><span class="line"><span class="cl">2202,2202
</span></span></code></pre></td></tr></table>
</div>
</div><p>Happy Graphing!</p>
<blockquote>
<p>Picture Credit: <a href="https://unsplash.com/photos/yx20mpDyr2I" target="_blank" rel="noopener noreffer">Timelab Pro</a></p>
</blockquote>]]></description>
</item><item>
    <title>从零到一：如何构建一个基于知识图谱的智能问答助手？</title>
    <link>https://siwei.io/siwi/</link>
    <pubDate>Thu, 30 Dec 2021 14:04:31 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/siwi/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/siwi/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p>如何利用图数据库从0-1构建一个特定领域问答助手？本文手把手带你构建一个简易版的篮球领域智能问答机器人。</p>
</blockquote>
<h2 id="前言" class="headerLink">
    <a href="#%e5%89%8d%e8%a8%80" class="header-mark"></a>1 前言</h2><p>「问答机器人」在我们日常生活中并不少见到 ：比如在一些电商客服、智能问诊、技术支持等人工输入与沟通界面的场景下，机器人“智能”问答系统一定程度上可以在无需人力、不需要耗费终端用户心智去做知识库、商品搜索、科室选择等等的情况下实时给出问题答案。</p>
<p>问答机器人系统背后的技术有多重可能：</p>
<ul>
<li>基于检索，全文搜索接近的问题</li>
<li>基于<a href="https://arxiv.org/abs/1710.10723" target="_blank" rel="noopener noreffer">机器学习阅读理解</a></li>
<li>基于知识图谱（Knowledge-Based Question Answering system: KBQA）</li>
<li>其他</li>
</ul>
<p>基于知识图谱构建问答系统在以下三个情况下很有优势：</p>
<ul>
<li>对于领域类型是结构化数据场景：电商、医药、系统运维（微服务、服务器、事件）、产品支持系统等，其中作为问答系统的参考对象已经是结构化数据；</li>
<li>问题的解答过程涉及多跳查询，比如“姚明的妻子今年是本命年吗？”，“你们家的产品 A 和 A+ 的区别是什么？”；</li>
<li>为了解决其他需求（风控、推荐、管理），已经构建了图结构数据、知识图谱的情况。</li>
</ul>
<p>为了方便读者最快速了解如何构建 KBQA 系统，我写了非常简陋的小 KBQA 项目，在本文中，我会带领大家从头到尾把它搭起来。</p>
<blockquote>
<p>💡：这个小项目叫做 Siwi，它的代码就在 GitHub 上：<a href="https://github.com/wey-gu/nebula-siwi/" target="_blank" rel="noopener noreffer">github.com/wey-gu/nebula-siwi</a></p>
<p>Siwi 的发音是：<code>/ˈsɪwi/</code> 或者叫：<code>思二为</code> ，它是一个能解答 NBA 相关问题的机器人。</p>
</blockquote>
<p>我们开始吧。</p>
<h2 id="鸟瞰-tldr" class="headerLink">
    <a href="#%e9%b8%9f%e7%9e%b0-tldr" class="header-mark"></a>2 鸟瞰 TL;DR</h2><p>KBQA 用一句话说就是把问题解析、转换成在知识图谱中的查询，查询得到结果之后进行筛选、翻译成结果（句子、卡片或者任何方便人理解的答案格式）。</p>
<blockquote>
<p>💡：知识图谱的构建实际上是非常重要的过程，在本文中，我们专注在串起来 KBQA 系统的骨架，我们假设需求是基于一个已经有的图谱之上，为其增加一个 QA 系统。</p>
</blockquote>
<p>「问题到图谱查询的转换」有不同的方法可以实现。</p>
<ul>
<li>可以是对语义进行分析：理解问题的意图，针对不同意图匹配最可能的问题类型，从而构建这个类型问题的图谱查询，查得结果；</li>
<li>也可以是基于信息的抽取：从问题中抽取主要的实体，在图谱中获取实体的所有知识、关系条目（子图），再对结果根据问题中的约束条件匹配、排序选择结果。</li>
</ul>
<blockquote>
<p>💡：美团技术团队在<a href="https://tech.meituan.com/2021/11/03/knowledge-based-question-answering-in-meituan.html" target="_blank" rel="noopener noreffer">这篇文章</a>里分享了他们的真实世界实践，下图是美团结合了机器学习和 NLP 的方案。</p>
</blockquote>
<p><a class="lightgallery" href="https://tva1.sinaimg.cn/large/008i3skNly1gw13r5dsw2j31g30u0430.jpg" title="美团KBQA解决方案" data-thumbnail="https://tva1.sinaimg.cn/large/008i3skNly1gw13r5dsw2j31g30u0430.jpg">
        
    </a></p>
<p>而在 Siwi 里，我们一切从简，单独选择了语义分析这条路，它的特点是需要人为去标注或者编码一些问题类型的查询方式，但实际上在大多数场景下，尤其单一领域图谱的场景下反而是轻量却效果不差的方案，也是一个便于新手理解 KBQA 的合适的入门方式。</p>
<p>除了核心的问答部分，我还为 Siwi 增加了语音识别和语音回答（感谢浏览器接口标准的发展）的功能，于是，这个项目的结构和问答调用流程就是这样的了：一个语音问题自上而下分别经过三个部分：</p>
<ul>
<li>基于网页的 Siwi Frontend 语音、文字问答界面</li>
<li>Python Flask 实现的 Siwi Backend/API 系统</li>
<li><a href="https://nebula-graph.com.cn" target="_blank" rel="noopener noreffer">Nebula Graph</a> 开源分布式高性能图数据库之上的知识图谱</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">┌────────────────┬──────────────────────────────────────┐
</span></span><span class="line"><span class="cl">│                │                                      │
</span></span><span class="line"><span class="cl">│                │  Speech                              │
</span></span><span class="line"><span class="cl">│     ┌──────────▼──────────┐                           │
</span></span><span class="line"><span class="cl">│     │            Frontend │   Siwi, /ˈsɪwi/           │
</span></span><span class="line"><span class="cl">│     │ Web_Speech_API      │   A PoC of                │
</span></span><span class="line"><span class="cl">│     │                     │   Dialog System           │
</span></span><span class="line"><span class="cl">│     │ Vue.JS              │   With Graph Database     │
</span></span><span class="line"><span class="cl">│     │                     │   Backed Knowledge Graph  │
</span></span><span class="line"><span class="cl">│     └──────────┬──────────┘                           │
</span></span><span class="line"><span class="cl">│                │  Sentence                            │
</span></span><span class="line"><span class="cl">│   ┌────────────┼──────────────────────────────┐       │
</span></span><span class="line"><span class="cl">│   │            │              Backend         │       │
</span></span><span class="line"><span class="cl">│   │ ┌──────────▼──────────┐                   │       │
</span></span><span class="line"><span class="cl">│   │ │ Web API, Flask      │   ./app/          │       │
</span></span><span class="line"><span class="cl">│   │ └──────────┬──────────┘                   │       │
</span></span><span class="line"><span class="cl">│   │            │  Sentence    ./bot/          │       │
</span></span><span class="line"><span class="cl">│   │ ┌──────────▼──────────┐                   │       │
</span></span><span class="line"><span class="cl">│   │ │ Intent matching,    │   ./bot/classifier│       │
</span></span><span class="line"><span class="cl">│   │ │ Symentic Processing │                   │       │
</span></span><span class="line"><span class="cl">│   │ └──────────┬──────────┘                   │       │
</span></span><span class="line"><span class="cl">│   │            │  Intent, Entities            │       │
</span></span><span class="line"><span class="cl">│   │ ┌──────────▼──────────┐                   │       │
</span></span><span class="line"><span class="cl">│   │ │ Intent Actor        │   ./bot/actions   │       │
</span></span><span class="line"><span class="cl">│   └─┴──────────┬──────────┴───────────────────┘       │
</span></span><span class="line"><span class="cl">│                │  Graph Query                         │
</span></span><span class="line"><span class="cl">│     ┌──────────▼──────────┐                           │
</span></span><span class="line"><span class="cl">│     │ Graph Database      │    Nebula Graph           │
</span></span><span class="line"><span class="cl">│     └─────────────────────┘                           │
</span></span><span class="line"><span class="cl">└───────────────────────────────────────────────────────┘
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>💡：图数据库相比于其他知识图谱存储系统来说，因为其设计专注于数据内的数据关系，非常擅长实时获取海量数据下实体之间的复杂关联关系。</p>
<p>Nebula Graph 的原生分布式设计和 share-nothing 架构使得它擅长于巨大数据量和高并发读写的场景，加上它的开源社区特别活跃，已经被国内很多团队用于支撑生产上的各种业务，<a href="https://nebula-graph.com.cn/cases/" target="_blank" rel="noopener noreffer">这里</a>有一些他们分享的选型、落地实践。</p>
</blockquote>
<h2 id="知识图谱" class="headerLink">
    <a href="#%e7%9f%a5%e8%af%86%e5%9b%be%e8%b0%b1" class="header-mark"></a>3 知识图谱</h2><p>Siwi 构建于一个篮球相关的知识图谱之上，它其实是 Siwi 采用的开源分布式图数据库 <a href="http://nebula-graph.com.cn/" target="_blank" rel="noopener noreffer">Nebula Graph</a> 社区的官方文档里的示例<a href="https://docs.nebula-graph.com.cn/master/3.ngql-guide/1.nGQL-overview/1.overview/#basketballplayer" target="_blank" rel="noopener noreffer">数据集</a>。</p>
<p>在这个非常简单的图谱之中，只有两种点：</p>
<ul>
<li>player，球员</li>
<li>team，球队</li>
</ul>
<p>两种关系：</p>
<ul>
<li>serve 服役于（比如：姚明 <code>-服役于-&gt;</code> 休斯顿火箭）</li>
<li>follow 关注 （比如：姚明 <code>-关注-&gt;</code> 奥尼尔）</li>
</ul>
<blockquote>
<p>💡：这个数据集在 Nebula 社区上有一个 <a href="https://nebula-graph.com.cn/demo/" target="_blank" rel="noopener noreffer">在线体验</a> 环境，任何人都无需登录，通过<a href="https://docs.nebula-graph.com.cn/2.6.1/nebula-studio/about-studio/st-ug-what-is-graph-studio/" target="_blank" rel="noopener noreffer">Nebula Graph Studio</a> 可视化探索篮球图谱。</p>
</blockquote>
<p>下图就是这个图谱的可视化探索截图，可以看到左边的中心节点勇士队（Warriors）有杜兰特（Durant）还有其他几个队员在其中服役（serve）；除了服役之外，还可以看到队员和队员之中也有关注（follow）的关系存在。</p>
<p><a class="lightgallery" href="https://nebula-website-cn.oss-cn-hangzhou.aliyuncs.com/nebula-website/images/demo/demo1.png" title="篮球图谱" data-thumbnail="https://nebula-website-cn.oss-cn-hangzhou.aliyuncs.com/nebula-website/images/demo/demo1.png">
        
    </a></p>
<p>有了这个知识图谱，咱们接下来就在它之上搭一个简单的基于语法解析的 QA 系统吧😁。</p>
<h2 id="siwi-backend" class="headerLink">
    <a href="#siwi-backend" class="header-mark"></a>4 Siwi-backend</h2><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">┌────────────┼──────────────────────────────┐
</span></span><span class="line"><span class="cl">│            │              Backend         │
</span></span><span class="line"><span class="cl">│ ┌──────────▼──────────┐                   │
</span></span><span class="line"><span class="cl">│ │ Web API, Flask      │   ./app/          │
</span></span><span class="line"><span class="cl">│ └──────────┬──────────┘                   │
</span></span><span class="line"><span class="cl">│            │  Sentence    ./bot/          │
</span></span><span class="line"><span class="cl">│ ┌──────────▼──────────┐                   │
</span></span><span class="line"><span class="cl">│ │ Intent matching,    │   ./bot/classifier│
</span></span><span class="line"><span class="cl">│ │ Symentic Processing │                   │
</span></span><span class="line"><span class="cl">│ └──────────┬──────────┘                   │
</span></span><span class="line"><span class="cl">│            │  Intent, Entities            │
</span></span><span class="line"><span class="cl">│ ┌──────────▼──────────┐                   │
</span></span><span class="line"><span class="cl">│ │ Intent Actor        │   ./bot/actions   │
</span></span><span class="line"><span class="cl">└─┴──────────┬──────────┴───────────────────┘
</span></span><span class="line"><span class="cl">             │  Graph Query
</span></span><span class="line"><span class="cl">  ┌──────────▼──────────┐
</span></span><span class="line"><span class="cl">  │ Graph Database      │    Nebula Graph
</span></span><span class="line"><span class="cl">  └─────────────────────┘
</span></span></code></pre></td></tr></table>
</div>
</div><p>如上图的设计流程，Siwi 的后端部分需要接收问句，处理之后访问知识图谱（图数据库），然后将处理结果返回给用户。</p>
<h3 id="接收-http-请求app" class="headerLink">
    <a href="#%e6%8e%a5%e6%94%b6-http-%e8%af%b7%e6%b1%82app" class="header-mark"></a>4.1 接收 HTTP 请求(app)</h3><p>对于请求，就简单地用 Flask 作为 web server 来接收 HTTP 的 POST 请求：</p>
<blockquote>
<p>💡：还不熟悉 Flask 的同学，可以在 <a href="https://www.freecodecamp.org/news/tag/flask/" target="_blank" rel="noopener noreffer">freeCodeCamp 上搜索一下</a>，有一些不错的课程哈。</p>
</blockquote>
<p>下边的代码就是告诉 Flask ：</p>
<ol>
<li>如果用户发过来 <code>http://&lt;server&gt;/query</code> 的 POST 请求，提的问题就在请求的 body 里的 <code>question</code> 的 Key 之下。</li>
<li>取得问题之后，调用把请求传给  <code>siwi_bot</code> 的 <code>query()</code>，得到 <code>answer</code> 。</li>
</ol>
<p>代码段：<code>src/siwi/app/__init__.py</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1">#...</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">siwi.bot</span> <span class="kn">import</span> <span class="n">bot</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#...</span>
</span></span><span class="line"><span class="cl"><span class="nd">@app</span><span class="o">.</span><span class="n">route</span><span class="p">(</span><span class="s2">&#34;/query&#34;</span><span class="p">,</span> <span class="n">methods</span><span class="o">=</span><span class="p">[</span><span class="s2">&#34;POST&#34;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">query</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="n">request_data</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">get_json</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">question</span> <span class="o">=</span> <span class="n">request_data</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&#34;question&#34;</span><span class="p">,</span> <span class="s2">&#34;&#34;</span><span class="p">)</span> <span class="c1"># &lt;----- 1.</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">question</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">answer</span> <span class="o">=</span> <span class="n">siwi_bot</span><span class="o">.</span><span class="n">query</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="n">request_data</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&#34;question&#34;</span><span class="p">,</span> <span class="s2">&#34;&#34;</span><span class="p">))</span>   <span class="c1"># &lt;----- 2.</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">answer</span> <span class="o">=</span> <span class="s2">&#34;Sorry, what did you say?&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s2">&#34;answer&#34;</span><span class="p">:</span> <span class="n">answer</span><span class="p">})</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>接下来我们来实现 <code>siwi_bot</code>，真正处理提问的逻辑。</p>
<h3 id="处理请求bot" class="headerLink">
    <a href="#%e5%a4%84%e7%90%86%e8%af%b7%e6%b1%82bot" class="header-mark"></a>4.2 处理请求(bot)</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">│            │  Sentence    ./bot/          │
</span></span><span class="line"><span class="cl">│ ┌──────────▼──────────┐                   │
</span></span><span class="line"><span class="cl">│ │ Intent matching,    │   ./bot/classifier│
</span></span><span class="line"><span class="cl">│ │ Symentic Processing │                   │
</span></span><span class="line"><span class="cl">│ └──────────┬──────────┘                   │
</span></span><span class="line"><span class="cl">│            │  Intent, Entities            │
</span></span><span class="line"><span class="cl">│ ┌──────────▼──────────┐                   │
</span></span><span class="line"><span class="cl">│ │ Intent Actor        │   ./bot/actions   │
</span></span><span class="line"><span class="cl">└─┴──────────┬──────────┴───────────────────┘
</span></span></code></pre></td></tr></table>
</div>
</div><p>前边提到过，KBQA 基本上是</p>
<p>a. 把问题解析、转换成在知识图谱中的查询</p>
<p>b. 查询得到结果之后进行筛选、翻译成结果</p>
<p>这里，我们把 a. 的逻辑放在 <code>classifier</code> 里，b. 的逻辑放在 <code>actions</code>(actor) 里。</p>
<p>a. HTTP 请求的问题句子 <code>sentence</code> 传过来，用 <code>classifier</code> 解析它的意图和句子实体</p>
<p>b. 用意图和句子实体构造 <code>action</code>，并链接图数据库执行，获取结果。</p>
<p>代码段：<code>src/siwi/bot/bot/__init__.py</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">siwi.bot.actions</span> <span class="kn">import</span> <span class="n">SiwiActions</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">siwi.bot.classifier</span> <span class="kn">import</span> <span class="n">SiwiClassifier</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">SiwiBot</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">connection_pool</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kc">None</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">classifier</span> <span class="o">=</span> <span class="n">SiwiClassifier</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">actions</span> <span class="o">=</span> <span class="n">SiwiActions</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">connection_pool</span> <span class="o">=</span> <span class="n">connection_pool</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">query</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">sentence</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="n">intent</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">classifier</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span> <span class="c1"># &lt;--- a.</span>
</span></span><span class="line"><span class="cl">        <span class="n">action</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">actions</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">intent</span><span class="p">)</span>      <span class="c1"># &lt;--- b.</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">action</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">connection_pool</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>首先咱们来进一步实现一下 <code>SiwiClassifier</code> 吧。</p>
<h4 id="语义解析classifier" class="headerLink">
    <a href="#%e8%af%ad%e4%b9%89%e8%a7%a3%e6%9e%90classifier" class="header-mark"></a>4.2.1 语义解析(classifier)</h4><p><code>classifier </code> 需要在 <code>get(sentence)</code> 方法里将句子中的实体和句子的意图解析、分类出来。通常来说，这里是需要借助机器学习、NLP去分词、分类实现的，这里只是为了展示这个过程实际上只是各种 <code>if/ else</code>。</p>
<p>我们这里实现了三类意图的问题：</p>
<ul>
<li>关系（A，B）：获得 A 和 B 在图谱中的关系路径，比如姚明和湖人队的关系是？</li>
<li>服役情况：比如乔纳森在哪里服役？</li>
<li>关注情况：比如邓肯关注了谁？</li>
</ul>
<blockquote>
<p>❓ 开放问题：</p>
<p>如果看教程的你觉得这几个问题太没意思了，这里留一个开放问题，你可以在 Siwi 里帮我们实现：「共同好友（A，B）获得 A 和 B 的一度共同好友」这个意图（或者更酷的其他句子）么？欢迎来 Github：github.com/wey-gu/nebula-siwi/ 提 PR 哦，看看谁先实现。</p>
</blockquote>
<p>代码片段：<code>src/siwi/bot/classfier/__init__.py</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">SiwiClassifier</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">sentence</span><span class="p">:</span> <span class="nb">str</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">dict</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;
</span></span></span><span class="line"><span class="cl"><span class="s2">        Classify Sentences and Fill Slots.
</span></span></span><span class="line"><span class="cl"><span class="s2">        This should be done by NLP, here we fake one to demostrate
</span></span></span><span class="line"><span class="cl"><span class="s2">        the intent Actor --&gt; Graph DB work flow.
</span></span></span><span class="line"><span class="cl"><span class="s2">
</span></span></span><span class="line"><span class="cl"><span class="s2">        sentense:
</span></span></span><span class="line"><span class="cl"><span class="s2">          relation:
</span></span></span><span class="line"><span class="cl"><span class="s2">            - What is the relationship between Yao Ming and Lakers?
</span></span></span><span class="line"><span class="cl"><span class="s2">            - How does Tracy McGrady and Lakers connected?
</span></span></span><span class="line"><span class="cl"><span class="s2">          serving:
</span></span></span><span class="line"><span class="cl"><span class="s2">            - Which team had Jonathon Simmons served?
</span></span></span><span class="line"><span class="cl"><span class="s2">          friendship:
</span></span></span><span class="line"><span class="cl"><span class="s2">            - Whom does Tim Duncan follow?
</span></span></span><span class="line"><span class="cl"><span class="s2">            - Who are Tracy McGrady&#39;s friends?
</span></span></span><span class="line"><span class="cl"><span class="s2">
</span></span></span><span class="line"><span class="cl"><span class="s2">        returns:
</span></span></span><span class="line"><span class="cl"><span class="s2">        {
</span></span></span><span class="line"><span class="cl"><span class="s2">            &#34;entities&#34;: entities,
</span></span></span><span class="line"><span class="cl"><span class="s2">            &#34;intents&#34;: intents
</span></span></span><span class="line"><span class="cl"><span class="s2">        }
</span></span></span><span class="line"><span class="cl"><span class="s2">        &#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">entities</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_matched_entities</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">intents</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_matched_intents</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;entities&#34;</span><span class="p">:</span> <span class="n">entities</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;intents&#34;</span><span class="p">:</span> <span class="n">intents</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>这里，我把匹配的规则（等价于 if else&hellip;）写在了 <code>src/siwi/bot/test/data</code> 之下的 YAML 文件里，这样增加 <code>classifier</code> 之中新的规则只需要更新这个文件就可以了：</p>
<h5 id="意图识别intent" class="headerLink">
    <a href="#%e6%84%8f%e5%9b%be%e8%af%86%e5%88%abintent" class="header-mark"></a>4.2.1.1 意图识别(intent)</h5><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">load_entity_data</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kc">None</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># load data from yaml files</span>
</span></span><span class="line"><span class="cl">    <span class="n">module_path</span> <span class="o">=</span> <span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span> <span class="n">siwi</span><span class="o">.</span><span class="n">__path__</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="si">}</span><span class="s2">/bot/test/data&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="c1">#...</span>
</span></span><span class="line"><span class="cl">    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span> <span class="n">module_path</span> <span class="si">}</span><span class="s2">/intents.yaml&#34;</span><span class="p">,</span> <span class="s2">&#34;r&#34;</span><span class="p">)</span> <span class="k">as</span> <span class="n">file</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">intents</span> <span class="o">=</span> <span class="n">yaml</span><span class="o">.</span><span class="n">safe_load</span><span class="p">(</span><span class="n">file</span><span class="p">)[</span><span class="s2">&#34;intents&#34;</span><span class="p">]</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>对于每一个意图来说：</p>
<ul>
<li><code>intents.&lt;名字&gt;</code> 代表名字</li>
<li>名字之后的 <code>action</code> 代表后边在要实现的相应的 <code>xxxAction</code> 的类
<ul>
<li>比如 <code>RelationshipAction</code> 将是用来处理查询关系（A，B）这样的问题的 Action 类</li>
</ul>
</li>
<li><code>keywords</code> 代表在句子之中匹配的关键词
<ul>
<li>比如问句里出现 serve，served，serving 的字眼的时候，将会匹配服役的问题</li>
</ul>
</li>
</ul>
<blockquote>
<p>💡：写 if else 条件来对应意图是不容易的，因为不同意图不可能没有关键词相交的情况，我们的实现只是一个非常简陋、不严谨的方式。在实际场景下，训练模型去做匹配效果会更好，有意思的是，那些做的比较好的模型的输入和我们的 YAML 的格式是很类似的。</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">intents</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">fallback</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="l">FallbackAction</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">keywords</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">relationship</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="l">RelationshipAction</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">keywords</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">between</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">relation</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">relationship</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">related</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">connect</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">correlate</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">serve</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="l">ServeAction</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">keywords</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">serve</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">served</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">serving</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">friend</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="l">FollowAction</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">keywords</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">follows</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">followed</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">follow</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">friend</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">friends</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h5 id="实体识别entity" class="headerLink">
    <a href="#%e5%ae%9e%e4%bd%93%e8%af%86%e5%88%abentity" class="header-mark"></a>4.2.1.2 实体识别(entity)</h5><p>类似的，实体识别的部分本质上也是 if else，只不过这里利用到了**<a href="https://zh.wikipedia.org/wiki/AC%E8%87%AA%E5%8A%A8%E6%9C%BA%E7%AE%97%E6%B3%95" target="_blank" rel="noopener noreffer">Aho–Corasick算法</a>**来帮助搜索实体，在生产（非玩具）的情况下，应该用 NLP 里的分词的方法来做。</p>
<blockquote>
<p>💡：大家可以去了解一下这个 <a href="https://zh.wikipedia.org/wiki/AC%E8%87%AA%E5%8A%A8%E6%9C%BA%E7%AE%97%E6%B3%95" target="_blank" rel="noopener noreffer">AC自动机算法</a></p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">setup_entity_tree</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kc">None</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="bp">self</span><span class="o">.</span><span class="n">entity_type_map</span><span class="o">.</span><span class="n">update</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">        <span class="n">key</span><span class="p">:</span> <span class="s2">&#34;player&#34;</span> <span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">players</span><span class="o">.</span><span class="n">keys</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="p">})</span>
</span></span><span class="line"><span class="cl">    <span class="bp">self</span><span class="o">.</span><span class="n">entity_type_map</span><span class="o">.</span><span class="n">update</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">        <span class="n">key</span><span class="p">:</span> <span class="s2">&#34;team&#34;</span> <span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">teams</span><span class="o">.</span><span class="n">keys</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="p">})</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="bp">self</span><span class="o">.</span><span class="n">entity_tree</span> <span class="o">=</span> <span class="n">ahocorasick</span><span class="o">.</span><span class="n">Automaton</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">index</span><span class="p">,</span> <span class="n">entity</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">entity_type_map</span><span class="o">.</span><span class="n">keys</span><span class="p">()):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">entity_tree</span><span class="o">.</span><span class="n">add_word</span><span class="p">(</span><span class="n">entity</span><span class="p">,</span> <span class="p">(</span><span class="n">index</span><span class="p">,</span> <span class="n">entity</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">    <span class="bp">self</span><span class="o">.</span><span class="n">entity_tree</span><span class="o">.</span><span class="n">make_automaton</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#...</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">get_matched_entities</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">sentence</span><span class="p">:</span> <span class="nb">str</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">dict</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;
</span></span></span><span class="line"><span class="cl"><span class="s2">    Consume a sentence to be matched with ahocorasick
</span></span></span><span class="line"><span class="cl"><span class="s2">    Returns a dict: {entity: entity_type}
</span></span></span><span class="line"><span class="cl"><span class="s2">    &#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">_matched</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">entity_tree</span><span class="o">.</span><span class="n">iter</span><span class="p">(</span><span class="n">sentence</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="n">entities_matched</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">item</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">entity</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">entity_type_map</span><span class="p">[</span><span class="n">entity</span><span class="p">]</span> <span class="k">for</span> <span class="n">entity</span> <span class="ow">in</span> <span class="n">_matched</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>至此，我们的 <code>SiwiClassifier.get(sentence)</code> 已经能返回解析、分类出来的意图和实体了，这时候，它们会被传给 Actions 来让 siwi bot 知道如何去执行知识图谱的查询啦！</p>
<h4 id="构造图谱查询action" class="headerLink">
    <a href="#%e6%9e%84%e9%80%a0%e5%9b%be%e8%b0%b1%e6%9f%a5%e8%af%a2action" class="header-mark"></a>4.2.2 构造图谱查询(action)</h4><p>还记得前边的 bot 代码里，最后一步，图谱查询的动作是这么被构造的：</p>
<p><code>action = self.actions.get(intent)</code></p>
<p>现在咱们就把它实现一下：</p>
<ol>
<li>
<p>在前边提到过的 <code>intents.yaml</code> 里获取这个意图里配置的意图的类名称</p>
</li>
<li>
<p>导入相应的 Action 类</p>
</li>
</ol>
<p>代码段：<code>src/bot/actions/__init__.py</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">SiwiActions</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kc">None</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">intent_map</span> <span class="o">=</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">load_data</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">load_data</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kc">None</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># load data from yaml files</span>
</span></span><span class="line"><span class="cl">        <span class="n">module_path</span> <span class="o">=</span> <span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span> <span class="n">siwi</span><span class="o">.</span><span class="n">__path__</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="si">}</span><span class="s2">/bot/test/data&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span> <span class="n">module_path</span> <span class="si">}</span><span class="s2">/intents.yaml&#34;</span><span class="p">,</span> <span class="s2">&#34;r&#34;</span><span class="p">)</span> <span class="k">as</span> <span class="n">file</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">intent_map</span> <span class="o">=</span> <span class="n">yaml</span><span class="o">.</span><span class="n">safe_load</span><span class="p">(</span><span class="n">file</span><span class="p">)[</span><span class="s2">&#34;intents&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">intent</span><span class="p">:</span> <span class="nb">dict</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;
</span></span></span><span class="line"><span class="cl"><span class="s2">        returns SiwiActionBase
</span></span></span><span class="line"><span class="cl"><span class="s2">        &#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">intent</span><span class="p">[</span><span class="s2">&#34;intents&#34;</span><span class="p">])</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">intent_name</span> <span class="o">=</span> <span class="n">intent</span><span class="p">[</span><span class="s2">&#34;intents&#34;</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">intent_name</span> <span class="o">=</span> <span class="s2">&#34;fallback&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">cls_name</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">intent_map</span><span class="o">.</span><span class="n">get</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="n">intent_name</span><span class="p">)</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&#34;action&#34;</span><span class="p">)</span> <span class="c1">#-------&gt; 1.</span>
</span></span><span class="line"><span class="cl">        <span class="n">action_cls</span> <span class="o">=</span> <span class="nb">getattr</span><span class="p">(</span>          <span class="c1">#-------&gt; 2.</span>
</span></span><span class="line"><span class="cl">            <span class="n">importlib</span><span class="o">.</span><span class="n">import_module</span><span class="p">(</span><span class="s2">&#34;siwi.bot.actions&#34;</span><span class="p">),</span> <span class="n">cls_name</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">action</span> <span class="o">=</span> <span class="n">action_cls</span><span class="p">(</span><span class="n">intent</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">action</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>最后，我们来实现其中一个<code>Action</code> 类，比如 <code>RelationshipAction</code> 对应的代码如下：</p>
<ol>
<li>根据提供的 A 和 B，构造并执行图数据库之中的 <code>FIND PATH</code></li>
<li>将 <code>FIND PATH</code> 的结果进行解析，通过 <code>as_path()</code> 方法的封装，获得 path 类型的数据，并处理一个句子返回给用户</li>
</ol>
<blockquote>
<p>💡：FIND PATH 就是字面意思的查找路径，<a href="https://docs.nebula-graph.com.cn/2.6.1/3.ngql-guide/16.subgraph-and-path/2.find-path/" target="_blank" rel="noopener noreffer">这里</a>有详细的解释哦。</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">RelationshipAction</span><span class="p">(</span><span class="n">SiwiActionBase</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;
</span></span></span><span class="line"><span class="cl"><span class="s2">    USE basketballplayer;
</span></span></span><span class="line"><span class="cl"><span class="s2">    FIND NOLOOP PATH
</span></span></span><span class="line"><span class="cl"><span class="s2">    FROM &#34;player100&#34; TO &#34;team204&#34; OVER * BIDIRECT UPTO 4 STEPS;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">intent</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;[DEBUG] RelationshipAction intent: </span><span class="si">{</span> <span class="n">intent</span> <span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="nb">super</span><span class="p">()</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="n">intent</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">entity_left</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">entity_right</span> <span class="o">=</span> <span class="n">intent</span><span class="p">[</span><span class="s2">&#34;entities&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">left_vid</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_vid</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">entity_left</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">right_vid</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_vid</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">entity_right</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="nb">print</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                <span class="sa">f</span><span class="s2">&#34;[WARN] RelationshipAction entities recognition Failure &#34;</span>
</span></span><span class="line"><span class="cl">                <span class="sa">f</span><span class="s2">&#34;will fallback to FallbackAction, &#34;</span>
</span></span><span class="line"><span class="cl">                <span class="sa">f</span><span class="s2">&#34;intent: </span><span class="si">{</span> <span class="n">intent</span> <span class="si">}</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">error</span> <span class="o">=</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">execute</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">connection_pool</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">str</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_error_check</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">query</span> <span class="o">=</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="sa">f</span><span class="s1">&#39;USE basketballplayer;&#39;</span>
</span></span><span class="line"><span class="cl">            <span class="sa">f</span><span class="s1">&#39;FIND NOLOOP PATH &#39;</span>
</span></span><span class="line"><span class="cl">            <span class="sa">f</span><span class="s1">&#39;FROM &#34;</span><span class="si">{</span><span class="bp">self</span><span class="o">.</span><span class="n">left_vid</span><span class="si">}</span><span class="s1">&#34; TO &#34;</span><span class="si">{</span><span class="bp">self</span><span class="o">.</span><span class="n">right_vid</span><span class="si">}</span><span class="s1">&#34; &#39;</span>
</span></span><span class="line"><span class="cl">            <span class="sa">f</span><span class="s1">&#39;OVER * BIDIRECT UPTO 4 STEPS;&#39;</span>
</span></span><span class="line"><span class="cl">            <span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="sa">f</span><span class="s2">&#34;[DEBUG] query for RelationshipAction :</span><span class="se">\n\t</span><span class="si">{</span> <span class="n">query</span> <span class="si">}</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">with</span> <span class="n">connection_pool</span><span class="o">.</span><span class="n">session_context</span><span class="p">(</span><span class="s2">&#34;root&#34;</span><span class="p">,</span> <span class="s2">&#34;nebula&#34;</span><span class="p">)</span> <span class="k">as</span> <span class="n">session</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">result</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="n">query</span><span class="p">)</span>        <span class="c1">#--------------------&gt; 1.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="ow">not</span> <span class="n">result</span><span class="o">.</span><span class="n">is_succeeded</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">                <span class="sa">f</span><span class="s2">&#34;Something is wrong on Graph Database connection when query &#34;</span>
</span></span><span class="line"><span class="cl">                <span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span> <span class="n">query</span> <span class="si">}</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">result</span><span class="o">.</span><span class="n">is_empty</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">                <span class="sa">f</span><span class="s2">&#34;There is no relationship between &#34;</span>
</span></span><span class="line"><span class="cl">                <span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span> <span class="bp">self</span><span class="o">.</span><span class="n">entity_left</span> <span class="si">}</span><span class="s2"> and </span><span class="si">{</span> <span class="bp">self</span><span class="o">.</span><span class="n">entity_right</span> <span class="si">}</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">path</span> <span class="o">=</span> <span class="n">result</span><span class="o">.</span><span class="n">row_values</span><span class="p">(</span><span class="mi">0</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">as_path</span><span class="p">()</span>    <span class="c1">#-------------------&gt; 2.</span>
</span></span><span class="line"><span class="cl">        <span class="n">relationships</span> <span class="o">=</span> <span class="n">path</span><span class="o">.</span><span class="n">relationships</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">relations_str</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="n">relationships</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">start_vertex_id</span><span class="p">()</span><span class="o">.</span><span class="n">as_string</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">rel_index</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">path</span><span class="o">.</span><span class="n">length</span><span class="p">()):</span>
</span></span><span class="line"><span class="cl">            <span class="n">rel</span> <span class="o">=</span> <span class="n">relationships</span><span class="p">[</span><span class="n">rel_index</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="n">relations_str</span> <span class="o">+=</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">                <span class="sa">f</span><span class="s2">&#34; </span><span class="si">{</span> <span class="n">rel</span><span class="o">.</span><span class="n">edge_name</span><span class="p">()</span> <span class="si">}</span><span class="s2">s &#34;</span>
</span></span><span class="line"><span class="cl">                <span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span> <span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">(</span><span class="n">rel</span><span class="o">.</span><span class="n">end_vertex_id</span><span class="p">()</span><span class="o">.</span><span class="n">as_string</span><span class="p">())</span> <span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="sa">f</span><span class="s2">&#34;There are at least </span><span class="si">{</span> <span class="n">result</span><span class="o">.</span><span class="n">row_size</span><span class="p">()</span> <span class="si">}</span><span class="s2"> relations between &#34;</span>
</span></span><span class="line"><span class="cl">            <span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span> <span class="bp">self</span><span class="o">.</span><span class="n">entity_left</span> <span class="si">}</span><span class="s2"> and </span><span class="si">{</span> <span class="bp">self</span><span class="o">.</span><span class="n">entity_right</span> <span class="si">}</span><span class="s2">, &#34;</span>
</span></span><span class="line"><span class="cl">            <span class="sa">f</span><span class="s2">&#34;one relation path is: </span><span class="si">{</span> <span class="n">relations_str</span> <span class="si">}</span><span class="s2">.&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>至此，咱们就已经实现了后端的所有功能，我们可以把它启动起来试试了！</p>
<h3 id="测试一下" class="headerLink">
    <a href="#%e6%b5%8b%e8%af%95%e4%b8%80%e4%b8%8b" class="header-mark"></a>4.3 测试一下</h3><h4 id="启动图数据库" class="headerLink">
    <a href="#%e5%90%af%e5%8a%a8%e5%9b%be%e6%95%b0%e6%8d%ae%e5%ba%93" class="header-mark"></a>4.3.1 启动图数据库</h4><p>我们在 Nebula Graph 里建立（导入数据）一个篮球的知识图谱。</p>
<blockquote>
<p>💡：在导入数据之前，请先部署一个 Nebula Graph 集群。最简便的部署方式是使用 Nebula-UP 这个小工具，只需要一行命令就能在 Linux 机器上同时启动一个 Nebula Graph 核心和可视化图探索工具 <a href="https://docs.nebula-graph.com.cn/2.6.1/nebula-studio/about-studio/st-ug-what-is-graph-studio/" target="_blank" rel="noopener noreffer">Nebula Graph Studio</a>。如果你更愿意用 Docker 部署，请参考<a href="https://docs.nebula-graph.com.cn/2.6.1/4.deployment-and-installation/2.compile-and-install-nebula-graph/3.deploy-nebula-graph-with-docker-compose/" target="_blank" rel="noopener noreffer">这个文档</a>。</p>
</blockquote>
<p>本文假设我们使用 <a href="https://siwei.io/nebula-up/" target="_blank" rel="noopener noreffer">Nebula-UP</a> 来部署一个 Nebula Graph：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">curl -fsSL nebula-up.siwei.io/install.sh <span class="p">|</span> bash
</span></span></code></pre></td></tr></table>
</div>
</div><p>之后，我们会看到这样的提示：</p>
<p><a class="lightgallery" href="https://github.com/wey-gu/nebula-up/raw/main/images/nebula-up-demo-shell.png" title="https://github.com/wey-gu/nebula-up/raw/main/images/nebula-up-demo-shell.png" data-thumbnail="https://github.com/wey-gu/nebula-up/raw/main/images/nebula-up-demo-shell.png">
        
    </a></p>
<p>按照提示，我们可以通过这个命令进入到有 Nebula Console 的容器里：</p>
<blockquote>
<p>💡：<a href="https://github.com/vesoft-inc/nebula-console" target="_blank" rel="noopener noreffer">Nebula Console</a> 是命令行访问 Nebula Graph 图数据库的客户端，支持 Linux，Windows 和 macOS，下载地址：<a href="https://github.com/vesoft-inc/nebula-console/releases" target="_blank" rel="noopener noreffer">这里</a></p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">~/.nebula-up/console.sh
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后，在 <code>#</code> 的提示符下就表示我们进来了，我们在里边可以执行：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">nebula-console -addr graphd -port 9669 -user root -p nebula
</span></span></code></pre></td></tr></table>
</div>
</div><p>这样就表示我们连接上了 Nebula Graph 图数据库：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="o">/</span><span class="w"> </span><span class="c1"># nebula-console -addr graphd -port 9669 -user root -p nebula
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Welcome</span><span class="w"> </span><span class="k">to</span><span class="w"> </span><span class="n">Nebula</span><span class="w"> </span><span class="n">Graph</span><span class="o">!</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[(</span><span class="n">none</span><span class="p">)]</span><span class="o">&gt;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>在这里，我们就可以通过 nGQL 去操作 Nebula Graph，不过我们先退出来，执行 <code>exit</code>：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="p">(</span><span class="n">root</span><span class="o">@</span><span class="n">nebula</span><span class="p">)</span><span class="w"> </span><span class="p">[(</span><span class="n">none</span><span class="p">)]</span><span class="o">&gt;</span><span class="w"> </span><span class="k">exit</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Bye</span><span class="w"> </span><span class="n">root</span><span class="o">!</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Fri</span><span class="p">,</span><span class="w"> </span><span class="mi">31</span><span class="w"> </span><span class="kt">Dec</span><span class="w"> </span><span class="mi">2021</span><span class="w"> </span><span class="mi">04</span><span class="p">:</span><span class="mi">11</span><span class="p">:</span><span class="mi">28</span><span class="w"> </span><span class="n">UTC</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>我们在这个容器内把基于 nGQL 语句的数据下载下来：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">/ <span class="c1"># wget https://docs.nebula-graph.io/2.0/basketballplayer-2.X.ngql</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后通过 Nebula Console 的 <code>-f &lt;file_path&gt;</code> 把数据导入进去：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">nebula-console -addr graphd -port <span class="m">9669</span> -user root -p nebula -f basketballplayer-2.X.ngql
</span></span></code></pre></td></tr></table>
</div>
</div><p>至此，我们就启动了一个 Nebula Graph 图数据库，还在里边加载了篮球的知识图谱！</p>
<blockquote>
<p>💡：还记得前边我们提到的 <a href="https://nebula-graph.com.cn/demo/" target="_blank" rel="noopener noreffer">在线体验</a> 环境么？现在，我们可以在这个利用 Nebula-UP 部署了 Nebula 的环境里启动自己的 Nebula Studio 啦，按照上边 Nebula-UP 的提示：http://&lt;本机IP&gt;:7001 就是它的地址，然后大家可以参考<a href="https://docs.nebula-graph.com.cn/2.6.1/nebula-studio/deploy-connect/st-ug-connect/" target="_blank" rel="noopener noreffer">文档</a>和<a href="https://www.bilibili.com/video/BV1hq4y1177e" target="_blank" rel="noopener noreffer">在线体验介绍</a>去了解更多。</p>
<p><a class="lightgallery" href="https://nebula-website-cn.oss-cn-hangzhou.aliyuncs.com/nebula-website/images/demo/demo1.png" title="studio" data-thumbnail="https://nebula-website-cn.oss-cn-hangzhou.aliyuncs.com/nebula-website/images/demo/demo1.png">
        
    </a></p>
</blockquote>
<h4 id="启动-siwi-backend" class="headerLink">
    <a href="#%e5%90%af%e5%8a%a8-siwi-backend" class="header-mark"></a>4.3.2 启动 Siwi-backend</h4><p>大家可以直接 clone 我的代码：<code>git clone https://github.com/wey-gu/nebula-siwi/</code></p>
<p>然后安装、启动 Siwi Backend：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> nebula-siwi
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Install dependencies</span>
</span></span><span class="line"><span class="cl">python3 -m pip install -r src/requirements.txt
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Install siwi backend</span>
</span></span><span class="line"><span class="cl">python3 -m build
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Configure Nebula Graph Endpoint</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">NG_ENDPOINTS</span><span class="o">=</span>127.0.0.1:9669
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Run Backend API server</span>
</span></span><span class="line"><span class="cl">gunicorn --bind :5000 wsgi --workers <span class="m">1</span> --threads <span class="m">1</span> --timeout <span class="m">60</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>启动之后，我们可以另外开窗口，通过 cURL 去发起问题给 backend，更多细节大家可以参考 GitHub 上的 README：</p>
<p><a href="https://github.com/wey-gu/nebula-siwi/blob/main/images/backend-demo.webp" target="_blank" rel="noopener noreffer"><a class="lightgallery" href="https://github.com/wey-gu/nebula-siwi/raw/main/images/backend-demo.webp" title="backend-demo" data-thumbnail="https://github.com/wey-gu/nebula-siwi/raw/main/images/backend-demo.webp">
        
    </a></a></p>
<p>至此，我们已经写好了 QA 系统的重要的代码啦，大家是不是对一个 KBQA 的构成有了更清晰的概念了呢？</p>
<p>接下来，我们为它增加一个界面！</p>
<h2 id="siwi-frontend" class="headerLink">
    <a href="#siwi-frontend" class="header-mark"></a>5 Siwi-frontend</h2><h3 id="聊天界面" class="headerLink">
    <a href="#%e8%81%8a%e5%a4%a9%e7%95%8c%e9%9d%a2" class="header-mark"></a>5.1 聊天界面</h3><p>我们利用 <a href="https://github.com/juzser/vue-bot-ui" target="_blank" rel="noopener noreffer">Vue Bot UI</a> 这个可爱的机器人界面的 Vue 实现可以很容易构造一个</p>
<p>代码段：<code>src/siwi/frontend/src/App.vue</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vue" data-lang="vue"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">template</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;app&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">VueBotUI</span>
</span></span><span class="line"><span class="cl">      <span class="nt">:messages</span><span class="s">=&#34;msg&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">:options</span><span class="s">=&#34;botOptions&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">:bot-typing</span><span class="s">=&#34;locking&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">:input-disable</span><span class="s">=&#34;locking&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">@msg-send</span><span class="s">=&#34;msgSender&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">template</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="kr">import</span> <span class="p">{</span> <span class="nx">VueBotUI</span> <span class="p">}</span> <span class="nx">from</span> <span class="s1">&#39;vue-bot-ui&#39;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><a href="https://github.com/wey-gu/nebula-siwi/blob/main/src/siwi_frontend/images/demo.webp" target="_blank" rel="noopener noreffer"><a class="lightgallery" href="https://github.com/wey-gu/nebula-siwi/raw/main/src/siwi_frontend/images/demo.webp" title="demo" data-thumbnail="https://github.com/wey-gu/nebula-siwi/raw/main/src/siwi_frontend/images/demo.webp">
        
    </a></a></p>
<p>注意到那个小飞机按钮了吧，它是发出问题请求的按键，我们要在按下它的时候对后端做出请求。</p>
<h3 id="访问后端" class="headerLink">
    <a href="#%e8%ae%bf%e9%97%ae%e5%90%8e%e7%ab%af" class="header-mark"></a>5.2 访问后端</h3><p>这部分用到了<a href="https://github.com/axios/axios" target="_blank" rel="noopener noreffer">Axios</a>，它是浏览器里访问其他地址的 HTTP 客户端。</p>
<ol>
<li>在按下的时候，<code>@msg-send=&quot;msgSender&quot;</code> 会触发 <code>msgSender()</code></li>
<li><code> msgSender()</code>去构造<code>axios.post(this.apiEndpoint, { &quot;question&quot;: data.text })</code> 的请求给 Siwi 的后端</li>
<li>后端的结果被 <code>push()</code> 到界面的聊天消息里，渲染出来 <code>this.msg.push()</code></li>
</ol>
<p>代码段：<code>src/siwi/frontend/src/App.vue</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vue" data-lang="vue"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">template</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;app&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">     <span class="p">&lt;</span><span class="nt">VueBotUI</span>
</span></span><span class="line"><span class="cl">      <span class="nt">:messages</span><span class="s">=&#34;msg&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">:options</span><span class="s">=&#34;botOptions&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">:bot-typing</span><span class="s">=&#34;locking&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">:input-disable</span><span class="s">=&#34;locking&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">@msg-send</span><span class="s">=&#34;msgSender&#34;</span>         <span class="err">----------------</span> <span class="na">1.</span>
</span></span><span class="line"><span class="cl">    <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">template</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="kr">import</span> <span class="p">{</span> <span class="nx">VueBotUI</span> <span class="p">}</span> <span class="nx">from</span> <span class="s1">&#39;vue-bot-ui&#39;</span>
</span></span><span class="line"><span class="cl"><span class="kr">import</span> <span class="nx">axios</span> <span class="nx">from</span> <span class="s2">&#34;axios&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">export</span> <span class="k">default</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;App&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">components</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">VueBotUI</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nx">methods</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">msgSender</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="k">this</span><span class="p">.</span><span class="nx">msg</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">        <span class="nx">agent</span><span class="o">:</span> <span class="s2">&#34;user&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nx">type</span><span class="o">:</span> <span class="s2">&#34;text&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nx">text</span><span class="o">:</span> <span class="nx">data</span><span class="p">.</span><span class="nx">text</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">      <span class="k">this</span><span class="p">.</span><span class="nx">locking</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">      <span class="nx">axios</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">apiEndpoint</span><span class="p">,</span> <span class="p">{</span> <span class="s2">&#34;question&#34;</span><span class="o">:</span> <span class="nx">data</span><span class="p">.</span><span class="nx">text</span> <span class="p">}).</span><span class="nx">then</span><span class="p">((</span><span class="nx">response</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">response</span><span class="p">);</span>   <span class="o">-----------------</span> <span class="mf">2.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">this</span><span class="p">.</span><span class="nx">msg</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span>          <span class="o">-----------------</span> <span class="mf">3.</span>
</span></span><span class="line"><span class="cl">          <span class="nx">agent</span><span class="o">:</span> <span class="s2">&#34;bot&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="nx">type</span><span class="o">:</span> <span class="s2">&#34;text&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="nx">text</span><span class="o">:</span> <span class="nx">response</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">answer</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">this</span><span class="p">.</span><span class="nx">synthText</span> <span class="o">=</span> <span class="nx">response</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">answer</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">this</span><span class="p">.</span><span class="nx">agentSpeak</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">this</span><span class="p">.</span><span class="nx">locking</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="p">});</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>现在，我们已经有了一个图形界面的机器人啦，不过，更进一步，我们可以利用现代浏览器的接口，实现语音识别和机器人说话！</p>
<h3 id="语音识别" class="headerLink">
    <a href="#%e8%af%ad%e9%9f%b3%e8%af%86%e5%88%ab" class="header-mark"></a>5.3 语音识别</h3><p>我们借助于 <a href="https://github.com/Drackokacka/vue-web-speech" target="_blank" rel="noopener noreffer">Vue Web Speech</a>, 这个语音 API 的 VueJS 的绑定，可以很容易在按下 🎙️ 的时候接收人的语音，并把语音转换成文字发出去，在回答被返回之后，它（还是他/她😁？）也会把回答的句子读出来给用户。</p>
<ol>
<li><code>record</code> 在 <code>🎙️</code> 被按下之后，变成 <code>👂</code></li>
<li>触发 <code>onResults()</code> 监听</li>
<li>把返回结果发给 <code>this.synthText</code> 合成器，准备读出</li>
<li><code>&lt;vue-web-speech-synth&gt;</code> 把语音读出</li>
</ol>
<p>代码段：<code>src/siwi/frontend/src/App.vue</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vue" data-lang="vue"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">template</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;app&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">button</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;mic_btn&#34;</span> <span class="err">@</span><span class="na">click</span><span class="o">=</span><span class="s">&#34;record = !record&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">{{</span><span class="nx">record</span><span class="o">?</span><span class="s1">&#39;👂&#39;</span><span class="o">:</span><span class="s1">&#39;🎙️&#39;</span><span class="p">}}</span>      <span class="o">--------------------------&gt;</span> <span class="mf">1.</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">button</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">vue-web-speech</span>
</span></span><span class="line"><span class="cl">      <span class="na">v</span><span class="nt">-model</span><span class="err">=&#34;</span><span class="na">record</span><span class="err">&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">@results</span><span class="s">=&#34;onResults&#34;</span>       <span class="err">--------------------------</span><span class="p">&gt;</span> <span class="mf">1.</span>
</span></span><span class="line"><span class="cl">      <span class="err">@</span><span class="nx">unrecognized</span><span class="o">=</span><span class="s2">&#34;unrecognized&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&lt;</span><span class="err">/vue-web-speech&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">...</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">vue-web-speech-synth</span>
</span></span><span class="line"><span class="cl">      <span class="na">v</span><span class="nt">-model</span><span class="err">=&#34;</span><span class="na">agentSpeak</span><span class="err">&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">:voice</span><span class="s">=&#34;synthVoice&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">:text</span><span class="s">=&#34;synthText&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">@list-voices</span><span class="s">=&#34;listVoices&#34;</span>  <span class="err">--------------------------</span><span class="p">&gt;</span> <span class="mf">4.</span>
</span></span><span class="line"><span class="cl">    <span class="o">/&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">template</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="kr">import</span> <span class="p">{</span> <span class="nx">VueBotUI</span> <span class="p">}</span> <span class="nx">from</span> <span class="s1">&#39;vue-bot-ui&#39;</span>
</span></span><span class="line"><span class="cl"><span class="kr">import</span> <span class="nx">axios</span> <span class="nx">from</span> <span class="s2">&#34;axios&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">export</span> <span class="k">default</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;App&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">components</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">VueBotUI</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nx">onResults</span> <span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>             <span class="o">-------------------------&gt;</span> <span class="mf">2.</span>
</span></span><span class="line"><span class="cl">      <span class="k">this</span><span class="p">.</span><span class="nx">results</span> <span class="o">=</span> <span class="nx">data</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="k">this</span><span class="p">.</span><span class="nx">locking</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">      <span class="k">this</span><span class="p">.</span><span class="nx">msg</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">        <span class="nx">agent</span><span class="o">:</span> <span class="s2">&#34;user&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nx">type</span><span class="o">:</span> <span class="s2">&#34;text&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nx">text</span><span class="o">:</span> <span class="nx">data</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">      <span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">      <span class="k">this</span><span class="p">.</span><span class="nx">locking</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">      <span class="nx">axios</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">apiEndpoint</span><span class="p">,</span> <span class="p">{</span> <span class="s2">&#34;question&#34;</span><span class="o">:</span> <span class="nx">data</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="p">}).</span><span class="nx">then</span><span class="p">((</span><span class="nx">response</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">response</span><span class="p">.</span><span class="nx">data</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">this</span><span class="p">.</span><span class="nx">msg</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">          <span class="nx">agent</span><span class="o">:</span> <span class="s2">&#34;bot&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="nx">type</span><span class="o">:</span> <span class="s2">&#34;text&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="nx">text</span><span class="o">:</span> <span class="nx">response</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">answer</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">this</span><span class="p">.</span><span class="nx">synthText</span> <span class="o">=</span> <span class="nx">response</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">answer</span><span class="p">;</span>  <span class="o">----------&gt;</span> <span class="mf">3.</span>
</span></span><span class="line"><span class="cl">        <span class="k">this</span><span class="p">.</span><span class="nx">agentSpeak</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="p">});</span>
</span></span><span class="line"><span class="cl">      <span class="k">this</span><span class="p">.</span><span class="nx">locking</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="总结" class="headerLink">
    <a href="#%e6%80%bb%e7%bb%93" class="header-mark"></a>6 总结</h2><p>至此，我们已经学会了搭建自己的第一个 KBQA：知识图谱驱动的问答系统。</p>
<p>回顾下它的代码结构：</p>
<ul>
<li><code>src/siwi</code> 对应后端
<ul>
<li>App 是 Flask API 处理的部分</li>
<li>Bot 是处理请求、访问 Nebula Graph 的部分</li>
</ul>
</li>
<li><code>src/siwi_frontend</code> 是前端</li>
</ul>
<p>希望大家在这个简陋的基础之上，多多探索，做出来更加成熟的聊天机器人，欢迎你来给我邮件、留言告诉我呀，这里：https://siwei.io/about 有我的联系方式。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">.
</span></span><span class="line"><span class="cl">├── README.md
</span></span><span class="line"><span class="cl">├── src
</span></span><span class="line"><span class="cl">│   ├── siwi                        <span class="c1"># Siwi-API Backend</span>
</span></span><span class="line"><span class="cl">│   │   ├── app                     <span class="c1"># Web Server, take HTTP requests and calls Bot API</span>
</span></span><span class="line"><span class="cl">│   │   └── bot                     <span class="c1"># Bot API</span>
</span></span><span class="line"><span class="cl">│   │       ├── actions             <span class="c1"># Take Intent, Slots, Query Knowledge Graph here</span>
</span></span><span class="line"><span class="cl">│   │       ├── bot                 <span class="c1"># Entrypoint of the Bot API</span>
</span></span><span class="line"><span class="cl">│   │       ├── classifier          <span class="c1"># Symentic Parsing, Intent Matching, Slot Filling</span>
</span></span><span class="line"><span class="cl">│   │       └── <span class="nb">test</span>                <span class="c1"># Example Data Source as equivalent/mocked module</span>
</span></span><span class="line"><span class="cl">│   └── siwi_frontend               <span class="c1"># Browser End</span>
</span></span><span class="line"><span class="cl">│       ├── README.md
</span></span><span class="line"><span class="cl">│       ├── package.json
</span></span><span class="line"><span class="cl">│       └── src
</span></span><span class="line"><span class="cl">│           ├── App.vue             <span class="c1"># Listening to user and pass Questions to Siwi-API</span>
</span></span><span class="line"><span class="cl">│           └── main.js
</span></span><span class="line"><span class="cl">└── wsgi.py
</span></span></code></pre></td></tr></table>
</div>
</div><p>如果你很喜欢这样的小项目，欢迎来看看我之前的分享： 「<a href="https://siwei.io/corp-rel-graph/" target="_blank" rel="noopener noreffer">从0-1：如何构建一个企业股权图谱系统？</a>」哦。</p>
<blockquote>
<p>💡：你知道吗，我其实借助于 Katacoda 已经为大家搭建了一个交互式体验 Siwi + Nebula 的部署的环境，如果您的网络条件够快（Katacoda服务器在国外），可以在<a href="https://siwei.io/learn/nebula-101-siwi-kgqa/" target="_blank" rel="noopener noreffer">这里</a>点点鼠标就交互式体验它。</p>
<p>视频介绍</p>
<iframe src="//player.bilibili.com/player.html?aid=421964672&bvid=BV1Rm4y1Q7B5&cid=448090671&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
</blockquote>
<h2 id="感谢用到的开源项目-" class="headerLink">
    <a href="#%e6%84%9f%e8%b0%a2%e7%94%a8%e5%88%b0%e7%9a%84%e5%bc%80%e6%ba%90%e9%a1%b9%e7%9b%ae-" class="header-mark"></a>7 感谢用到的开源项目 ❤️</h2><p>这个小项目里我们用到了好多开源的项目，非常感谢这些贡献者们的慷慨与无私，开源是不是很酷呢？</p>
<h3 id="backend" class="headerLink">
    <a href="#backend" class="header-mark"></a>7.1 Backend</h3><ul>
<li><a href="https://github.com/liuhuanyong/QASystemOnMedicalKG" target="_blank" rel="noopener noreffer">KGQA on MedicalKG</a> by <a href="https://liuhuanyong.github.io/" target="_blank" rel="noopener noreffer">Huanyong Liu</a></li>
<li><a href="https://github.com/pallets/flask" target="_blank" rel="noopener noreffer">Flask</a></li>
<li><a href="https://github.com/WojciechMula/pyahocorasick" target="_blank" rel="noopener noreffer">pyahocorasick</a> created by <a href="http://0x80.pl/" target="_blank" rel="noopener noreffer">Wojciech Muła</a></li>
<li><a href="https://pyyaml.org/" target="_blank" rel="noopener noreffer">PyYaml</a></li>
</ul>
<h3 id="frontend" class="headerLink">
    <a href="#frontend" class="header-mark"></a>7.2 Frontend</h3><ul>
<li><a href="https://vuejs.org/" target="_blank" rel="noopener noreffer">VueJS</a> for frontend framework</li>
<li><a href="https://github.com/juzser/vue-bot-ui" target="_blank" rel="noopener noreffer">Vue Bot UI</a>, as a lovely bot UI in vue</li>
<li><a href="https://github.com/Drackokacka/vue-web-speech" target="_blank" rel="noopener noreffer">Vue Web Speech</a>, for speech API vue wrapper</li>
<li><a href="https://github.com/axios/axios" target="_blank" rel="noopener noreffer">Axios</a> for browser http client</li>
<li><a href="https://en.wikipedia.org/wiki/Solarized_%28color_scheme%29" target="_blank" rel="noopener noreffer">Solarized</a> for color scheme</li>
<li><a href="https://github.com/alvarosaburido/vitesome" target="_blank" rel="noopener noreffer">Vitesome</a> for landing page design</li>
</ul>
<h3 id="graph-database" class="headerLink">
    <a href="#graph-database" class="header-mark"></a>7.3 Graph Database</h3><ul>
<li><a href="https://github.com/vesoft-inc/nebula/" target="_blank" rel="noopener noreffer">Nebula Graph</a> 高性能、云原生的开源分布式图数据库</li>
</ul>]]></description>
</item><item>
    <title>快速搭建调试 Nebula Graph Python Storage 客户端的环境</title>
    <link>https://siwei.io/nebula-python-storage-docker-guide/</link>
    <pubDate>Fri, 10 Dec 2021 16:03:07 &#43;0800</pubDate><author>
        <name>Wey Gu</name>
    </author><guid>https://siwei.io/nebula-python-storage-docker-guide/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/nebula-python-storage-docker-guide/featured-image.webp" referrerpolicy="no-referrer">
            </div><blockquote>
<p>Python Storage Client 连不上第一次安装的 Nebula Graph？ Docker 部署情况下使用 Python Storage Client 指南</p>
</blockquote>
<h2 id="前置条件" class="headerLink">
    <a href="#%e5%89%8d%e7%bd%ae%e6%9d%a1%e4%bb%b6" class="header-mark"></a>1 前置条件</h2><blockquote>
<p>注意：一个重要的前置条件是我们真的需要 Storage Client，如果我们只需要在 Python Client 里通过 nGQL 来请求数据，那么 GraphClient 才是你需要的，可以跳过本文。</p>
</blockquote>
<p>对于刚接触 Nebula 的同学，部署集群最快速的方式是用 Docker Compose，安装部署可以参考文档：<a href="https://docs.nebula-graph.com.cn/2.6.1/4.deployment-and-installation/2.compile-and-install-nebula-graph/3.deploy-nebula-graph-with-docker-compose/" target="_blank" rel="noopener noreffer">deploy-nebula-graph-with-docker-compose</a>。</p>
<p>在 <code>docker compose up -d</code> 之后，我们的 nebula 集群就起来了，我们可以用 <code>docker ps</code> 看看运行着的容器：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">❯ docker ps --format <span class="s2">&#34;table {{.Names}}\t{{.Ports}}&#34;</span>
</span></span><span class="line"><span class="cl">NAMES                               PORTS
</span></span><span class="line"><span class="cl">nebula-docker-compose-graphd1-1     0.0.0.0:61852-&gt;9669/tcp, 0.0.0.0:61850-&gt;19669/tcp, 0.0.0.0:61851-&gt;19670/tcp
</span></span><span class="line"><span class="cl">nebula-docker-compose-graphd-1      0.0.0.0:9669-&gt;9669/tcp, 0.0.0.0:61858-&gt;19669/tcp, 0.0.0.0:61859-&gt;19670/tcp
</span></span><span class="line"><span class="cl">nebula-docker-compose-graphd2-1     0.0.0.0:61855-&gt;9669/tcp, 0.0.0.0:61853-&gt;19669/tcp, 0.0.0.0:61854-&gt;19670/tcp
</span></span><span class="line"><span class="cl">nebula-docker-compose-storaged2-1   9777-9778/tcp, 9780/tcp, 0.0.0.0:61868-&gt;9779/tcp, 0.0.0.0:61869-&gt;19779/tcp, 0.0.0.0:61870-&gt;19780/tcp
</span></span><span class="line"><span class="cl">nebula-docker-compose-storaged1-1   9777-9778/tcp, 9780/tcp, 0.0.0.0:61865-&gt;9779/tcp, 0.0.0.0:61866-&gt;19779/tcp, 0.0.0.0:61864-&gt;19780/tcp
</span></span><span class="line"><span class="cl">nebula-docker-compose-storaged0-1   9777-9778/tcp, 9780/tcp, 0.0.0.0:61845-&gt;9779/tcp, 0.0.0.0:61843-&gt;19779/tcp, 0.0.0.0:61844-&gt;19780/tcp
</span></span><span class="line"><span class="cl">nebula-docker-compose-metad1-1      9560/tcp, 0.0.0.0:61705-&gt;9559/tcp, 0.0.0.0:61706-&gt;19559/tcp, 0.0.0.0:61707-&gt;19560/tcp
</span></span><span class="line"><span class="cl">nebula-docker-compose-metad2-1      9560/tcp, 0.0.0.0:61699-&gt;9559/tcp, 0.0.0.0:61700-&gt;19559/tcp, 0.0.0.0:61701-&gt;19560/tcp
</span></span><span class="line"><span class="cl">nebula-docker-compose-metad0-1      9560/tcp, 0.0.0.0:61704-&gt;9559/tcp, 0.0.0.0:61702-&gt;19559/tcp, 0.0.0.0:61703-&gt;19560/tcp
</span></span></code></pre></td></tr></table>
</div>
</div><p>这里边有三种容器 ：</p>
<ul>
<li><code>GrpahD</code>，查询引擎，也是我们用户进行登录、连接、发 Query 请求直接访问的唯一一种服务、接口。</li>
<li><code>MetaD</code>，元数据服务，它一般不会暴露给外部，只有 GraphD 、StorageD 会直接访问它。</li>
<li><code>StorageD</code>，存储引擎，它一般不会暴露给外部，只有 GraphD、StorageD 会直接访问它。</li>
</ul>
<p>我们可以从 Stuido Console，或者 Nebula Console （连接到 GraphD 之后）里通过 <code>SHOW HOSTS &lt;Type&gt;</code>，来获取每种服务的信息，其中第一列的信息就是他们的 IP 或者 Host，下边的例子是 Docker Compose 默认配置下的情况。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="o">(</span>root@nebula<span class="o">)</span> <span class="o">[(</span>none<span class="o">)]</span>&gt; SHOW HOSTS GRAPH
</span></span><span class="line"><span class="cl">+-----------+------+----------+---------+--------------+---------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> Host      <span class="p">|</span> Port <span class="p">|</span> Status   <span class="p">|</span> Role    <span class="p">|</span> Git Info Sha <span class="p">|</span> Version <span class="p">|</span>
</span></span><span class="line"><span class="cl">+-----------+------+----------+---------+--------------+---------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> <span class="s2">&#34;graphd&#34;</span>  <span class="p">|</span> <span class="m">9669</span> <span class="p">|</span> <span class="s2">&#34;ONLINE&#34;</span> <span class="p">|</span> <span class="s2">&#34;GRAPH&#34;</span> <span class="p">|</span> <span class="s2">&#34;3ba41bd&#34;</span>    <span class="p">|</span> <span class="s2">&#34;2.6.0&#34;</span> <span class="p">|</span>
</span></span><span class="line"><span class="cl">+-----------+------+----------+---------+--------------+---------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> <span class="s2">&#34;graphd1&#34;</span> <span class="p">|</span> <span class="m">9669</span> <span class="p">|</span> <span class="s2">&#34;ONLINE&#34;</span> <span class="p">|</span> <span class="s2">&#34;GRAPH&#34;</span> <span class="p">|</span> <span class="s2">&#34;3ba41bd&#34;</span>    <span class="p">|</span> <span class="s2">&#34;2.6.0&#34;</span> <span class="p">|</span>
</span></span><span class="line"><span class="cl">+-----------+------+----------+---------+--------------+---------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> <span class="s2">&#34;graphd2&#34;</span> <span class="p">|</span> <span class="m">9669</span> <span class="p">|</span> <span class="s2">&#34;ONLINE&#34;</span> <span class="p">|</span> <span class="s2">&#34;GRAPH&#34;</span> <span class="p">|</span> <span class="s2">&#34;3ba41bd&#34;</span>    <span class="p">|</span> <span class="s2">&#34;2.6.0&#34;</span> <span class="p">|</span>
</span></span><span class="line"><span class="cl">+-----------+------+----------+---------+--------------+---------+
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">(</span>root@nebula<span class="o">)</span> <span class="o">[(</span>none<span class="o">)]</span>&gt; SHOW HOSTS META
</span></span><span class="line"><span class="cl">+----------+------+----------+--------+--------------+---------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> Host     <span class="p">|</span> Port <span class="p">|</span> Status   <span class="p">|</span> Role   <span class="p">|</span> Git Info Sha <span class="p">|</span> Version <span class="p">|</span>
</span></span><span class="line"><span class="cl">+----------+------+----------+--------+--------------+---------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> <span class="s2">&#34;metad1&#34;</span> <span class="p">|</span> <span class="m">9559</span> <span class="p">|</span> <span class="s2">&#34;ONLINE&#34;</span> <span class="p">|</span> <span class="s2">&#34;META&#34;</span> <span class="p">|</span> <span class="s2">&#34;3ba41bd&#34;</span>    <span class="p">|</span> <span class="s2">&#34;2.6.0&#34;</span> <span class="p">|</span>
</span></span><span class="line"><span class="cl">+----------+------+----------+--------+--------------+---------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> <span class="s2">&#34;metad0&#34;</span> <span class="p">|</span> <span class="m">9559</span> <span class="p">|</span> <span class="s2">&#34;ONLINE&#34;</span> <span class="p">|</span> <span class="s2">&#34;META&#34;</span> <span class="p">|</span> <span class="s2">&#34;3ba41bd&#34;</span>    <span class="p">|</span> <span class="s2">&#34;2.6.0&#34;</span> <span class="p">|</span>
</span></span><span class="line"><span class="cl">+----------+------+----------+--------+--------------+---------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> <span class="s2">&#34;metad2&#34;</span> <span class="p">|</span> <span class="m">9559</span> <span class="p">|</span> <span class="s2">&#34;ONLINE&#34;</span> <span class="p">|</span> <span class="s2">&#34;META&#34;</span> <span class="p">|</span> <span class="s2">&#34;3ba41bd&#34;</span>    <span class="p">|</span> <span class="s2">&#34;2.6.0&#34;</span> <span class="p">|</span>
</span></span><span class="line"><span class="cl">+----------+------+----------+--------+--------------+---------+
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">(</span>root@nebula<span class="o">)</span> <span class="o">[(</span>none<span class="o">)]</span>&gt; SHOW HOSTS STORAGE
</span></span><span class="line"><span class="cl">+-------------+------+----------+-----------+--------------+---------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> Host        <span class="p">|</span> Port <span class="p">|</span> Status   <span class="p">|</span> Role      <span class="p">|</span> Git Info Sha <span class="p">|</span> Version <span class="p">|</span>
</span></span><span class="line"><span class="cl">+-------------+------+----------+-----------+--------------+---------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> <span class="s2">&#34;storaged0&#34;</span> <span class="p">|</span> <span class="m">9779</span> <span class="p">|</span> <span class="s2">&#34;ONLINE&#34;</span> <span class="p">|</span> <span class="s2">&#34;STORAGE&#34;</span> <span class="p">|</span> <span class="s2">&#34;3ba41bd&#34;</span>    <span class="p">|</span> <span class="s2">&#34;2.6.0&#34;</span> <span class="p">|</span>
</span></span><span class="line"><span class="cl">+-------------+------+----------+-----------+--------------+---------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> <span class="s2">&#34;storaged1&#34;</span> <span class="p">|</span> <span class="m">9779</span> <span class="p">|</span> <span class="s2">&#34;ONLINE&#34;</span> <span class="p">|</span> <span class="s2">&#34;STORAGE&#34;</span> <span class="p">|</span> <span class="s2">&#34;3ba41bd&#34;</span>    <span class="p">|</span> <span class="s2">&#34;2.6.0&#34;</span> <span class="p">|</span>
</span></span><span class="line"><span class="cl">+-------------+------+----------+-----------+--------------+---------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> <span class="s2">&#34;storaged2&#34;</span> <span class="p">|</span> <span class="m">9779</span> <span class="p">|</span> <span class="s2">&#34;ONLINE&#34;</span> <span class="p">|</span> <span class="s2">&#34;STORAGE&#34;</span> <span class="p">|</span> <span class="s2">&#34;3ba41bd&#34;</span>    <span class="p">|</span> <span class="s2">&#34;2.6.0&#34;</span> <span class="p">|</span>
</span></span><span class="line"><span class="cl">+-------------+------+----------+-----------+--------------+---------+
</span></span></code></pre></td></tr></table>
</div>
</div><p>在默认的 <a href="https://github.com/vesoft-inc/nebula-docker-compose" target="_blank" rel="noopener noreffer">nebula-docker-compose</a> 的配置下各个服务为<code>graphd</code>, <code>metad1</code>, <code>storaged0</code> 这种域名的 Host 格式，这其实是假设了我们使用 Docker 启动的服务一般是作为单机测试之用，除了其中的 <code>graphd</code>之外，其他的服务都没有指定固定的外部映射端口（见前边的 <code>docker ps</code>  的结果里，它暴露在<code>0.0.0.0:9669</code>)。</p>
<p>这意味着，如果客户端不是运行在本机，访问其他服务的端口都是动态的，这会让很多第一次想用 Python Storage Client 连接服务的同学卡住。</p>
<p>所以我这里给大家分享一个快速用 Python 去调试 Storage Client 的方法：</p>
<blockquote>
<p>本质上我们可以通过修改 Compose 的配置文件、通过其他部署或者配置的方式安装 Nebula 来保证 Python Client 能够访问 Storage/Meta 服务，这里只是给出一个无需修改配置的方法：让 Python 运行环境处在 Docker Compose 的 Nebula Cluster 同一个容器网络。</p>
</blockquote>
<h3 id="第一步把-python-容器" class="headerLink">
    <a href="#%e7%ac%ac%e4%b8%80%e6%ad%a5%e6%8a%8a-python-%e5%ae%b9%e5%99%a8" class="header-mark"></a>1.1 第一步，把 Python 容器</h3><p>在 <code>nebula-docker-compose_nebula-net</code> 这个容器网络启动一个 Jupyter 的容器。</p>
<blockquote>
<p>这里采用了 <a href="https://github.com/jupyter/docker-stacks" target="_blank" rel="noopener noreffer">https://github.com/jupyter/docker-stacks</a> 维护的 Docker Image。</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker run <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -p 8888:8888 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --network nebula-docker-compose_nebula-net <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    jupyter/scipy-notebook:33add21fab64
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>可以看到容器了，并且在监听端口：8888。</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>I 07:06:31.060 NotebookApp<span class="o">]</span> Jupyter Notebook 6.3.0 is running at:
</span></span><span class="line"><span class="cl"><span class="o">[</span>I 07:06:31.060 NotebookApp<span class="o">]</span> http://e170a5eb4858:8888/?token<span class="o">=</span>5beafb26fc6995b081c611d5d2cc96d557897b74bfdaac53
</span></span><span class="line"><span class="cl"><span class="o">[</span>I 07:06:31.060 NotebookApp<span class="o">]</span> or http://127.0.0.1:8888/?token<span class="o">=</span>5beafb26fc6995b081c611d5d2cc96d557897b74bfdaac53
</span></span></code></pre></td></tr></table>
</div>
</div><p>这时候我们可在浏览器打开 http://127.0.0.1:8888/?token=5beafb26fc6995b081c611d5d2cc96d557897b74bfdaac53.</p>
<p>在里边新建一个 Notebook。</p>
<h3 id="第二步安装-nebula-python-sdk" class="headerLink">
    <a href="#%e7%ac%ac%e4%ba%8c%e6%ad%a5%e5%ae%89%e8%a3%85-nebula-python-sdk" class="header-mark"></a>1.2 第二步，安装 Nebula Python SDK</h3><p>我们只需要在 Jupyter 里执行</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="err">!</span><span class="n">pip</span> <span class="n">install</span> <span class="n">nebula2</span><span class="o">-</span><span class="n">python</span><span class="o">==</span><span class="mf">2.6.0</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>就可以了，具体的版本要根据 Nebula Python 的 README 里的<a href="https://github.com/vesoft-inc/nebula-python#how-to-choose-nebula-python" target="_blank" rel="noopener noreffer">版本对应</a>关系来给定。</p>
<h3 id="第三步实例化-metacache-和-graphstorageclient" class="headerLink">
    <a href="#%e7%ac%ac%e4%b8%89%e6%ad%a5%e5%ae%9e%e4%be%8b%e5%8c%96-metacache-%e5%92%8c-graphstorageclient" class="header-mark"></a>1.3 第三步，实例化 MetaCache 和 GraphStorageClient</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">nebula2.mclient</span> <span class="kn">import</span> <span class="n">MetaCache</span><span class="p">,</span> <span class="n">HostAddr</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">nebula2.sclient.GraphStorageClient</span> <span class="kn">import</span> <span class="n">GraphStorageClient</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Docker Compose 下默认 meta 的地址是 metad1 metad0 metad2</span>
</span></span><span class="line"><span class="cl"><span class="n">meta_cache</span> <span class="o">=</span> <span class="n">MetaCache</span><span class="p">([(</span><span class="s1">&#39;metad1&#39;</span><span class="p">,</span><span class="mi">9559</span><span class="p">),(</span><span class="s1">&#39;metad0&#39;</span><span class="p">,</span><span class="mi">9559</span><span class="p">),(</span><span class="s1">&#39;metad2&#39;</span><span class="p">,</span><span class="mi">9559</span><span class="p">)])</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">graph_storage_client</span> <span class="o">=</span> <span class="n">GraphStorageClient</span><span class="p">(</span><span class="n">meta_cache</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="第四步扫数据" class="headerLink">
    <a href="#%e7%ac%ac%e5%9b%9b%e6%ad%a5%e6%89%ab%e6%95%b0%e6%8d%ae" class="header-mark"></a>1.4 第四步，扫数据</h3><ul>
<li>按空间、点类型扫点</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">resp</span> <span class="o">=</span> <span class="n">graph_storage_client</span><span class="o">.</span><span class="n">scan_vertex</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="n">space_name</span><span class="o">=</span><span class="s1">&#39;basketballplayer&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">tag_name</span><span class="o">=</span><span class="s1">&#39;player&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">while</span> <span class="n">resp</span><span class="o">.</span><span class="n">has_next</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="n">result</span> <span class="o">=</span> <span class="n">resp</span><span class="o">.</span><span class="n">next</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">vertex_data</span> <span class="ow">in</span> <span class="n">result</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="n">vertex_data</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>按空间、边类型扫边</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">resp</span> <span class="o">=</span> <span class="n">graph_storage_client</span><span class="o">.</span><span class="n">scan_edge</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">space_name</span><span class="o">=</span><span class="s1">&#39;basketballplayer&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">edge_name</span><span class="o">=</span><span class="s1">&#39;follow&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">while</span> <span class="n">resp</span><span class="o">.</span><span class="n">has_next</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="n">result</span> <span class="o">=</span> <span class="n">resp</span><span class="o">.</span><span class="n">next</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">edge_data</span> <span class="ow">in</span> <span class="n">result</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="n">edge_data</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Jupyter 的过程我也记录在<a href="https://siwei.io/nebula-python-storage-docker-guide/Storage_Client_Example.ipynb" target="_blank" rel="noopener noreffer">这个 notebook</a> 里方便大家参考。</p>
<p>Happy Graphing!</p>
<blockquote>
<p>Picture Credit：<a href="https://unsplash.com/photos/AMXFr97d00c" target="_blank" rel="noopener noreffer">Borderpolar Photographer</a></p>
</blockquote>]]></description>
</item></channel>
</rss>
